[{"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\index.js":"1","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\App.js":"2","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\store.js":"3","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\ProtectedRoute.js":"4","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\auth.js":"5","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\Register\\RegisterMinistry.js":"6","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\Register\\RegisterUser.js":"7","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\Register\\RegisterTypes.js":"8","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\login\\Login.js":"9","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\Reset\\Reset.js":"10","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\HomePage\\HomePage.js":"11","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Dashboard\\Dashboard.js":"12","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\types.js":"13","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\events.js":"14","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Friends.js":"15","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Market.js":"16","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Footer\\Footer.js":"17","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Container\\Container.js":"18","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Header\\Header.js":"19","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Menu\\Menu.js":"20","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\index.js":"21","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Header\\Notification.js":"22","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Gallery.js":"23","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Invited.js":"24","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Attended.js":"25","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\Profile.js":"26","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\board\\Replies.js":"27","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\products\\ProductItem.js":"28","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\watch\\Watch.js":"29","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\newsfeed\\Newfeed.js":"30","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\Userprofile.js":"31","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\404Page\\Page404.js":"32","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Search\\Searchitem.js":"33","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\messages\\Messages.js":"34","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\Cart.js":"35","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\500Page\\Page500.js":"36","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\Profile.js":"37","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\auth.red.js":"38","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\events.js":"39","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\friends.js":"40","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\Post.js":"41","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\cart.js":"42","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Market.js":"43","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\board\\Board.js":"44","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Eventitem.js":"45","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\market.js":"46","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\Board.js":"47","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Events.js":"48","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\Replies.js":"49","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\Steppers.js":"50","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\CartProduct.js":"51","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\cart.js":"52","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Search\\Search.js":"53","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\content\\ContentUser.js":"54","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\profile.js":"55","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Post.js":"56","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Spinner\\Spinner.js":"57","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\newsfeed\\Post\\Post.js":"58","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\newsfeed\\publications\\Publication.js":"59","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\single.js":"60","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\StripePay.js":"61","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\Checkout.js":"62","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\newsfeed\\publications\\SingleComm.js":"63","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\FeaturedDialog.js":"64","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\board\\SingleThread.js":"65","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Board.js":"66","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\YourAccount.js":"67","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\products\\SingleProduct.js":"68","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\products\\UpdateProduct.js":"69","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\board\\SingleReply.js":"70","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Replies.js":"71","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\content\\Content.js":"72","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\navbar\\nav.js":"73","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\tileData.js":"74","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Webinars.js":"75","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Network.js":"76","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Order.js":"77","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Edit.js":"78","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Aboute\\Aboute.js":"79","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Calendar\\Calendar.js":"80","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Calendar\\appointments.js":"81"},{"size":646,"mtime":1610019808029,"results":"82","hashOfConfig":"83"},{"size":1863,"mtime":1613908984486,"results":"84","hashOfConfig":"83"},{"size":387,"mtime":1609354688594,"results":"85","hashOfConfig":"83"},{"size":545,"mtime":1611090064132,"results":"86","hashOfConfig":"83"},{"size":3764,"mtime":1611870743960,"results":"87","hashOfConfig":"83"},{"size":43088,"mtime":1613602301329,"results":"88","hashOfConfig":"83"},{"size":40830,"mtime":1613602299298,"results":"89","hashOfConfig":"83"},{"size":1961,"mtime":1613602446280,"results":"90","hashOfConfig":"83"},{"size":3153,"mtime":1613326036111,"results":"91","hashOfConfig":"83"},{"size":2223,"mtime":1613326073151,"results":"92","hashOfConfig":"83"},{"size":1005,"mtime":1613326018219,"results":"93","hashOfConfig":"83"},{"size":1362,"mtime":1611782144132,"results":"94","hashOfConfig":"83"},{"size":4796,"mtime":1613139403306,"results":"95","hashOfConfig":"83"},{"size":10017,"mtime":1613593374165,"results":"96","hashOfConfig":"83"},{"size":2483,"mtime":1610471084917,"results":"97","hashOfConfig":"83"},{"size":5096,"mtime":1613139877331,"results":"98","hashOfConfig":"83"},{"size":3094,"mtime":1613317353865,"results":"99","hashOfConfig":"83"},{"size":3550,"mtime":1613909253217,"results":"100","hashOfConfig":"83"},{"size":29408,"mtime":1613909346354,"results":"101","hashOfConfig":"83"},{"size":28339,"mtime":1612987285843,"results":"102","hashOfConfig":"83"},{"size":432,"mtime":1612811301521,"results":"103","hashOfConfig":"83"},{"size":3061,"mtime":1612991995859,"results":"104","hashOfConfig":"83"},{"size":1993,"mtime":1612121045930,"results":"105","hashOfConfig":"83"},{"size":3321,"mtime":1613323678078,"results":"106","hashOfConfig":"83"},{"size":2773,"mtime":1613327842372,"results":"107","hashOfConfig":"83"},{"size":5446,"mtime":1613323229247,"results":"108","hashOfConfig":"83"},{"size":5108,"mtime":1613589771054,"results":"109","hashOfConfig":"83"},{"size":9761,"mtime":1613601247221,"results":"110","hashOfConfig":"83"},{"size":3571,"mtime":1613323418374,"results":"111","hashOfConfig":"83"},{"size":3328,"mtime":1613326626688,"results":"112","hashOfConfig":"83"},{"size":2197,"mtime":1612987285896,"results":"113","hashOfConfig":"83"},{"size":1010,"mtime":1613329881040,"results":"114","hashOfConfig":"83"},{"size":1352,"mtime":1612029304444,"results":"115","hashOfConfig":"83"},{"size":4365,"mtime":1613323350904,"results":"116","hashOfConfig":"83"},{"size":3085,"mtime":1613324083033,"results":"117","hashOfConfig":"83"},{"size":1518,"mtime":1613330001212,"results":"118","hashOfConfig":"83"},{"size":715,"mtime":1611443915049,"results":"119","hashOfConfig":"83"},{"size":1198,"mtime":1611175092086,"results":"120","hashOfConfig":"83"},{"size":2608,"mtime":1613334904673,"results":"121","hashOfConfig":"83"},{"size":1265,"mtime":1611350040049,"results":"122","hashOfConfig":"83"},{"size":2839,"mtime":1613589723018,"results":"123","hashOfConfig":"83"},{"size":1641,"mtime":1612290422031,"results":"124","hashOfConfig":"83"},{"size":25375,"mtime":1613675661423,"results":"125","hashOfConfig":"83"},{"size":11065,"mtime":1613675661410,"results":"126","hashOfConfig":"83"},{"size":37814,"mtime":1613677809377,"results":"127","hashOfConfig":"83"},{"size":1860,"mtime":1613335385527,"results":"128","hashOfConfig":"83"},{"size":1581,"mtime":1613139403307,"results":"129","hashOfConfig":"83"},{"size":44910,"mtime":1613675661420,"results":"130","hashOfConfig":"83"},{"size":970,"mtime":1612987285836,"results":"131","hashOfConfig":"83"},{"size":4476,"mtime":1612121045939,"results":"132","hashOfConfig":"83"},{"size":3583,"mtime":1612987285851,"results":"133","hashOfConfig":"83"},{"size":5483,"mtime":1612293349637,"results":"134","hashOfConfig":"83"},{"size":3341,"mtime":1612987285844,"results":"135","hashOfConfig":"83"},{"size":1869,"mtime":1612987285899,"results":"136","hashOfConfig":"83"},{"size":2579,"mtime":1612987285833,"results":"137","hashOfConfig":"83"},{"size":6533,"mtime":1613589745438,"results":"138","hashOfConfig":"83"},{"size":473,"mtime":1613335557091,"results":"139","hashOfConfig":"83"},{"size":8282,"mtime":1613337556366,"results":"140","hashOfConfig":"83"},{"size":17805,"mtime":1613675661442,"results":"141","hashOfConfig":"83"},{"size":985,"mtime":1613675661421,"results":"142","hashOfConfig":"83"},{"size":1256,"mtime":1612291395618,"results":"143","hashOfConfig":"83"},{"size":5788,"mtime":1612121045935,"results":"144","hashOfConfig":"83"},{"size":3330,"mtime":1613593374233,"results":"145","hashOfConfig":"83"},{"size":3768,"mtime":1612469863991,"results":"146","hashOfConfig":"83"},{"size":11095,"mtime":1613323903661,"results":"147","hashOfConfig":"83"},{"size":4181,"mtime":1613139403304,"results":"148","hashOfConfig":"83"},{"size":2802,"mtime":1611260997665,"results":"149","hashOfConfig":"83"},{"size":1399,"mtime":1612466983937,"results":"150","hashOfConfig":"83"},{"size":16229,"mtime":1613320022347,"results":"151","hashOfConfig":"83"},{"size":4650,"mtime":1613139403310,"results":"152","hashOfConfig":"83"},{"size":2650,"mtime":1612987285832,"results":"153","hashOfConfig":"83"},{"size":1012,"mtime":1610649561592,"results":"154","hashOfConfig":"83"},{"size":957,"mtime":1612029304465,"results":"155","hashOfConfig":"83"},{"size":1349,"mtime":1611676794717,"results":"156","hashOfConfig":"83"},{"size":189,"mtime":1610649561595,"results":"157","hashOfConfig":"83"},{"size":1451,"mtime":1610649561595,"results":"158","hashOfConfig":"83"},{"size":1355,"mtime":1612293507020,"results":"159","hashOfConfig":"83"},{"size":3996,"mtime":1612029304464,"results":"160","hashOfConfig":"83"},{"size":2238,"mtime":1612029304463,"results":"161","hashOfConfig":"83"},{"size":1470,"mtime":1613909527750,"results":"162","hashOfConfig":"83"},{"size":3698,"mtime":1613909467864,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"184367z",{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"166"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"166"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"166"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"166"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"166"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"166"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"166"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"166"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"166"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"166"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"166"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"166"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"166"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"166"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"166"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"166"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"166"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"166"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"166"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"166"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"166"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"166"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"166"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"166"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"166"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"166"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"166"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"166"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\index.js",[],["355","356"],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\App.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\store.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\ProtectedRoute.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\auth.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\Register\\RegisterMinistry.js",["357"],"import React, {Component ,useState} from 'react';\r\nimport './Register.css';\r\nimport axios from 'axios';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Footer from \"../../layout/Footer/Footer\";\r\n\r\nexport default class RegisterMinistry extends Component {\r\n    state = {}\r\n    handleSubmit = e => {  \r\n        e.preventDefault();\r\n        toast.configure();\r\n        const data = {\r\n            first_name: this.firstname,\r\n            last_name: this.lastname,\r\n            email: this.email,\r\n            password: this.password,\r\n            passwordConfermation:this.passwordConfermation,\r\n            birth_date: this.year+'/'+this.month+'/'+this.day,\r\n            gender: this.gender,\r\n            location: this.location,\r\n            type:\"2\",\r\n            username:this.username,\r\n            about: this.about,\r\n            phone:this.phone,\r\n            ministry_name: this.mininame,\r\n            ministry_description: this.minides,\r\n            ministry_city: this.minicity,\r\n            ministry_country: this.minicount,\r\n            ministry_type: this.minitype,\r\n            profile_image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRozxy746wCC8yP00EIlpWRqJ_f9OaspKdUwg&usqp=CAU'\r\n        };\r\n        if (this.password !== this.passwordConfermation) {\r\n            toast.error('Password doesnt match');\r\n            console.log(this.passwordConfermation);\r\n            console.log(this.password);\r\n        }else{\r\n            axios.post('api/user/register', data).then(\r\n            res => {\r\n                this.setState({\r\n                     register: true\r\n                });\r\n                toast.success('Please Check Your Email');\r\n            }\r\n        ).catch(\r\n            err => {\r\n                console.log(err);        \r\n                toast.error('The email has already been taken.');\r\n            }\r\n        )\r\n    }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.register) {\r\n            return <Redirect to={'/login'}/>;\r\n        }\r\n        return (\r\n            <div className=\"Register\">\r\n                <title>Register | FishComb</title>\r\n                <div className=\"row\">\r\n                <a href=\"/\" className=\"img\">\r\n                <img src=\"../../../../dist/img/logofish.png\" alt=\"\" /></a>\r\n            </div>   \r\n                <div className=\"row\">\r\n                    <div className='col-sm-3'></div>\r\n                    <div className='col-sm-6'>\r\n                <div className=\"card col-sm-8\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"mb-4 mt-3 \">\r\n                                <label className=\"reg_su\">Sign Up</label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                <div className='row mb-3 pt-1'>\r\n                                </div>\r\n                                <div> \r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\" placeholder=\"First Name\"\r\n                                        onChange={e => this.firstname = e.target.value} />\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\" placeholder=\"Last Name\"\r\n                                        onChange={e => this.lastname = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-12 mb-3 \">\r\n                                    <input type=\"email\" className=\"form-control reg__input\" placeholder=\"Email\"\r\n                                        onChange={e => this.email = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-12 mb-3 \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\"\r\n                                        placeholder=\"UserName\"\r\n                                        onChange={e => this.username = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"password\" className=\"form-control reg__input\"\r\n                                        placeholder=\"New Password\"\r\n                                        onChange={e => this.password = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"password\" className=\"form-control reg__input\"\r\n                                        placeholder=\"Password confirmation\"\r\n                                        onChange={e => this.passwordConfermation = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">      \r\n                                    <select id=\"country\" name=\"country\" className=\"form-control reg__input\" onChange={e => this.location = e.target.value}>\r\n                                        <option value='default'>Location</option>\r\n                                        <option value=\"Afganistan\" className='reg__input'>Afghanistan</option>\r\n                                        <option value=\"Albania\">Albania</option>\r\n                                        <option value=\"Algeria\">Algeria</option>\r\n                                        <option value=\"American Samoa\">American Samoa</option>\r\n                                        <option value=\"Andorra\">Andorra</option>\r\n                                        <option value=\"Angola\">Angola</option>\r\n                                        <option value=\"Anguilla\">Anguilla</option>\r\n                                        <option value=\"Antigua & Barbuda\">Antigua & Barbuda</option>\r\n                                        <option value=\"Argentina\">Argentina</option>\r\n                                        <option value=\"Armenia\">Armenia</option>\r\n                                        <option value=\"Aruba\">Aruba</option>\r\n                                        <option value=\"Australia\">Australia</option>\r\n                                        <option value=\"Austria\">Austria</option>\r\n                                        <option value=\"Azerbaijan\">Azerbaijan</option>\r\n                                        <option value=\"Bahamas\">Bahamas</option>\r\n                                        <option value=\"Bahrain\">Bahrain</option>\r\n                                        <option value=\"Bangladesh\">Bangladesh</option>\r\n                                        <option value=\"Barbados\">Barbados</option>\r\n                                        <option value=\"Belarus\">Belarus</option>\r\n                                        <option value=\"Belgium\">Belgium</option>\r\n                                        <option value=\"Belize\">Belize</option>\r\n                                        <option value=\"Benin\">Benin</option>\r\n                                        <option value=\"Bermuda\">Bermuda</option>\r\n                                        <option value=\"Bhutan\">Bhutan</option>\r\n                                        <option value=\"Bolivia\">Bolivia</option>\r\n                                        <option value=\"Bonaire\">Bonaire</option>\r\n                                        <option value=\"Bosnia & Herzegovina\">Bosnia & Herzegovina</option>\r\n                                        <option value=\"Botswana\">Botswana</option>\r\n                                        <option value=\"Brazil\">Brazil</option>\r\n                                        <option value=\"British Indian Ocean Ter\">British Indian Ocean Ter</option>\r\n                                        <option value=\"Brunei\">Brunei</option>\r\n                                        <option value=\"Bulgaria\">Bulgaria</option>\r\n                                        <option value=\"Burkina Faso\">Burkina Faso</option>\r\n                                        <option value=\"Burundi\">Burundi</option>\r\n                                        <option value=\"Cambodia\">Cambodia</option>\r\n                                        <option value=\"Cameroon\">Cameroon</option>\r\n                                        <option value=\"Canada\">Canada</option>\r\n                                        <option value=\"Canary Islands\">Canary Islands</option>\r\n                                        <option value=\"Cape Verde\">Cape Verde</option>\r\n                                        <option value=\"Cayman Islands\">Cayman Islands</option>\r\n                                        <option value=\"Central African Republic\">Central African Republic</option>\r\n                                        <option value=\"Chad\">Chad</option>\r\n                                        <option value=\"Channel Islands\">Channel Islands</option>\r\n                                        <option value=\"Chile\">Chile</option>\r\n                                        <option value=\"China\">China</option>\r\n                                        <option value=\"Christmas Island\">Christmas Island</option>\r\n                                        <option value=\"Cocos Island\">Cocos Island</option>\r\n                                        <option value=\"Colombia\">Colombia</option>\r\n                                        <option value=\"Comoros\">Comoros</option>\r\n                                        <option value=\"Congo\">Congo</option>\r\n                                        <option value=\"Cook Islands\">Cook Islands</option>\r\n                                        <option value=\"Costa Rica\">Costa Rica</option>\r\n                                        <option value=\"Cote DIvoire\">Cote DIvoire</option>\r\n                                        <option value=\"Croatia\">Croatia</option>\r\n                                        <option value=\"Cuba\">Cuba</option>\r\n                                        <option value=\"Curaco\">Curacao</option>\r\n                                        <option value=\"Cyprus\">Cyprus</option>\r\n                                        <option value=\"Czech Republic\">Czech Republic</option>\r\n                                        <option value=\"Denmark\">Denmark</option>\r\n                                        <option value=\"Djibouti\">Djibouti</option>\r\n                                        <option value=\"Dominica\">Dominica</option>\r\n                                        <option value=\"Dominican Republic\">Dominican Republic</option>\r\n                                        <option value=\"East Timor\">East Timor</option>\r\n                                        <option value=\"Ecuador\">Ecuador</option>\r\n                                        <option value=\"Egypt\">Egypt</option>\r\n                                        <option value=\"El Salvador\">El Salvador</option>\r\n                                        <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n                                        <option value=\"Eritrea\">Eritrea</option>\r\n                                        <option value=\"Estonia\">Estonia</option>\r\n                                        <option value=\"Ethiopia\">Ethiopia</option>\r\n                                        <option value=\"Falkland Islands\">Falkland Islands</option>\r\n                                        <option value=\"Faroe Islands\">Faroe Islands</option>\r\n                                        <option value=\"Fiji\">Fiji</option>\r\n                                        <option value=\"Finland\">Finland</option>\r\n                                        <option value=\"France\">France</option>\r\n                                        <option value=\"French Guiana\">French Guiana</option>\r\n                                        <option value=\"French Polynesia\">French Polynesia</option>\r\n                                        <option value=\"French Southern Ter\">French Southern Ter</option>\r\n                                        <option value=\"Gabon\">Gabon</option>\r\n                                        <option value=\"Gambia\">Gambia</option>\r\n                                        <option value=\"Georgia\">Georgia</option>\r\n                                        <option value=\"Germany\">Germany</option>\r\n                                        <option value=\"Ghana\">Ghana</option>\r\n                                        <option value=\"Gibraltar\">Gibraltar</option>\r\n                                        <option value=\"Great Britain\">Great Britain</option>\r\n                                        <option value=\"Greece\">Greece</option>\r\n                                        <option value=\"Greenland\">Greenland</option>\r\n                                        <option value=\"Grenada\">Grenada</option>\r\n                                        <option value=\"Guadeloupe\">Guadeloupe</option>\r\n                                        <option value=\"Guam\">Guam</option>\r\n                                        <option value=\"Guatemala\">Guatemala</option>\r\n                                        <option value=\"Guinea\">Guinea</option>\r\n                                        <option value=\"Guyana\">Guyana</option>\r\n                                        <option value=\"Haiti\">Haiti</option>\r\n                                        <option value=\"Hawaii\">Hawaii</option>\r\n                                        <option value=\"Honduras\">Honduras</option>\r\n                                        <option value=\"Hong Kong\">Hong Kong</option>\r\n                                        <option value=\"Hungary\">Hungary</option>\r\n                                        <option value=\"Iceland\">Iceland</option>\r\n                                        <option value=\"Indonesia\">Indonesia</option>\r\n                                        <option value=\"India\">India</option>\r\n                                        <option value=\"Iran\">Iran</option>\r\n                                        <option value=\"Iraq\">Iraq</option>\r\n                                        <option value=\"Ireland\">Ireland</option>\r\n                                        <option value=\"Isle of Man\">Isle of Man</option>\r\n                                        <option value=\"Israel\">Israel</option>\r\n                                        <option value=\"Italy\">Italy</option>\r\n                                        <option value=\"Jamaica\">Jamaica</option>\r\n                                        <option value=\"Japan\">Japan</option>\r\n                                        <option value=\"Jordan\">Jordan</option>\r\n                                        <option value=\"Kazakhstan\">Kazakhstan</option>\r\n                                        <option value=\"Kenya\">Kenya</option>\r\n                                        <option value=\"Kiribati\">Kiribati</option>\r\n                                        <option value=\"Korea North\">Korea North</option>\r\n                                        <option value=\"Korea Sout\">Korea South</option>\r\n                                        <option value=\"Kuwait\">Kuwait</option>\r\n                                        <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n                                        <option value=\"Laos\">Laos</option>\r\n                                        <option value=\"Latvia\">Latvia</option>\r\n                                        <option value=\"Lebanon\">Lebanon</option>\r\n                                        <option value=\"Lesotho\">Lesotho</option>\r\n                                        <option value=\"Liberia\">Liberia</option>\r\n                                        <option value=\"Libya\">Libya</option>\r\n                                        <option value=\"Liechtenstein\">Liechtenstein</option>\r\n                                        <option value=\"Lithuania\">Lithuania</option>\r\n                                        <option value=\"Luxembourg\">Luxembourg</option>\r\n                                        <option value=\"Macau\">Macau</option>\r\n                                        <option value=\"Macedonia\">Macedonia</option>\r\n                                        <option value=\"Madagascar\">Madagascar</option>\r\n                                        <option value=\"Malaysia\">Malaysia</option>\r\n                                        <option value=\"Malawi\">Malawi</option>\r\n                                        <option value=\"Maldives\">Maldives</option>\r\n                                        <option value=\"Mali\">Mali</option>\r\n                                        <option value=\"Malta\">Malta</option>\r\n                                        <option value=\"Marshall Islands\">Marshall Islands</option>\r\n                                        <option value=\"Martinique\">Martinique</option>\r\n                                        <option value=\"Mauritania\">Mauritania</option>\r\n                                        <option value=\"Mauritius\">Mauritius</option>\r\n                                        <option value=\"Mayotte\">Mayotte</option>\r\n                                        <option value=\"Mexico\">Mexico</option>\r\n                                        <option value=\"Midway Islands\">Midway Islands</option>\r\n                                        <option value=\"Moldova\">Moldova</option>\r\n                                        <option value=\"Monaco\">Monaco</option>\r\n                                        <option value=\"Mongolia\">Mongolia</option>\r\n                                        <option value=\"Montserrat\">Montserrat</option>\r\n                                        <option value=\"Morocco\">Morocco</option>\r\n                                        <option value=\"Mozambique\">Mozambique</option>\r\n                                        <option value=\"Myanmar\">Myanmar</option>\r\n                                        <option value=\"Nambia\">Nambia</option>\r\n                                        <option value=\"Nauru\">Nauru</option>\r\n                                        <option value=\"Nepal\">Nepal</option>\r\n                                        <option value=\"Netherland Antilles\">Netherland Antilles</option>\r\n                                        <option value=\"Netherlands\">Netherlands (Holland, Europe)</option>\r\n                                        <option value=\"Nevis\">Nevis</option>\r\n                                        <option value=\"New Caledonia\">New Caledonia</option>\r\n                                        <option value=\"New Zealand\">New Zealand</option>\r\n                                        <option value=\"Nicaragua\">Nicaragua</option>\r\n                                        <option value=\"Niger\">Niger</option>\r\n                                        <option value=\"Nigeria\">Nigeria</option>\r\n                                        <option value=\"Niue\">Niue</option>\r\n                                        <option value=\"Norfolk Island\">Norfolk Island</option>\r\n                                        <option value=\"Norway\">Norway</option>\r\n                                        <option value=\"Oman\">Oman</option>\r\n                                        <option value=\"Pakistan\">Pakistan</option>\r\n                                        <option value=\"Palau Island\">Palau Island</option>\r\n                                        <option value=\"Palestine\">Palestine</option>\r\n                                        <option value=\"Panama\">Panama</option>\r\n                                        <option value=\"Papua New Guinea\">Papua New Guinea</option>\r\n                                        <option value=\"Paraguay\">Paraguay</option>\r\n                                        <option value=\"Peru\">Peru</option>\r\n                                        <option value=\"Phillipines\">Philippines</option>\r\n                                        <option value=\"Pitcairn Island\">Pitcairn Island</option>\r\n                                        <option value=\"Poland\">Poland</option>\r\n                                        <option value=\"Portugal\">Portugal</option>\r\n                                        <option value=\"Puerto Rico\">Puerto Rico</option>\r\n                                        <option value=\"Qatar\">Qatar</option>\r\n                                        <option value=\"Republic of Montenegro\">Republic of Montenegro</option>\r\n                                        <option value=\"Republic of Serbia\">Republic of Serbia</option>\r\n                                        <option value=\"Reunion\">Reunion</option>\r\n                                        <option value=\"Romania\">Romania</option>\r\n                                        <option value=\"Russia\">Russia</option>\r\n                                        <option value=\"Rwanda\">Rwanda</option>\r\n                                        <option value=\"St Barthelemy\">St Barthelemy</option>\r\n                                        <option value=\"St Eustatius\">St Eustatius</option>\r\n                                        <option value=\"St Helena\">St Helena</option>\r\n                                        <option value=\"St Kitts-Nevis\">St Kitts-Nevis</option>\r\n                                        <option value=\"St Lucia\">St Lucia</option>\r\n                                        <option value=\"St Maarten\">St Maarten</option>\r\n                                        <option value=\"St Pierre & Miquelon\">St Pierre & Miquelon</option>\r\n                                        <option value=\"St Vincent & Grenadines\">St Vincent & Grenadines</option>\r\n                                        <option value=\"Saipan\">Saipan</option>\r\n                                        <option value=\"Samoa\">Samoa</option>\r\n                                        <option value=\"Samoa American\">Samoa American</option>\r\n                                        <option value=\"San Marino\">San Marino</option>\r\n                                        <option value=\"Sao Tome & Principe\">Sao Tome & Principe</option>\r\n                                        <option value=\"Saudi Arabia\">Saudi Arabia</option>\r\n                                        <option value=\"Senegal\">Senegal</option>\r\n                                        <option value=\"Seychelles\">Seychelles</option>\r\n                                        <option value=\"Sierra Leone\">Sierra Leone</option>\r\n                                        <option value=\"Singapore\">Singapore</option>\r\n                                        <option value=\"Slovakia\">Slovakia</option>\r\n                                        <option value=\"Slovenia\">Slovenia</option>\r\n                                        <option value=\"Solomon Islands\">Solomon Islands</option>\r\n                                        <option value=\"Somalia\">Somalia</option>\r\n                                        <option value=\"South Africa\">South Africa</option>\r\n                                        <option value=\"Spain\">Spain</option>\r\n                                        <option value=\"Sri Lanka\">Sri Lanka</option>\r\n                                        <option value=\"Sudan\">Sudan</option>\r\n                                        <option value=\"Suriname\">Suriname</option>\r\n                                        <option value=\"Swaziland\">Swaziland</option>\r\n                                        <option value=\"Sweden\">Sweden</option>\r\n                                        <option value=\"Switzerland\">Switzerland</option>\r\n                                        <option value=\"Syria\">Syria</option>\r\n                                        <option value=\"Tahiti\">Tahiti</option>\r\n                                        <option value=\"Taiwan\">Taiwan</option>\r\n                                        <option value=\"Tajikistan\">Tajikistan</option>\r\n                                        <option value=\"Tanzania\">Tanzania</option>\r\n                                        <option value=\"Thailand\">Thailand</option>\r\n                                        <option value=\"Togo\">Togo</option>\r\n                                        <option value=\"Tokelau\">Tokelau</option>\r\n                                        <option value=\"Tonga\">Tonga</option>\r\n                                        <option value=\"Trinidad & Tobago\">Trinidad & Tobago</option>\r\n                                        <option value=\"Tunisia\">Tunisia</option>\r\n                                        <option value=\"Turkey\">Turkey</option>\r\n                                        <option value=\"Turkmenistan\">Turkmenistan</option>\r\n                                        <option value=\"Turks & Caicos Is\">Turks & Caicos Is</option>\r\n                                        <option value=\"Tuvalu\">Tuvalu</option>\r\n                                        <option value=\"Uganda\">Uganda</option>\r\n                                        <option value=\"United Kingdom\">United Kingdom</option>\r\n                                        <option value=\"Ukraine\">Ukraine</option>\r\n                                        <option value=\"United Arab Erimates\">United Arab Emirates</option>\r\n                                        <option value=\"United States of America\">United States of America</option>\r\n                                        <option value=\"Uraguay\">Uruguay</option>\r\n                                        <option value=\"Uzbekistan\">Uzbekistan</option>\r\n                                        <option value=\"Vanuatu\">Vanuatu</option>\r\n                                        <option value=\"Vatican City State\">Vatican City State</option>\r\n                                        <option value=\"Venezuela\">Venezuela</option>\r\n                                        <option value=\"Vietnam\">Vietnam</option>\r\n                                        <option value=\"Virgin Islands (Brit)\">Virgin Islands (Brit)</option>\r\n                                        <option value=\"Virgin Islands (USA)\">Virgin Islands (USA)</option>\r\n                                        <option value=\"Wake Island\">Wake Island</option>\r\n                                        <option value=\"Wallis & Futana Is\">Wallis & Futana Is</option>\r\n                                        <option value=\"Yemen\">Yemen</option>\r\n                                        <option value=\"Zaire\">Zaire</option>\r\n                                        <option value=\"Zambia\">Zambia</option>\r\n                                        <option value=\"Zimbabwe\">Zimbabwe</option>\r\n                                        </select>\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\" placeholder=\"Phone\"\r\n                                        onChange={e => this.phone = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-12 mb-3 \">\r\n                                    <textarea  type=\"texterea\" className=\"form-control reg__input\" id=\"exampleFormControlTextarea1\" row='4' placeholder=\"About\"\r\n                                        onChange={e => this.about = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3  \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\" placeholder=\"Ministry Name\"\r\n                                        onChange={e => this.mininame = e.target.value}  />\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3  \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\" placeholder=\"Ministry City\"\r\n                                        onChange={e => this.minicity = e.target.value}  />\r\n                                </div> \r\n                                <div className=\"col-sm-6 mb-3  \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\" placeholder=\"Ministry Country\"\r\n                                        onChange={e => this.minicount = e.target.value} />\r\n                                </div> \r\n                                <div className=\"col-sm-6 mb-3 \">      \r\n                                    <select id=\"country\" name=\"country\" className=\"form-control reg__input\"  onChange={e => this.minitype = e.target.value}>\r\n                                        <option value='default'>Ministry Type</option>\r\n                                        <option value=\"Afganistan\" className='reg__input'>Church Art/Music</option>\r\n                                        <option value=\"Albania\"> Charity/Organisation</option>\r\n                                        <option value=\"Algeria\">Other</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-sm-12 mb-3  \">\r\n                                    <textarea type=\"text\" className=\"form-control reg__input\"\r\n                                        placeholder=\"Ministry Description\"\r\n                                        onChange={e => this.minides = e.target.value} />\r\n                                </div>\r\n                                </div>\r\n                                <label>Birthday</label>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-4 mt-2\">\r\n                                        <select className=\" form-control reg__input\" onChange={(e) => this.month = e.target.value}>\r\n                                            <option className='reg__input' >- Month -</option>\r\n                                            <option value=\"1\">January</option>\r\n                                            <option value=\"2\">Febuary</option>\r\n                                            <option value=\"3\">March</option>\r\n                                            <option value=\"4\">April</option>\r\n                                            <option value=\"5\">May</option>\r\n                                            <option value=\"6\">June</option>\r\n                                            <option value=\"7\">July</option>\r\n                                            <option value=\"8\">August</option>\r\n                                            <option value=\"9\">September</option>\r\n                                            <option value=\"10\">October</option>\r\n                                            <option value=\"11\">November</option>\r\n                                            <option value=\"12\">December</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-sm-4 mt-2\">\r\n                                        <select className=\" form-control reg__input\"\r\n                                                onChange={(e) => this.day = e.target.value}>\r\n                                            <option className='reg__input'>- Day -</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"6\">6</option>\r\n                                            <option value=\"7\">7</option>\r\n                                            <option value=\"8\">8</option>\r\n                                            <option value=\"9\">9</option>\r\n                                            <option value=\"10\">10</option>\r\n                                            <option value=\"11\">11</option>\r\n                                            <option value=\"12\">12</option>\r\n                                            <option value=\"13\">13</option>\r\n                                            <option value=\"14\">14</option>\r\n                                            <option value=\"15\">15</option>\r\n                                            <option value=\"16\">16</option>\r\n                                            <option value=\"17\">17</option>\r\n                                            <option value=\"18\">18</option>\r\n                                            <option value=\"19\">19</option>\r\n                                            <option value=\"20\">20</option>\r\n                                            <option value=\"21\">21</option>\r\n                                            <option value=\"22\">22</option>\r\n                                            <option value=\"23\">23</option>\r\n                                            <option value=\"24\">24</option>\r\n                                            <option value=\"25\">25</option>\r\n                                            <option value=\"26\">26</option>\r\n                                            <option value=\"27\">27</option>\r\n                                            <option value=\"28\">28</option>\r\n                                            <option value=\"29\">29</option>\r\n                                            <option value=\"30\">30</option>\r\n                                            <option value=\"31\">31</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-sm-4 mt-2 mb-3\">\r\n                                        <select className=\" form-control reg__input\"\r\n                                                onChange={(e) => this.year = e.target.value}>\r\n                                            <option className='reg__input'>- Year -</option>\r\n                                            <option value=\"2020\">2020</option>\r\n                                            <option value=\"2019\">2019</option>\r\n                                            <option value=\"2018\">2018</option>\r\n                                            <option value=\"2017\">2017</option>\r\n                                            <option value=\"2016\">2016</option>\r\n                                            <option value=\"2015\">2015</option>\r\n                                            <option value=\"2014\">2014</option>\r\n                                            <option value=\"2013\">2013</option>\r\n                                            <option value=\"2012\">2012</option>\r\n                                            <option value=\"2011\">2011</option>\r\n                                            <option value=\"2010\">2010</option>\r\n                                            <option value=\"2009\">2009</option>\r\n                                            <option value=\"2008\">2008</option>\r\n                                            <option value=\"2007\">2007</option>\r\n                                            <option value=\"2006\">2006</option>\r\n                                            <option value=\"2005\">2005</option>\r\n                                            <option value=\"2004\">2004</option>\r\n                                            <option value=\"2003\">2003</option>\r\n                                            <option value=\"2002\">2002</option>\r\n                                            <option value=\"2001\">2001</option>\r\n                                            <option value=\"2000\">2000</option>\r\n                                            <option value=\"1999\">1999</option>\r\n                                            <option value=\"1998\">1998</option>\r\n                                            <option value=\"1997\">1997</option>\r\n                                            <option value=\"1996\">1996</option>\r\n                                            <option value=\"1995\">1995</option>\r\n                                            <option value=\"1994\">1994</option>\r\n                                            <option value=\"1993\">1993</option>\r\n                                            <option value=\"1992\">1992</option>\r\n                                            <option value=\"1991\">1991</option>\r\n                                            <option value=\"1990\">1990</option>\r\n                                            <option value=\"1989\">1989</option>\r\n                                            <option value=\"1988\">1988</option>\r\n                                            <option value=\"1987\">1987</option>\r\n                                            <option value=\"1986\">1986</option>\r\n                                            <option value=\"1985\">1985</option>\r\n                                            <option value=\"1984\">1984</option>\r\n                                            <option value=\"1983\">1983</option>\r\n                                            <option value=\"1982\">1982</option>\r\n                                            <option value=\"1981\">1981</option>\r\n                                            <option value=\"1980\">1980</option>\r\n                                            <option value=\"1979\">1979</option>\r\n                                            <option value=\"1978\">1978</option>\r\n                                            <option value=\"1977\">1977</option>\r\n                                            <option value=\"1976\">1976</option>\r\n                                            <option value=\"1975\">1975</option>\r\n                                            <option value=\"1974\">1974</option>\r\n                                            <option value=\"1973\">1973</option>\r\n                                            <option value=\"1972\">1972</option>\r\n                                            <option value=\"1971\">1971</option>\r\n                                            <option value=\"1970\">1970</option>\r\n                                            <option value=\"1969\">1969</option>\r\n                                            <option value=\"1968\">1968</option>\r\n                                            <option value=\"1967\">1967</option>\r\n                                            <option value=\"1966\">1966</option>\r\n                                            <option value=\"1965\">1965</option>\r\n                                            <option value=\"1964\">1964</option>\r\n                                            <option value=\"1963\">1963</option>\r\n                                            <option value=\"1962\">1962</option>\r\n                                            <option value=\"1961\">1961</option>\r\n                                            <option value=\"1960\">1960</option>\r\n                                            <option value=\"1959\">1959</option>\r\n                                            <option value=\"1958\">1958</option>\r\n                                            <option value=\"1957\">1957</option>\r\n                                            <option value=\"1956\">1956</option>\r\n                                            <option value=\"1955\">1955</option>\r\n                                            <option value=\"1954\">1954</option>\r\n                                            <option value=\"1953\">1953</option>\r\n                                            <option value=\"1952\">1952</option>\r\n                                            <option value=\"1951\">1951</option>\r\n                                            <option value=\"1950\">1950</option>\r\n                                            <option value=\"1949\">1949</option>\r\n                                            <option value=\"1948\">1948</option>\r\n                                            <option value=\"1947\">1947</option>\r\n                                            <option value=\"1946\">1946</option>\r\n                                            <option value=\"1945\">1945</option>\r\n                                            <option value=\"1944\">1944</option>\r\n                                            <option value=\"1943\">1943</option>\r\n                                            <option value=\"1942\">1942</option>\r\n                                            <option value=\"1941\">1941</option>\r\n                                            <option value=\"1940\">1940</option>\r\n                                            <option value=\"1939\">1939</option>\r\n                                            <option value=\"1938\">1938</option>\r\n                                            <option value=\"1937\">1937</option>\r\n                                            <option value=\"1936\">1936</option>\r\n                                            <option value=\"1935\">1935</option>\r\n                                            <option value=\"1934\">1934</option>\r\n                                            <option value=\"1933\">1933</option>\r\n                                            <option value=\"1932\">1932</option>\r\n                                            <option value=\"1931\">1931</option>\r\n                                            <option value=\"1930\">1930</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <label>Gender</label>\r\n                                <div className=\"row\">\r\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n                                <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio2\" value=\"M\"\r\n                                                   onChange={(e) => this.gender = e.target.value}  autocomplete=\"off\" />\r\n                                <label className=\"btn btn-outline-primary\" for=\"btnradio2\">Male</label>\r\n\r\n                                <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio3\" value=\"F\" onChange={(e) => this.gender = e.target.value} autocomplete=\"off\" />\r\n                                <label className=\"btn btn-outline-primary\" for=\"btnradio3\">Female</label>\r\n                                </div>\r\n                                </div>\r\n                                </div>                              \r\n                                <div>  \r\n                                <button className=\"btn btn-primary col-sm-12 reg-button\" type=\"submit\">Sign Up</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                   \r\n                </div>\r\n                </div>\r\n              <div className='col-sm-3'></div>\r\n                </div>\r\n                <div className='pt-5'></div>\r\n      <Footer />\r\n             \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\Register\\RegisterUser.js",["358"],"import React, {Component ,useState} from 'react';\r\nimport './Register.css';\r\nimport axios from 'axios';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Footer from \"../../layout/Footer/Footer\";\r\n\r\nexport default class RegisterUser extends Component {\r\n    state = {}\r\n    handleSubmit = e => {  \r\n        e.preventDefault();\r\n        toast.configure();\r\n        const data = {\r\n            first_name: this.firstname,\r\n            last_name: this.lastname,\r\n            email: this.email,\r\n            password: this.password,\r\n            passwordConfermation:this.passwordConfermation,\r\n            birth_date: this.year+'/'+this.month+'/'+this.day,\r\n            gender: this.gender,\r\n            location: this.location,\r\n            type:\"1\",\r\n            username:this.username,\r\n            about: this.about,\r\n            phone:this.phone,\r\n            profile_image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRozxy746wCC8yP00EIlpWRqJ_f9OaspKdUwg&usqp=CAU'\r\n        };\r\n        if (this.password !== this.passwordConfermation) {\r\n            toast.error('Password doesnt match');\r\n            console.log(this.passwordConfermation);\r\n            console.log(this.password);\r\n        }else{\r\n            axios.post('api/user/register', data).then(\r\n            res => {\r\n                this.setState({\r\n                     register: true\r\n                });\r\n                toast.success('Please Check Your Email');\r\n            }\r\n        ).catch(\r\n            err => {\r\n                console.log(err);        \r\n                toast.error('The email has already been taken.');\r\n            }\r\n        )\r\n    }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.register) {\r\n            return <Redirect to={'/login'}/>;\r\n        }\r\n        return (\r\n            <div className=\"Register\">\r\n                <title>Register | FishComb</title>\r\n                <div className=\"row\">\r\n                <a href=\"/\" className=\"img\">\r\n                <img src=\"../../../../dist/img/logofish.png\" alt=\"\" /></a>\r\n            </div>   \r\n                <div className=\"row\">\r\n                    <div className='col-sm-3'></div>\r\n                    <div className='col-sm-6'>\r\n                <div className=\"card col-sm-8\">\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"mb-4 mt-3 \">\r\n                                <label className=\"reg_su\">Sign Up</label>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                <div className='row mb-3 pt-1'>\r\n                                </div>\r\n                                <div> \r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\" placeholder=\"First Name\"\r\n                                        onChange={e => this.firstname = e.target.value} />\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\" placeholder=\"Last Name\"\r\n                                        onChange={e => this.lastname = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-12 mb-3 \">\r\n                                    <input type=\"email\" className=\"form-control reg__input\" placeholder=\"Email\"\r\n                                        onChange={e => this.email = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-12 mb-3 \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\"\r\n                                        placeholder=\"UserName\"\r\n                                        onChange={e => this.username = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"password\" className=\"form-control reg__input\"\r\n                                        placeholder=\"New Password\"\r\n                                        onChange={e => this.password = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"password\" className=\"form-control reg__input\"\r\n                                        placeholder=\"Password confirmation\"\r\n                                        onChange={e => this.passwordConfermation = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">      \r\n                                    <select id=\"country\" name=\"country\" className=\"form-control reg__input\" onChange={e => this.location = e.target.value}>\r\n                                        <option value='default'>Location</option>\r\n                                        <option value=\"Afganistan\" className='reg__input'>Afghanistan</option>\r\n                                        <option value=\"Albania\">Albania</option>\r\n                                        <option value=\"Algeria\">Algeria</option>\r\n                                        <option value=\"American Samoa\">American Samoa</option>\r\n                                        <option value=\"Andorra\">Andorra</option>\r\n                                        <option value=\"Angola\">Angola</option>\r\n                                        <option value=\"Anguilla\">Anguilla</option>\r\n                                        <option value=\"Antigua & Barbuda\">Antigua & Barbuda</option>\r\n                                        <option value=\"Argentina\">Argentina</option>\r\n                                        <option value=\"Armenia\">Armenia</option>\r\n                                        <option value=\"Aruba\">Aruba</option>\r\n                                        <option value=\"Australia\">Australia</option>\r\n                                        <option value=\"Austria\">Austria</option>\r\n                                        <option value=\"Azerbaijan\">Azerbaijan</option>\r\n                                        <option value=\"Bahamas\">Bahamas</option>\r\n                                        <option value=\"Bahrain\">Bahrain</option>\r\n                                        <option value=\"Bangladesh\">Bangladesh</option>\r\n                                        <option value=\"Barbados\">Barbados</option>\r\n                                        <option value=\"Belarus\">Belarus</option>\r\n                                        <option value=\"Belgium\">Belgium</option>\r\n                                        <option value=\"Belize\">Belize</option>\r\n                                        <option value=\"Benin\">Benin</option>\r\n                                        <option value=\"Bermuda\">Bermuda</option>\r\n                                        <option value=\"Bhutan\">Bhutan</option>\r\n                                        <option value=\"Bolivia\">Bolivia</option>\r\n                                        <option value=\"Bonaire\">Bonaire</option>\r\n                                        <option value=\"Bosnia & Herzegovina\">Bosnia & Herzegovina</option>\r\n                                        <option value=\"Botswana\">Botswana</option>\r\n                                        <option value=\"Brazil\">Brazil</option>\r\n                                        <option value=\"British Indian Ocean Ter\">British Indian Ocean Ter</option>\r\n                                        <option value=\"Brunei\">Brunei</option>\r\n                                        <option value=\"Bulgaria\">Bulgaria</option>\r\n                                        <option value=\"Burkina Faso\">Burkina Faso</option>\r\n                                        <option value=\"Burundi\">Burundi</option>\r\n                                        <option value=\"Cambodia\">Cambodia</option>\r\n                                        <option value=\"Cameroon\">Cameroon</option>\r\n                                        <option value=\"Canada\">Canada</option>\r\n                                        <option value=\"Canary Islands\">Canary Islands</option>\r\n                                        <option value=\"Cape Verde\">Cape Verde</option>\r\n                                        <option value=\"Cayman Islands\">Cayman Islands</option>\r\n                                        <option value=\"Central African Republic\">Central African Republic</option>\r\n                                        <option value=\"Chad\">Chad</option>\r\n                                        <option value=\"Channel Islands\">Channel Islands</option>\r\n                                        <option value=\"Chile\">Chile</option>\r\n                                        <option value=\"China\">China</option>\r\n                                        <option value=\"Christmas Island\">Christmas Island</option>\r\n                                        <option value=\"Cocos Island\">Cocos Island</option>\r\n                                        <option value=\"Colombia\">Colombia</option>\r\n                                        <option value=\"Comoros\">Comoros</option>\r\n                                        <option value=\"Congo\">Congo</option>\r\n                                        <option value=\"Cook Islands\">Cook Islands</option>\r\n                                        <option value=\"Costa Rica\">Costa Rica</option>\r\n                                        <option value=\"Cote DIvoire\">Cote DIvoire</option>\r\n                                        <option value=\"Croatia\">Croatia</option>\r\n                                        <option value=\"Cuba\">Cuba</option>\r\n                                        <option value=\"Curaco\">Curacao</option>\r\n                                        <option value=\"Cyprus\">Cyprus</option>\r\n                                        <option value=\"Czech Republic\">Czech Republic</option>\r\n                                        <option value=\"Denmark\">Denmark</option>\r\n                                        <option value=\"Djibouti\">Djibouti</option>\r\n                                        <option value=\"Dominica\">Dominica</option>\r\n                                        <option value=\"Dominican Republic\">Dominican Republic</option>\r\n                                        <option value=\"East Timor\">East Timor</option>\r\n                                        <option value=\"Ecuador\">Ecuador</option>\r\n                                        <option value=\"Egypt\">Egypt</option>\r\n                                        <option value=\"El Salvador\">El Salvador</option>\r\n                                        <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n                                        <option value=\"Eritrea\">Eritrea</option>\r\n                                        <option value=\"Estonia\">Estonia</option>\r\n                                        <option value=\"Ethiopia\">Ethiopia</option>\r\n                                        <option value=\"Falkland Islands\">Falkland Islands</option>\r\n                                        <option value=\"Faroe Islands\">Faroe Islands</option>\r\n                                        <option value=\"Fiji\">Fiji</option>\r\n                                        <option value=\"Finland\">Finland</option>\r\n                                        <option value=\"France\">France</option>\r\n                                        <option value=\"French Guiana\">French Guiana</option>\r\n                                        <option value=\"French Polynesia\">French Polynesia</option>\r\n                                        <option value=\"French Southern Ter\">French Southern Ter</option>\r\n                                        <option value=\"Gabon\">Gabon</option>\r\n                                        <option value=\"Gambia\">Gambia</option>\r\n                                        <option value=\"Georgia\">Georgia</option>\r\n                                        <option value=\"Germany\">Germany</option>\r\n                                        <option value=\"Ghana\">Ghana</option>\r\n                                        <option value=\"Gibraltar\">Gibraltar</option>\r\n                                        <option value=\"Great Britain\">Great Britain</option>\r\n                                        <option value=\"Greece\">Greece</option>\r\n                                        <option value=\"Greenland\">Greenland</option>\r\n                                        <option value=\"Grenada\">Grenada</option>\r\n                                        <option value=\"Guadeloupe\">Guadeloupe</option>\r\n                                        <option value=\"Guam\">Guam</option>\r\n                                        <option value=\"Guatemala\">Guatemala</option>\r\n                                        <option value=\"Guinea\">Guinea</option>\r\n                                        <option value=\"Guyana\">Guyana</option>\r\n                                        <option value=\"Haiti\">Haiti</option>\r\n                                        <option value=\"Hawaii\">Hawaii</option>\r\n                                        <option value=\"Honduras\">Honduras</option>\r\n                                        <option value=\"Hong Kong\">Hong Kong</option>\r\n                                        <option value=\"Hungary\">Hungary</option>\r\n                                        <option value=\"Iceland\">Iceland</option>\r\n                                        <option value=\"Indonesia\">Indonesia</option>\r\n                                        <option value=\"India\">India</option>\r\n                                        <option value=\"Iran\">Iran</option>\r\n                                        <option value=\"Iraq\">Iraq</option>\r\n                                        <option value=\"Ireland\">Ireland</option>\r\n                                        <option value=\"Isle of Man\">Isle of Man</option>\r\n                                        <option value=\"Israel\">Israel</option>\r\n                                        <option value=\"Italy\">Italy</option>\r\n                                        <option value=\"Jamaica\">Jamaica</option>\r\n                                        <option value=\"Japan\">Japan</option>\r\n                                        <option value=\"Jordan\">Jordan</option>\r\n                                        <option value=\"Kazakhstan\">Kazakhstan</option>\r\n                                        <option value=\"Kenya\">Kenya</option>\r\n                                        <option value=\"Kiribati\">Kiribati</option>\r\n                                        <option value=\"Korea North\">Korea North</option>\r\n                                        <option value=\"Korea Sout\">Korea South</option>\r\n                                        <option value=\"Kuwait\">Kuwait</option>\r\n                                        <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n                                        <option value=\"Laos\">Laos</option>\r\n                                        <option value=\"Latvia\">Latvia</option>\r\n                                        <option value=\"Lebanon\">Lebanon</option>\r\n                                        <option value=\"Lesotho\">Lesotho</option>\r\n                                        <option value=\"Liberia\">Liberia</option>\r\n                                        <option value=\"Libya\">Libya</option>\r\n                                        <option value=\"Liechtenstein\">Liechtenstein</option>\r\n                                        <option value=\"Lithuania\">Lithuania</option>\r\n                                        <option value=\"Luxembourg\">Luxembourg</option>\r\n                                        <option value=\"Macau\">Macau</option>\r\n                                        <option value=\"Macedonia\">Macedonia</option>\r\n                                        <option value=\"Madagascar\">Madagascar</option>\r\n                                        <option value=\"Malaysia\">Malaysia</option>\r\n                                        <option value=\"Malawi\">Malawi</option>\r\n                                        <option value=\"Maldives\">Maldives</option>\r\n                                        <option value=\"Mali\">Mali</option>\r\n                                        <option value=\"Malta\">Malta</option>\r\n                                        <option value=\"Marshall Islands\">Marshall Islands</option>\r\n                                        <option value=\"Martinique\">Martinique</option>\r\n                                        <option value=\"Mauritania\">Mauritania</option>\r\n                                        <option value=\"Mauritius\">Mauritius</option>\r\n                                        <option value=\"Mayotte\">Mayotte</option>\r\n                                        <option value=\"Mexico\">Mexico</option>\r\n                                        <option value=\"Midway Islands\">Midway Islands</option>\r\n                                        <option value=\"Moldova\">Moldova</option>\r\n                                        <option value=\"Monaco\">Monaco</option>\r\n                                        <option value=\"Mongolia\">Mongolia</option>\r\n                                        <option value=\"Montserrat\">Montserrat</option>\r\n                                        <option value=\"Morocco\">Morocco</option>\r\n                                        <option value=\"Mozambique\">Mozambique</option>\r\n                                        <option value=\"Myanmar\">Myanmar</option>\r\n                                        <option value=\"Nambia\">Nambia</option>\r\n                                        <option value=\"Nauru\">Nauru</option>\r\n                                        <option value=\"Nepal\">Nepal</option>\r\n                                        <option value=\"Netherland Antilles\">Netherland Antilles</option>\r\n                                        <option value=\"Netherlands\">Netherlands (Holland, Europe)</option>\r\n                                        <option value=\"Nevis\">Nevis</option>\r\n                                        <option value=\"New Caledonia\">New Caledonia</option>\r\n                                        <option value=\"New Zealand\">New Zealand</option>\r\n                                        <option value=\"Nicaragua\">Nicaragua</option>\r\n                                        <option value=\"Niger\">Niger</option>\r\n                                        <option value=\"Nigeria\">Nigeria</option>\r\n                                        <option value=\"Niue\">Niue</option>\r\n                                        <option value=\"Norfolk Island\">Norfolk Island</option>\r\n                                        <option value=\"Norway\">Norway</option>\r\n                                        <option value=\"Oman\">Oman</option>\r\n                                        <option value=\"Pakistan\">Pakistan</option>\r\n                                        <option value=\"Palau Island\">Palau Island</option>\r\n                                        <option value=\"Palestine\">Palestine</option>\r\n                                        <option value=\"Panama\">Panama</option>\r\n                                        <option value=\"Papua New Guinea\">Papua New Guinea</option>\r\n                                        <option value=\"Paraguay\">Paraguay</option>\r\n                                        <option value=\"Peru\">Peru</option>\r\n                                        <option value=\"Phillipines\">Philippines</option>\r\n                                        <option value=\"Pitcairn Island\">Pitcairn Island</option>\r\n                                        <option value=\"Poland\">Poland</option>\r\n                                        <option value=\"Portugal\">Portugal</option>\r\n                                        <option value=\"Puerto Rico\">Puerto Rico</option>\r\n                                        <option value=\"Qatar\">Qatar</option>\r\n                                        <option value=\"Republic of Montenegro\">Republic of Montenegro</option>\r\n                                        <option value=\"Republic of Serbia\">Republic of Serbia</option>\r\n                                        <option value=\"Reunion\">Reunion</option>\r\n                                        <option value=\"Romania\">Romania</option>\r\n                                        <option value=\"Russia\">Russia</option>\r\n                                        <option value=\"Rwanda\">Rwanda</option>\r\n                                        <option value=\"St Barthelemy\">St Barthelemy</option>\r\n                                        <option value=\"St Eustatius\">St Eustatius</option>\r\n                                        <option value=\"St Helena\">St Helena</option>\r\n                                        <option value=\"St Kitts-Nevis\">St Kitts-Nevis</option>\r\n                                        <option value=\"St Lucia\">St Lucia</option>\r\n                                        <option value=\"St Maarten\">St Maarten</option>\r\n                                        <option value=\"St Pierre & Miquelon\">St Pierre & Miquelon</option>\r\n                                        <option value=\"St Vincent & Grenadines\">St Vincent & Grenadines</option>\r\n                                        <option value=\"Saipan\">Saipan</option>\r\n                                        <option value=\"Samoa\">Samoa</option>\r\n                                        <option value=\"Samoa American\">Samoa American</option>\r\n                                        <option value=\"San Marino\">San Marino</option>\r\n                                        <option value=\"Sao Tome & Principe\">Sao Tome & Principe</option>\r\n                                        <option value=\"Saudi Arabia\">Saudi Arabia</option>\r\n                                        <option value=\"Senegal\">Senegal</option>\r\n                                        <option value=\"Seychelles\">Seychelles</option>\r\n                                        <option value=\"Sierra Leone\">Sierra Leone</option>\r\n                                        <option value=\"Singapore\">Singapore</option>\r\n                                        <option value=\"Slovakia\">Slovakia</option>\r\n                                        <option value=\"Slovenia\">Slovenia</option>\r\n                                        <option value=\"Solomon Islands\">Solomon Islands</option>\r\n                                        <option value=\"Somalia\">Somalia</option>\r\n                                        <option value=\"South Africa\">South Africa</option>\r\n                                        <option value=\"Spain\">Spain</option>\r\n                                        <option value=\"Sri Lanka\">Sri Lanka</option>\r\n                                        <option value=\"Sudan\">Sudan</option>\r\n                                        <option value=\"Suriname\">Suriname</option>\r\n                                        <option value=\"Swaziland\">Swaziland</option>\r\n                                        <option value=\"Sweden\">Sweden</option>\r\n                                        <option value=\"Switzerland\">Switzerland</option>\r\n                                        <option value=\"Syria\">Syria</option>\r\n                                        <option value=\"Tahiti\">Tahiti</option>\r\n                                        <option value=\"Taiwan\">Taiwan</option>\r\n                                        <option value=\"Tajikistan\">Tajikistan</option>\r\n                                        <option value=\"Tanzania\">Tanzania</option>\r\n                                        <option value=\"Thailand\">Thailand</option>\r\n                                        <option value=\"Togo\">Togo</option>\r\n                                        <option value=\"Tokelau\">Tokelau</option>\r\n                                        <option value=\"Tonga\">Tonga</option>\r\n                                        <option value=\"Trinidad & Tobago\">Trinidad & Tobago</option>\r\n                                        <option value=\"Tunisia\">Tunisia</option>\r\n                                        <option value=\"Turkey\">Turkey</option>\r\n                                        <option value=\"Turkmenistan\">Turkmenistan</option>\r\n                                        <option value=\"Turks & Caicos Is\">Turks & Caicos Is</option>\r\n                                        <option value=\"Tuvalu\">Tuvalu</option>\r\n                                        <option value=\"Uganda\">Uganda</option>\r\n                                        <option value=\"United Kingdom\">United Kingdom</option>\r\n                                        <option value=\"Ukraine\">Ukraine</option>\r\n                                        <option value=\"United Arab Erimates\">United Arab Emirates</option>\r\n                                        <option value=\"United States of America\">United States of America</option>\r\n                                        <option value=\"Uraguay\">Uruguay</option>\r\n                                        <option value=\"Uzbekistan\">Uzbekistan</option>\r\n                                        <option value=\"Vanuatu\">Vanuatu</option>\r\n                                        <option value=\"Vatican City State\">Vatican City State</option>\r\n                                        <option value=\"Venezuela\">Venezuela</option>\r\n                                        <option value=\"Vietnam\">Vietnam</option>\r\n                                        <option value=\"Virgin Islands (Brit)\">Virgin Islands (Brit)</option>\r\n                                        <option value=\"Virgin Islands (USA)\">Virgin Islands (USA)</option>\r\n                                        <option value=\"Wake Island\">Wake Island</option>\r\n                                        <option value=\"Wallis & Futana Is\">Wallis & Futana Is</option>\r\n                                        <option value=\"Yemen\">Yemen</option>\r\n                                        <option value=\"Zaire\">Zaire</option>\r\n                                        <option value=\"Zambia\">Zambia</option>\r\n                                        <option value=\"Zimbabwe\">Zimbabwe</option>\r\n                                        </select>\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-3 \">\r\n                                    <input type=\"text\" className=\"form-control reg__input\" placeholder=\"Phone\"\r\n                                        onChange={e => this.phone = e.target.value}/>\r\n                                </div>\r\n                                <div className=\"col-sm-12 mb-3 \">\r\n                                    <textarea  type=\"texterea\" className=\"form-control reg__input\" id=\"exampleFormControlTextarea1\" row='4' placeholder=\"About\"\r\n                                        onChange={e => this.about = e.target.value}/>\r\n                                </div>\r\n                                </div>\r\n                                <label>Birthday</label>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-4 mt-2\">\r\n                                        <select className=\" form-control reg__input\" onChange={(e) => this.month = e.target.value}>\r\n                                            <option className='reg__input' >- Month -</option>\r\n                                            <option value=\"1\">January</option>\r\n                                            <option value=\"2\">Febuary</option>\r\n                                            <option value=\"3\">March</option>\r\n                                            <option value=\"4\">April</option>\r\n                                            <option value=\"5\">May</option>\r\n                                            <option value=\"6\">June</option>\r\n                                            <option value=\"7\">July</option>\r\n                                            <option value=\"8\">August</option>\r\n                                            <option value=\"9\">September</option>\r\n                                            <option value=\"10\">October</option>\r\n                                            <option value=\"11\">November</option>\r\n                                            <option value=\"12\">December</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-sm-4 mt-2\">\r\n                                        <select className=\" form-control reg__input\"\r\n                                                onChange={(e) => this.day = e.target.value}>\r\n                                            <option className='reg__input'>- Day -</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"6\">6</option>\r\n                                            <option value=\"7\">7</option>\r\n                                            <option value=\"8\">8</option>\r\n                                            <option value=\"9\">9</option>\r\n                                            <option value=\"10\">10</option>\r\n                                            <option value=\"11\">11</option>\r\n                                            <option value=\"12\">12</option>\r\n                                            <option value=\"13\">13</option>\r\n                                            <option value=\"14\">14</option>\r\n                                            <option value=\"15\">15</option>\r\n                                            <option value=\"16\">16</option>\r\n                                            <option value=\"17\">17</option>\r\n                                            <option value=\"18\">18</option>\r\n                                            <option value=\"19\">19</option>\r\n                                            <option value=\"20\">20</option>\r\n                                            <option value=\"21\">21</option>\r\n                                            <option value=\"22\">22</option>\r\n                                            <option value=\"23\">23</option>\r\n                                            <option value=\"24\">24</option>\r\n                                            <option value=\"25\">25</option>\r\n                                            <option value=\"26\">26</option>\r\n                                            <option value=\"27\">27</option>\r\n                                            <option value=\"28\">28</option>\r\n                                            <option value=\"29\">29</option>\r\n                                            <option value=\"30\">30</option>\r\n                                            <option value=\"31\">31</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-sm-4 mt-2 mb-3\">\r\n                                        <select className=\" form-control reg__input\"\r\n                                                onChange={(e) => this.year = e.target.value}>\r\n                                            <option className='reg__input'>- Year -</option>\r\n                                            <option value=\"2020\">2020</option>\r\n                                            <option value=\"2019\">2019</option>\r\n                                            <option value=\"2018\">2018</option>\r\n                                            <option value=\"2017\">2017</option>\r\n                                            <option value=\"2016\">2016</option>\r\n                                            <option value=\"2015\">2015</option>\r\n                                            <option value=\"2014\">2014</option>\r\n                                            <option value=\"2013\">2013</option>\r\n                                            <option value=\"2012\">2012</option>\r\n                                            <option value=\"2011\">2011</option>\r\n                                            <option value=\"2010\">2010</option>\r\n                                            <option value=\"2009\">2009</option>\r\n                                            <option value=\"2008\">2008</option>\r\n                                            <option value=\"2007\">2007</option>\r\n                                            <option value=\"2006\">2006</option>\r\n                                            <option value=\"2005\">2005</option>\r\n                                            <option value=\"2004\">2004</option>\r\n                                            <option value=\"2003\">2003</option>\r\n                                            <option value=\"2002\">2002</option>\r\n                                            <option value=\"2001\">2001</option>\r\n                                            <option value=\"2000\">2000</option>\r\n                                            <option value=\"1999\">1999</option>\r\n                                            <option value=\"1998\">1998</option>\r\n                                            <option value=\"1997\">1997</option>\r\n                                            <option value=\"1996\">1996</option>\r\n                                            <option value=\"1995\">1995</option>\r\n                                            <option value=\"1994\">1994</option>\r\n                                            <option value=\"1993\">1993</option>\r\n                                            <option value=\"1992\">1992</option>\r\n                                            <option value=\"1991\">1991</option>\r\n                                            <option value=\"1990\">1990</option>\r\n                                            <option value=\"1989\">1989</option>\r\n                                            <option value=\"1988\">1988</option>\r\n                                            <option value=\"1987\">1987</option>\r\n                                            <option value=\"1986\">1986</option>\r\n                                            <option value=\"1985\">1985</option>\r\n                                            <option value=\"1984\">1984</option>\r\n                                            <option value=\"1983\">1983</option>\r\n                                            <option value=\"1982\">1982</option>\r\n                                            <option value=\"1981\">1981</option>\r\n                                            <option value=\"1980\">1980</option>\r\n                                            <option value=\"1979\">1979</option>\r\n                                            <option value=\"1978\">1978</option>\r\n                                            <option value=\"1977\">1977</option>\r\n                                            <option value=\"1976\">1976</option>\r\n                                            <option value=\"1975\">1975</option>\r\n                                            <option value=\"1974\">1974</option>\r\n                                            <option value=\"1973\">1973</option>\r\n                                            <option value=\"1972\">1972</option>\r\n                                            <option value=\"1971\">1971</option>\r\n                                            <option value=\"1970\">1970</option>\r\n                                            <option value=\"1969\">1969</option>\r\n                                            <option value=\"1968\">1968</option>\r\n                                            <option value=\"1967\">1967</option>\r\n                                            <option value=\"1966\">1966</option>\r\n                                            <option value=\"1965\">1965</option>\r\n                                            <option value=\"1964\">1964</option>\r\n                                            <option value=\"1963\">1963</option>\r\n                                            <option value=\"1962\">1962</option>\r\n                                            <option value=\"1961\">1961</option>\r\n                                            <option value=\"1960\">1960</option>\r\n                                            <option value=\"1959\">1959</option>\r\n                                            <option value=\"1958\">1958</option>\r\n                                            <option value=\"1957\">1957</option>\r\n                                            <option value=\"1956\">1956</option>\r\n                                            <option value=\"1955\">1955</option>\r\n                                            <option value=\"1954\">1954</option>\r\n                                            <option value=\"1953\">1953</option>\r\n                                            <option value=\"1952\">1952</option>\r\n                                            <option value=\"1951\">1951</option>\r\n                                            <option value=\"1950\">1950</option>\r\n                                            <option value=\"1949\">1949</option>\r\n                                            <option value=\"1948\">1948</option>\r\n                                            <option value=\"1947\">1947</option>\r\n                                            <option value=\"1946\">1946</option>\r\n                                            <option value=\"1945\">1945</option>\r\n                                            <option value=\"1944\">1944</option>\r\n                                            <option value=\"1943\">1943</option>\r\n                                            <option value=\"1942\">1942</option>\r\n                                            <option value=\"1941\">1941</option>\r\n                                            <option value=\"1940\">1940</option>\r\n                                            <option value=\"1939\">1939</option>\r\n                                            <option value=\"1938\">1938</option>\r\n                                            <option value=\"1937\">1937</option>\r\n                                            <option value=\"1936\">1936</option>\r\n                                            <option value=\"1935\">1935</option>\r\n                                            <option value=\"1934\">1934</option>\r\n                                            <option value=\"1933\">1933</option>\r\n                                            <option value=\"1932\">1932</option>\r\n                                            <option value=\"1931\">1931</option>\r\n                                            <option value=\"1930\">1930</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <label>Gender</label>\r\n                                <div className=\"row\">\r\n                                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n                                <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio2\" value=\"M\"\r\n                                                   onChange={(e) => this.gender = e.target.value}  autocomplete=\"off\" />\r\n                                <label className=\"btn btn-outline-primary\" for=\"btnradio2\">Male</label>\r\n\r\n                                <input type=\"radio\" className=\"btn-check\" name=\"btnradio\" id=\"btnradio3\" value=\"F\" onChange={(e) => this.gender = e.target.value} autocomplete=\"off\" />\r\n                                <label className=\"btn btn-outline-primary\" for=\"btnradio3\">Female</label>\r\n                                </div>\r\n                                </div>\r\n                                </div>                              \r\n                                <div>  \r\n                                <button className=\"btn btn-primary col-sm-12 reg-button\" type=\"submit\">Sign Up</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                   \r\n                </div>\r\n                </div>\r\n              <div className='col-sm-3'></div>\r\n                </div>\r\n                <div className='pt-5'></div>\r\n      <Footer />\r\n             \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\Register\\RegisterTypes.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\login\\Login.js",["359"],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { log } from \"../../../Actions/auth\";\r\nimport Footer from \"../../layout/Footer/Footer\"\r\nimport {\r\n  NavLink\r\n} from \"react-router-dom\";\r\n\r\nconst Login = ({ log, isAuthenticated }) => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    login: '',\r\n    password: ''\r\n  });\r\n  const { login, password } = formData;\r\n\r\n  const onchange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    log(login, password);\r\n  }\r\n  if (isAuthenticated) {\r\n\r\n    return <Redirect to=\"/dashboard/newsfeed\" />;\r\n  };\r\n  return (\r\n    <div className=\"Login\">\r\n      <title>Login | FishComb</title>\r\n      <div className=\"row\">\r\n        <a href=\"/\" className=\"img\">\r\n          <img src=\"../../../../dist/img/logofish.png\" alt=\"\" /></a>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-sm-3'></div>\r\n        <div className='col-sm-6'>\r\n          <div className=\"card col-sm-7 \">\r\n            <div className=\"card-body\">\r\n              <form onSubmit={e => onSubmit(e)} className=\"form-signin\">\r\n                <div className=\"mb-3  \">\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-12 mb-4 \" >\r\n                      <input type=\"email\" className=\"form-control log__input\" placeholder=\"Email\"\r\n                        name=\"login\" value={login} onChange={e => onchange(e)} />\r\n                    </div>\r\n                    <div className=\"col-sm-12 mb-4 \">\r\n                      <input type=\"password\" name=\"password\" className=\"form-control log__input\" placeholder=\"New Password\"\r\n                        name=\"password\" value={password}\r\n                        onChange={e => onchange(e)} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <button className=\"btn btn-primary col-sm-12  log-button\" type=\"submit\" value=\"handleSubmit\" >Login</button>\r\n                </div>\r\n                <div className=\"col-sm-12  mt-3 mb-4 span1\" >\r\n                  <NavLink to=\"/reset\" className=\"log__link\" > <span>Forget password?</span></NavLink>\r\n                </div >\r\n                <hr></hr>\r\n                <div>\r\n                  <NavLink to=\"/register\">\r\n                    <button className=\"btn btn-primary col-sm-12 mt-2 mb-4 log-button1\">Create Account</button>\r\n                  </NavLink>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='col-3'></div>\r\n      </div>\r\n      <div className='pt-5'></div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  log: propTypes.func.isRequired,\r\n  isAuthenticated: propTypes.bool.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { log })(Login);","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\Reset\\Reset.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\HomePage\\HomePage.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Dashboard\\Dashboard.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\types.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\events.js",["360"],"import { ADD_EVENT, EVENT_ERROR ,GET_EVENTS,GET_EVENT, GET_CATEGORIES, DELETE_EVENT,FILTER_EVENT, GET_FRIENDS, INVITE_FRIENDS,UPDATE_EVENT, SEARCH_EVENT,GET_INV1, ACCEPT_EVENT,ATTENDED, SUBSCRIBE} from './types'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie';\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n//Add event\r\nexport const addEvent = file => async dispatch => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + Cookies.get('user'),\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post(`/api/events`,file, config)\r\n           console.log(res.data)\r\n            dispatch({\r\n                type: ADD_EVENT,\r\n                payload: res.data.data,\r\n            })\r\n            toast.success('Event added');\r\n        } catch (err) {\r\n            const errors = err.response.data.errors;\r\n            toast.error(errors.cover[0])\r\n            toast.error(errors.date[0])\r\n            toast.error(errors.location[0])\r\n            toast.error(errors.description[0])\r\n            toast.error(errors.name[0])\r\n            \r\n           \r\n            dispatch({\r\n                type: EVENT_ERROR,\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n//get Events\r\nexport const getevents = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.get('/api/events', config)\r\n        \r\n        dispatch({\r\n            type: GET_EVENTS,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching events');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n//show single event\r\nexport const getevent = (eventID) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.get(`/api/events/${eventID}`, config)\r\n        \r\n        dispatch({\r\n            type: GET_EVENT,\r\n            payload: res.data.data\r\n        })\r\n    } catch (error) {\r\n        \r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n}\r\n///get categories\r\nexport const getcategories = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/categories`,{}, config)\r\n       \r\n        dispatch({\r\n            type: GET_CATEGORIES,\r\n            payload: res.data.data\r\n        })\r\n    } catch (error) {\r\n       \r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n}\r\n//delete event\r\n//show single event\r\nexport const deleteEvent = (eventID) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    if (window.confirm('Are you sure? this can not be undone')) {\r\n    try {\r\n        await axios.delete(`/api/events/${eventID}`, config)\r\n        \r\n        dispatch({\r\n            type: DELETE_EVENT,\r\n            payload:parseInt(eventID)\r\n        })\r\n        toast.success('delete success')\r\n    } catch (error) {\r\n        toast.error('delete error');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n    }\r\n}\r\n//127.0.0.1:8000/api/event/filter?sort[by]=name&sort[order]=asc\r\nexport const sortEvents = ({location1,asc}) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        JSON.stringify({location1,asc})\r\n        const res = await axios.get(`api/event/filter?sort[by]=${location1}&sort[order]=${asc}`,config)\r\n       console.log(res);\r\n        dispatch({\r\n            type: FILTER_EVENT,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n///api/events/myevents\r\nexport const myevents = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/myevents`,{}, config)\r\n       \r\n        dispatch({\r\n            type: GET_EVENTS,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\nexport const subscribEevent = (event_id,status) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n      await axios.post(`api/events/subscribe`,{event_id,status}, config)\r\n       /* dispatch({\r\n            type:SUBSCRIBE,\r\n            payload:res.data\r\n        })*/\r\n        \r\n        toast.info('subscribe success')\r\n        } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n//invite \r\nexport const invite = (user_id,event_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n      \r\n        const res = await axios.post(`api/events/invite`,{user_id,event_id}, config)\r\n      \r\n        dispatch({\r\n            type: INVITE_FRIENDS,\r\n            payload: res.data\r\n        })\r\n      \r\n        toast.error(res.data.status);\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n}\r\nexport const getfriends = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/user/friends`,{}, config) \r\n        dispatch({\r\n            type: GET_FRIENDS,\r\n            payload: res.data.users\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n}\r\n//update\r\nexport const update = (file,event_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/events/update/${event_id}`, file , config)\r\n        dispatch({\r\n            type: UPDATE_EVENT,\r\n            payload: res.data.data,\r\n        })\r\n        toast.success('Event updated');\r\n        } catch (error) {\r\n        toast.error('Error happened when updating event');\r\n            dispatch({\r\n                type: EVENT_ERROR,\r\n        });\r\n    }\r\n}\r\n//search\r\nexport const search = (filter,value) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/search`,{filter,value}, config) \r\n        dispatch({\r\n            type: SEARCH_EVENT,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n}\r\n///api/events/invitations\r\nexport const Myinvitations = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/invitations`,{}, config) \r\n       // console.log(res.data)\r\n        dispatch({\r\n            type: GET_INV1,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n       // toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n///invite/accept\r\nexport const acceptinv = (event_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/invite/accept`,{event_id}, config) \r\n        //console.log(res.data)\r\n        dispatch({\r\n        type: ACCEPT_EVENT,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n       // toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n///api/event/attending\r\nexport const optedevent = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.get(`api/event/attending`, config) \r\n        console.log(res.data)\r\n        dispatch({\r\n        type: ATTENDED,\r\n        payload: res.data\r\n        })\r\n    } catch (error) {\r\n       // toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Friends.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Market.js",["361"],"import axios from 'axios';\r\nimport { GET_MARKETS, ADD_PRODUCT, GET_MY_PRODUCTS, \r\n    GET_PRODUCT, UPDATE_PRODUCT, DELETE_PRODUCT, MARKET_CATERROR,\r\n     GATEGORIES_MARKET, SEARCH_PRODUCT, PRODUCT_ERROR, SEARCH_PRODUCT_ERROR,DELETE_PRODUCT_ERROR,UPDATE_PRODUCT_ERROR} from './types';\r\nimport Cookies from 'js-cookie';\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n//Get Products\r\nexport const getMarket = () => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.get(`/api/marketplace`,config)\r\n        console.log(res);\r\n        dispatch({\r\n            type:GET_MARKETS,\r\n            payload: res.data\r\n        })\r\n    }catch{\r\n        \r\n    }\r\n}\r\n//Add Product\r\nexport const addProduct = file => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/marketplace`,file,config)\r\n        console.log(res);\r\n        dispatch({\r\n            type: ADD_PRODUCT,\r\n            payload: res.data.data\r\n        })\r\n        toast.info('Product Added');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n            toast.error(errors.category_id[0])\r\n            toast.error(errors.image[0])\r\n            toast.error(errors.description[0])\r\n            toast.error(errors.name[0])\r\n            toast.error(errors.price[0])\r\n            toast.error(errors.stock[0])\r\n            \r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n        });\r\n    }\r\n}\r\n//Get Product\r\nexport const getProduct = (productID) => async dispatch => {\r\n    const config ={\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.get(`/api/marketplace/product/${productID}`, config)\r\n        dispatch({\r\n            type:GET_PRODUCT,\r\n            payload: res.data.data\r\n        })\r\n    }catch{\r\n\r\n    }\r\n}\r\n\r\n//Update Product \r\nexport const updateProduct = (formdata, productID) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/marketplace/product/${productID}`,formdata,config)\r\n        dispatch({\r\n            type: UPDATE_PRODUCT,\r\n            payload: res.data.data\r\n        })\r\n        toast.info('Product Updated');\r\n    }catch{\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_ERROR,\r\n        })\r\n        toast.error('Error Updated');\r\n    }\r\n}\r\n//My Product\r\nexport const myProduct = () => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/marketplace/my_products`,{},config)\r\n        dispatch({\r\n            type: GET_MARKETS,\r\n            payload: res.data\r\n        })\r\n    }catch{\r\n    }\r\n}\r\n//Delete Product \r\nexport const deleteProduct = (productID) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n         await axios.delete(`/api/marketplace/product/${productID}` ,config)\r\n         dispatch ({\r\n             type: DELETE_PRODUCT,\r\n             payload: productID\r\n         })\r\n         toast.info('Product Delete');\r\n    }catch {\r\n        dispatch ({\r\n            type: DELETE_PRODUCT_ERROR,\r\n        })\r\n        toast.error('Error Delete');\r\n    }\r\n}\r\n//Categories Market\r\nexport const getCategories = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/marketplace/categories`,{}, config)\r\n        dispatch({\r\n            type: GATEGORIES_MARKET,\r\n            payload: res.data.data\r\n        })\r\n    } catch (error) {\r\n       \r\n        dispatch({\r\n            type: MARKET_CATERROR,\r\n        });\r\n    }\r\n}\r\n//Search Product\r\nexport const search = (filter,value) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/marketplace/search`,{filter,value},config)\r\n        dispatch({\r\n            type: SEARCH_PRODUCT,\r\n            payload:res.data\r\n        })\r\n    }catch{\r\n        toast.error('Error happened when fetching Product');\r\n        dispatch({\r\n            type: SEARCH_PRODUCT_ERROR,\r\n        })\r\n       \r\n    }\r\n}\r\n","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Footer\\Footer.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Container\\Container.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Header\\Header.js",["362","363","364"],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Menu\\Menu.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\index.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\layout\\Header\\Notification.js",["365","366"],"import React, { Fragment } from 'react';\r\nimport  { Avatar, Button } from '@material-ui/core';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport { MdCancel } from 'react-icons/md';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { acceptInv } from '../../../Actions/Friends';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './Header.css';\r\nimport { Col, Row } from 'reactstrap';\r\nconst Notification = ({users ,acceptInv}) => {\r\n \r\n  const acceptinv =  () => {\r\n    acceptInv(users.data.user_id,1)\r\n  };\r\n  const deletinv =  () => {\r\n    acceptInv(users.data.user_id,2)\r\n  };\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          display: 'flex',\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        small: {\r\n          width: theme.spacing(3),\r\n          height: theme.spacing(3),\r\n        },\r\n        large: {\r\n          width: theme.spacing(6),\r\n          height: theme.spacing(6),\r\n        },\r\n      }));\r\n      const classes = useStyles();\r\n    return(\r\n        <Fragment>\r\n          \r\n            <div className='row pt-2 pb-2'>\r\n                <div className='col-sm-1'>\r\n                    <Avatar className={classes.large} src={users && users.data.attributes.profile_image} />\r\n                </div>\r\n                <div className='col-sm-1'></div>\r\n                <div className='col-sm-7 pt-1'>\r\n                <h6><b>{users && users.data.attributes.first_name.charAt(0).toUpperCase() + users.data.attributes.first_name.slice(1)} {users && users.data.attributes.last_name.charAt(0).toUpperCase() + users.data.attributes.last_name.slice(1)}\r\n                </b></h6>\r\n                     <div className='row '>\r\n                        <div className='col-sm-5 '>\r\n                        <span className='abouts'>\r\n                         {users && users.data.attributes.about}\r\n                        </span>  \r\n                        </div>\r\n                     </div>\r\n                </div>\r\n                <input type='hidden' value={users && users.data.user_id} />\r\n                <div className='col-sm-3'>\r\n                  <Row className='pb-2'>\r\n                    <Col xs={12}>\r\n                      <Button variant=\"outlined\" color=\"primary\" className='pb-2'  onClick={(e) =>acceptinv()}>Accept</Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col xs={12}>\r\n                      <Button variant=\"outlined\" color=\"secondary\" onClick={(e) =>deletinv()} >Decline</Button>\r\n                    </Col>\r\n                  </Row>\r\n                  {/** to do change the icons to accept declien */}\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </Fragment>\r\n    )\r\n}\r\nNotification.propTypes = {\r\n  acceptInv:PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,  \r\n  Friends : state.Friends    \r\n})\r\n\r\nexport default connect(mapStateToProps ,{acceptInv})(Notification);","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Gallery.js",["367"],"import React from \"module\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {  Col, Row,Container } from 'react-bootstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport {tileData} from './tileData';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      paddingTop:'60px'\r\n     // backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      width: 700,\r\n      height: 650,\r\n    },\r\n  }));\r\nconst Gallery =()=>{\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n        <Row className='pt-5 pb-3'>\r\n                    <Col md={3} className='px-0' ></Col>\r\n                    <Col md={4} className=\"pb-4 pt-5 px-0 mr-5\">\r\n                        <ul className=\"nav nav-pills nav-justified \" id='navprofil'>\r\n                            <li className=\"nav-item\">\r\n                    <Link to={`/dashboard/events`}className=\"link_cart\" ><span className=\"n\" >General event</span></Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to={`/dashboard/Gallery`} className=\"link_cart\" ><span className=\"n\">Gallery</span></Link>\r\n                </li>\r\n\r\n            </ul>\r\n        </Col>\r\n        <Row className='pt-3'>\r\n          <Col xs={1}></Col>\r\n          <Col xs={10}>\r\n          <h1>Events Gallery</h1>\r\n          </Col>  \r\n        </Row>\r\n    </Row>\r\n    <Row>\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={200} className={classes.gridList} cols={7}>\r\n        {tileData.map((tile) => (\r\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n            <img src={tile.img} alt={tile.title} />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n    </Row>\r\n    </div>\r\n    )\r\n}\r\nexport default Gallery;","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Invited.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Attended.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\Profile.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\board\\Replies.js",["368","369","370","371","372"],"import React from 'react';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getoneThread } from '../../../Actions/Board';\r\nimport { getReplies, addReplies } from '../../../Actions/Replies';\r\nimport PropTypes from 'prop-types';\r\nimport { Col, Row, Card, Image } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Button } from '@material-ui/core';\r\nimport SingleReply from './SingleReply';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport './Board.css';\r\n\r\nconst Replies = ( {auth:{user}, thread: {threads} , match , getoneThread, getReplies , Replies: {replies} ,addReplies} ) => {\r\n/**************************************/\r\nconst [open, setOpen] = React.useState(false);\r\nconst handleClickOpen = () => {\r\n    setOpen(true);\r\n};\r\n  const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n/**************************************/\r\n    useEffect(() => {\r\n        getoneThread(match.params.id);\r\n    },  [getoneThread, match.params.id])\r\n    useEffect(() => {\r\n        getReplies(match.params.id);\r\n    }, [getReplies, match.params.id])\r\n/**************************************/\r\nconst [formData, setformData] = useState({\r\n    body: '',\r\n})\r\nconst { body } = formData;\r\n    const onchange = e => setformData({ ...formData, [e.target.name]: e.target.value });\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        addReplies(formData, threads.data.id);\r\n        setformData({\r\n            body: ''  \r\n        })\r\n    }\r\n/**************************************/\r\n    return (\r\n       <Fragment><title>{threads && threads?.data?.title?.charAt(0).toUpperCase() + threads?.data?.title?.slice(1)} | FishComb</title>\r\n           <Row className='pt-5 pb-5'>\r\n               <Col xs={2}></Col>\r\n               <Col xs={8} className='pt-4'>\r\n                    <Card className='pt-3'> \r\n                        <Row className='pt-3 pb-3'>\r\n                            <Col xs={1}></Col>\r\n                            <Col xs={4}>\r\n                                <h4><b>{threads && threads.data.title.charAt(0).toUpperCase() + threads.data.title.slice(1)}</b></h4>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='pt-3 pb-5'>\r\n                            <Col xs={1}></Col>\r\n                            <Col xs={11}>\r\n                                <Row className='pt-2 pb-2'>\r\n                                    <Col xs={8}>\r\n                                        <span >{threads && threads.data.body.charAt(0).toUpperCase() + threads.data.body.slice(1)}</span>\r\n                                    </Col>\r\n                                    <Col xs={3}>\r\n                                        <Image src={threads && threads.data.image}  width=\"100%\" height=\"150\" alt='event' rounded className='product'/>\r\n                                    </Col>\r\n                                </Row>\r\n                             \r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n               </Col>\r\n           </Row>\r\n           <Row className='pt-5 pb-5'>\r\n               <Col xs={1}></Col>\r\n             <Col xs={10}className='pb-3'><h2>Replies</h2></Col> \r\n                <Col xs={2}></Col>\r\n                <Col xs={8}>\r\n                    {replies && replies.map((replies) =>\r\n                        (\r\n                        <SingleReply key={replies.id} reply={replies}  />)\r\n                    )}\r\n                </Col>\r\n           </Row>\r\n           <form onSubmit={e => submit(e)}>\r\n           <Row className='pt-3 '>\r\n                <Col xs={2}></Col>\r\n                <Col xs={8} >\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Control as=\"textarea\"\r\n                            rows={3}\r\n                            className='input_event'\r\n                            name=\"body\" value={body} onChange={e => onchange(e)} />\r\n                    </Form.Group>\r\n               </Col>\r\n           </Row>\r\n           <Row className='pt-1 pb-5 '>\r\n               <Col xs={10}></Col>\r\n                <Col xs={1}>\r\n                    <Button className='' type='submit'>Replies</Button>\r\n                </Col>\r\n           </Row>\r\n           </form>\r\n           <Row>\r\n               <Col xs={8}></Col>\r\n           </Row>\r\n       </Fragment>\r\n    )\r\n}\r\nReplies.prototype={\r\n    addReplies: PropTypes.func.isRequired,\r\n    threads: PropTypes.object.isRequired,\r\n    Replies: PropTypes.object.isRequired,\r\n    getoneThread: PropTypes.func.isRequired,\r\n    getReplies: PropTypes.func.isRequired,\r\n    addReplies: PropTypes.func.isRequired,\r\n    reply: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    thread: state.Thread,\r\n    threads: state.threads,\r\n    Replies: state.Replies,\r\n    replies : state.Replies,\r\n    reply: state.Replies,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { getoneThread , getReplies, addReplies  }) (Replies)\r\n\r\n","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\products\\ProductItem.js",["373","374"],"import React from 'react' ;\r\nimport { Fragment , useEffect} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { IoBasketSharp } from 'react-icons/io5';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { updateProduct } from '../../../../Actions/Market';\r\nimport { addCart } from '../../../../Actions/cart';\r\nimport {  deleteProduct, getProduct,getMarket } from '../../../../Actions/Market';\r\nimport { showCart } from '../../../../Actions/cart';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { MdAddShoppingCart } from 'react-icons/md';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport '../Market.css';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport UpdateProduct from './UpdateProduct';\r\nimport { Col } from 'reactstrap';\r\nimport { Row } from 'react-bootstrap';\r\nconst ProductItem = ( { auth: { user },getMarket, match, getProduct, deleteProduct,  market:{ product,categories} ,addCart ,updateProduct , loading , markets:{ markets},cart:{cart}, showCart }) => {\r\n     \r\n/****************************/\r\nuseEffect(() => {\r\n    getMarket()\r\n}, [getMarket])\r\nuseEffect(() => {\r\n    showCart()\r\n  },[showCart])\r\nuseEffect(() => {\r\n    getProduct(match.params.id);\r\n},  [getProduct, match.params.id]\r\n)\r\n\r\n\r\n/*********************************/ \r\nconst [open, setOpen] = React.useState(false);\r\nconst handleClickOpen = () => {\r\n    setOpen(true);\r\n};\r\nconst handleClose = () => {\r\n    setOpen(false);\r\n};\r\n/****************************/    \r\n    return(\r\n        <Fragment>\r\n            <div className='pt-5'>\r\n                <Row >\r\n                    <Col sm={1}></Col>\r\n                    <Col sm={10}>\r\n                        <Row>\r\n                            <Col sm={10}></Col>\r\n                            <Col sm={2}>\r\n                                <button className='btn btn-outline-dark button__cart'>\r\n                                    <NavLink to={'/dashboard/cart'} className=\"link__cart\">\r\n                                        <span className='cart__span'>Basket <IoBasketSharp/>{cart && cart.carts ? <div>{cart.carts.length}</div>:<div></div>}\r\n                                        </span>\r\n                                    </NavLink>\r\n                                </button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <div className='row pt-3'>\r\n                <div className='col-sm-10 pl-5 ml-5'>\r\n                    <div className='card'> \r\n                        <div className='card-body'>\r\n                            <div className='row'>\r\n                            <div className='col-sm-4 ' >\r\n                                <img src={product && product.image} width=\"100%\" height=\"300px\" alt='market' />\r\n                            </div>           \r\n                <div className='col-sm-8 border py-3 pl-3'>\r\n                    <div className='row float-right'> <div className='col-md-12'><Button className='cart__btn' onClick={e=>addCart(product.id)}> <MdAddShoppingCart  style={{fontSize:'19px'}} /> Add to Cart</Button>                      \r\n                    </div> </div>\r\n                   <div className='row '>\r\n                       <div className='row '>\r\n                        <div className='col-sm-10 pl-2'>\r\n                            <div className='row'>\r\n                            <div className='col-sm-4'>\r\n                            <label className='prod_details'>Product Name:</label> \r\n                            </div>\r\n                            <div className='col-sm-5'>\r\n                            <label className='prod_details'> {product && product.name.charAt(0).toUpperCase() + product.name.slice(1) }</label>\r\n                            </div>\r\n                            </div>\r\n                 </div>\r\n                 <div className='row'>\r\n                        <div className='col-sm-10 pl-2'>\r\n                        <div className='row'>\r\n                        <div className='col-sm-4' >\r\n                         <label className='prod_details'>Price :</label>\r\n                         </div>\r\n                         <div className='col-sm-5' >\r\n                          <label className='prod_details'>{ product && product.price } $</label>\r\n                         </div>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-sm-8 pl-2'>\r\n                        <div className='row'>\r\n                        <div className='col-sm-4' >\r\n                            <label className='prod_details'>Quantity :</label>\r\n                            </div>\r\n                            <div className='col-sm-5'>\r\n                            <label className='prod_details'> { product && product.stock }</label>\r\n                            </div>   \r\n                           </div>\r\n                        </div>  \r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-9 pl-2'>\r\n                            <div className='row'>\r\n                                <div className='col-sm-4'>\r\n                                    <label className='prod_details'>\r\n                                    Description:\r\n                                    </label> \r\n                                </div>\r\n                         <div className='col-sm-8'>\r\n                         <label className='prod_details'>\r\n                         { product && product.description } \r\n                         </label> \r\n                         </div>\r\n                            </div>      \r\n                                   </div>\r\n                                     </div>    \r\n                                   </div> \r\n                                                 \r\n                                     </div>\r\n                                     <div className='row mt-5'></div>\r\n                                     <div className='row'>\r\n                            <div className='col-md-10 '>{user.attributes.type===2 && user.user_id ===   product.user.id?\r\n                 <div className='col-sm-12 pt-5'>\r\n                       <Button onClick={handleClickOpen} ><FaEdit style={{fontSize:'19px'}} /> Edit Product  </Button> \r\n                        <Dialog open={open} onClose={handleClose}\r\n                          className='updateProd'>\r\n                                <UpdateProduct />\r\n             \r\n                        </Dialog> \r\n                        \r\n                        </div> \r\n                        : (<div></div>)}\r\n                        </div>\r\n                            <div className='col-md-2 pt-5 '>  {user.attributes.type===2 && user.user_id===   product.user.id ?\r\n                        <Link className='delete_prod' to='/dashboard/marketplace' >\r\n                           <Button className='' onClick={e=>deleteProduct(match.params.id)}> <DeleteOutlineRoundedIcon  style={{fontSize:'19px'}} /> Delete </Button>                      \r\n                        </Link>\r\n                        : (<div></div>)}</div>\r\n                           \r\n                        </div>\r\n                                </div>\r\n                                       \r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n                    \r\n                             <hr/>\r\n                <div className='bot_section ' className='pt-3 '>\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-11'><h5>Similar Products</h5></div> \r\n                        <div className='row'>\r\n                        <OwlCarousel className=\"slider-items owl-carousel pt-4\"  autoplay='true' autoplaySpeed='2000'>\r\n                        {markets && markets.map((markets) =>\r\n                                (\r\n                                    <div>\r\n                                    <Col key={markets.id} markets={markets}  className='products'>\r\n                                    <Col><img src={markets.image} width='180px' height='250' style={{borderRadius:'5px'}}  className='pb-2'/></Col>\r\n                                    </Col>\r\n                                    </div>\r\n                                    )\r\n                                )}\r\n                        </OwlCarousel>\r\n                        </div>     \r\n                          </div>\r\n                    </div>            \r\n              </div>\r\n        </div> \r\n  </div>\r\n\r\n        </Fragment>\r\n    )\r\n\r\n}\r\nProductItem.propTypes = {\r\n    market: PropTypes.object.isRequired,\r\n    auth :PropTypes.object.isRequired,\r\n    getProduct: PropTypes.func.isRequired,\r\n    deleteProduct: PropTypes.func.isRequired,\r\n    addCart:PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    updateProduct : PropTypes.func.isRequired,\r\n    getMarket: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    market: state.market,\r\n    categories: state.market,\r\n    product : state.product,\r\n    markets: state.market,\r\n    cart: state.cart,\r\n    carts: state.cart\r\n})\r\nexport default connect(mapStateToProps ,{ getProduct , deleteProduct, addCart, updateProduct, getMarket, showCart })(ProductItem);","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\watch\\Watch.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\newsfeed\\Newfeed.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\Userprofile.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\404Page\\Page404.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Search\\Searchitem.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\messages\\Messages.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\Cart.js",["375"],"import React, { useEffect,useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { showCart,deleteProd } from '../../../../Actions/cart';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport { Fragment } from 'react';\r\nimport CartProduct from './CartProduct';\r\nimport './Cart.css';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport { IoBagCheckOutline } from 'react-icons/io5';\r\nimport { Button } from '@material-ui/core';\r\nimport Stepper from './Steppers'\r\nconst Cart = ( { showCart, cart :{ cart}   ,deleteProd }  ) => {\r\n/******************************/    \r\nuseEffect(() => {\r\n  showCart()\r\n},[showCart])\r\nconst [hidden,sethidden]=useState(true)\r\n\r\n/******************************/ \r\nreturn (\r\n    <Fragment>\r\n        <title>Shopping cart | FishComb</title>\r\n        <Row className='pt-5 pb-5 '>\r\n            <Col sm={2} ></Col>\r\n            <Col sm={9} className='card__shop'>\r\n                <Card style={{backgroundColor:'#f7f8fa',border:'0px'}} >\r\n                    <Row className='pt-3'> \r\n                        \r\n                        <Col xs={10}>\r\n                            <h2 className='title'><b>Your Shop Cart</b></h2>\r\n                        </Col>  \r\n                    </Row>\r\n                    <Row className='pt-5'>\r\n                        \r\n                    </Row>\r\n                    <hr /> \r\n                    <Row>\r\n                       {cart.carts ? <Col xs={12}>\r\n                            {cart && cart.carts.map((cart) =>\r\n                                (\r\n                                <CartProduct key={cart.cart_id} cart={cart} />)\r\n                                )}\r\n                        </Col>:<Col className='pt-3 pb-3'><h4>No Product in Your Cart</h4></Col>} \r\n                    </Row>\r\n                    <Row className='py-2 border Total__section'>\r\n                        <Col xs={10} className='px-5'><h3><b>Total</b></h3> </Col>\r\n                        <Col xs={2} className='px-5'>\r\n                             {cart && cart.total_amount} £\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='pt-2'>\r\n                        <Col xs={5}></Col>\r\n                    </Row>\r\n                </Card>             \r\n            </Col>\r\n            <Col sm={2}></Col>\r\n       </Row>\r\n       <Row>\r\n           <Col sm={10} md={10}></Col>\r\n          \r\n           <Col sm={1} md={1}><Button onClick={e=>sethidden(false)}><PaymentIcon/> Checkout</Button></Col>\r\n       </Row>\r\n       <Row hidden={hidden}><Col sm={1} md={1}></Col> <Col sm={5} md={5}><h3>Checkout</h3></Col>\r\n       <Row>\r\n       <Col sm={1} md={1}></Col><Col sm={11} md={11}><Stepper/></Col>\r\n       </Row>\r\n       </Row>\r\n    </Fragment>\r\n)\r\n}\r\nCart.prototype={\r\n    showCart: PropTypes.func.isRequired,\r\n    deleteProd: PropTypes.func.isRequired,\r\n    cart: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    cart : state.cart,\r\n})\r\nexport default connect(mapStateToProps, { showCart,deleteProd }) (Cart);","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\auth\\500Page\\Page500.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\Profile.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\auth.red.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\events.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\friends.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\Post.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\cart.js",["376","377","378","379","380","381"],"import {\r\n    DECREASE,\r\n    INCREASE,\r\n    CLEAR_CART,\r\n    REMOVE,\r\n    GET_TOTALS,\r\n    TOGGLE_AMOUNT,\r\n    GET_CART,\r\n    ADD_CART,\r\n    DELETE_PROD_CART,\r\n    UPDATE_QUANTITY,\r\n    CHECKOUT,\r\n    MY_ORDERS,\r\n    ORDER_FAILS,\r\n    PAYMENT_ERROR,\r\n    PAYMENT_SUCCESS\r\n  } from '../Actions/types';\r\n  \r\n  const initialStore = {\r\n    cart: [],\r\n    carts:[],\r\n    total: 0,\r\n    amount: 0,\r\n    order:null,\r\n    orders:[]\r\n  };\r\n  function reducer(state = initialStore, action) {\r\n     if (action.type === GET_CART){\r\n         return {\r\n             ...state,\r\n             cart: action.payload\r\n         }\r\n     }\r\n     if (action.type === ADD_CART){\r\n      return {\r\n          ...state,\r\n       // cart:[...state.cart,action.payload]\r\n      }\r\n  }\r\n     if (action.type === DELETE_PROD_CART) {\r\n         return {\r\n             ...state,\r\n             cart:state.cart.carts.filter(cart => cart.cart_id !== action.payload)\r\n         }\r\n     }\r\n     if (action.type === UPDATE_QUANTITY){\r\n       return {\r\n         ...state,\r\n         cart: action.payload\r\n       }\r\n     }\r\n     if (action.type === CHECKOUT){\r\n      return {\r\n        ...state,\r\n        order: action.payload\r\n      }\r\n    }\r\n    if (action.type === MY_ORDERS){\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      }\r\n    }\r\n    if (action.type === ORDER_FAILS){\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n    if (action.type === PAYMENT_SUCCESS){\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n    if (action.type === PAYMENT_ERROR){\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n  \r\n  export default reducer;","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Market.js",["382","383","384","385","386","387","388","389","390"],"import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { IoBasketSharp } from 'react-icons/io5';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { getMarket, myProduct, getCategories, search } from '../../../Actions/Market';\r\nimport { showCart } from '../../../Actions/cart';\r\nimport \"./Market.css\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { addProduct } from '../../../Actions/Market';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport YourAccount from './YourAccount';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport SingleProduct from './products/SingleProduct';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from'../Spinner/Spinner'\r\nconst Market = ({ auth: { user }, getMarket, markets: { markets, categories,loading }, myProduct, search, addProduct, cart: { cart }, showCart }) => {\r\n    /******************************/\r\n    useEffect(() => {\r\n        getMarket()\r\n    }, [getMarket])\r\n    useEffect(() => {\r\n        showCart()\r\n    }, [showCart])\r\n\r\n    /*********************************/\r\n    const [filter, setFilter] = React.useState('name');\r\n    const [value, setValue] = React.useState('');\r\n    const handleChange = (product) => {\r\n        setFilter(product.target.value);\r\n    };\r\n    const handleChange1 = e => {\r\n        setValue(e.target.value)\r\n    }\r\n    const onsubmit1 = e => {\r\n        e.preventDefault();\r\n        console.log(filter)\r\n        // console.log(value)\r\n        search(filter, value)\r\n    }\r\n    /*********************************/\r\n    const [name, setname] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [category_id, setcategoryid] = useState('')\r\n    const [price, setprice] = useState('')\r\n    const [stock, setstock] = useState('')\r\n    const [image, setimage] = useState('')\r\n    const onnamechange = e => {\r\n        setname(e.target.value)\r\n    }\r\n    const ondescchange = e => {\r\n        setdescription(e.target.value)\r\n    }\r\n\r\n    const oncategorychange = e => {\r\n        setcategoryid(e.target.value)\r\n    }\r\n\r\n    const onpricechange = e => {\r\n        setprice(e.target.value)\r\n    }\r\n\r\n    const onstockchange = e => {\r\n        setstock(e.target.value)\r\n    }\r\n    const onimagechange = e => {\r\n        setimage(e.target.files[0])\r\n    }\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        const file = new FormData();\r\n        file.append('name', name);\r\n        file.append('description', description);\r\n        file.append('category_id', category_id);\r\n        file.append('price', price);\r\n        file.append('stock', stock);\r\n        file.append('image', image);\r\n        file.append('status', 1);\r\n        addProduct(file)\r\n        e.target.reset();\r\n    }\r\n    /*****************************/\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const handleClose2 = () => {\r\n        setOpen1(false);\r\n    };\r\n    const handleOpen2 = () => {\r\n        setOpen1(true);\r\n    };\r\n    /*********************************/\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    /*********************************/\r\n    return loading ===true ? <Spinner/> :\r\n        <div>\r\n            <title>Marketplace | FishComb</title>\r\n            <div>\r\n                <div className='row'>\r\n                    <div className='col-md-12  mt-5'>\r\n                    </div>\r\n                    <div className='row pb-3'>\r\n                        <div className='col-md-3'></div>\r\n                        <div className=\"col-sm-9  pb-3\">\r\n                            <ul className=\"nav nav-pills nav-justified \" id='navprofil'>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink to={`#`} className=\"link_cart\"><span className='n'>Multimedia</span></NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink to={`#`} className=\"link_cart\"><span className='n'>Books</span></NavLink>\r\n                                </li>\r\n                                <li className=\"col-sm-7\">\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <button className='btn btn-outline-dark button__cart'><NavLink to={'/dashboard/cart'} className=\"link__cart\"><span className='cart__span'>Basket <IoBasketSharp />{cart && cart.carts ? <span>{cart.carts.length}</span> : <div></div>}</span></NavLink> </button>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row pt-4'>\r\n                        <div className='col-md-3  side_min_bar'>\r\n                            <form onSubmit={e => onsubmit1(e)} >\r\n                                <div className=\"col-sm-12 px-0 header__input\" >\r\n                                    <input type=\"text\" placeholder='Search Product' aria-label=\"Search\" value={value} onChange={handleChange1} />\r\n                                    <button className=\"col-sm-2  header__button\" >\r\n                                        <svg width=\"19px\" height=\"19px\" version=\"1.1\" xmlns=\"http://www.w3.org/1999/xlink\">\r\n                                            <g id=\"fishcomb-product-icons-14\">\r\n                                                <path d=\"M12.2518 1.61932e-15C12.3328 0.0283492 12.4155 0.051191 12.4995 0.0683699C15.6293 0.480702 18.1632 2.82089 18.8306 5.91537C19.498 9.00985 18.1549 12.1912 15.4749 13.8641C12.7948 15.5369 9.35588 15.3404 6.88257 13.3732C6.81668 13.3207 6.74396 13.2752 6.63263 13.1977L0.840723 19L0 18.1978L5.82371 12.3658C5.74646 12.2656 5.68965 12.1858 5.6283 12.106C4.09022 10.1285 3.64051 7.51038 4.43017 5.13067C5.21984 2.75096 7.14415 0.925279 9.55698 0.266643C9.95007 0.157251 10.3545 0.0866019 10.7522 0L12.2518 1.61932e-15ZM11.4884 13.7948C14.0295 13.8077 16.3277 12.2829 17.3102 9.93242C18.2926 7.58189 17.7654 4.86919 15.9748 3.06078C14.1841 1.25238 11.4832 0.704965 9.13291 1.67411C6.78265 2.64325 5.24665 4.93781 5.24202 7.48651C5.24318 10.9531 8.03216 13.7697 11.4884 13.7948L11.4884 13.7948Z\" id=\"Shape\" fill=\"#CDCDCD\" stroke=\"none\" />\r\n                                            </g>\r\n                                        </svg>\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                           { user.attributes.type ===2 ?\r\n                           <div className='row pt-2 mx-1'>\r\n                                <div className='col-sm-12 marketbtn px-0 '>\r\n                                    <Button className='marketbtn' onClick={handleClickOpen1}><h6>Your Account</h6></Button>\r\n                                </div>\r\n                            </div>:<div></div>}\r\n                             { user.attributes.type ===2 ?\r\n                            <div className='row pt-2 mx-1'>\r\n                                <div className='col-sm-12 px-0 marketbtn'>\r\n                                    <Button className='marketbtn' onClick={handleClickOpen}><h6>Add Product</h6></Button>\r\n                                </div>\r\n                            </div>:<div></div>}\r\n                             { user.attributes.type ===2 ?\r\n                            <div className='row pt-2 mx-1'>\r\n                                <div className='col-sm-12 px-0 marketbtn'>\r\n                                    <Button className='marketbtn' onClick={myProduct} ><h6>My Product</h6></Button>\r\n                                </div>\r\n                                </div>:<div></div>}\r\n                        </div>\r\n                        <Dialog className='addProduct'>\r\n                            <YourAccount />\r\n                        </Dialog>\r\n                        <Dialog open={open} onClose={handleClose} className='addProduct'>\r\n                            <div>\r\n                                <form className='addProduct' onSubmit={e => submit(e)}>\r\n                                    <DialogContent>\r\n                                        <div className='row'>\r\n                                            <div className='col-sm-1 mr-2'>\r\n                                                <Avatar src={user && user.attributes.profile_image} />\r\n                                            </div>\r\n                                            <div className='col-sm-10 pt-3'>\r\n                                                <div className='row'>\r\n                                                    <div className='row pb-2'>\r\n                                                        <div className='col-sm-12'>\r\n                                                            <h6><b>{user && user.attributes.first_name.charAt(0).toUpperCase() + user.attributes.first_name.slice(1)}  {user && user.attributes.last_name.charAt(0).toUpperCase() + user.attributes.last_name.slice(1)}</b></h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='row'>\r\n                                                        <div className='row pt-3'>\r\n                                                            <div className='col-sm-12'>\r\n                                                                <Row>\r\n                                                                    <Col xs={4}>\r\n                                                                        <Form.Label>Name Product</Form.Label>\r\n                                                                    </Col>\r\n                                                                    <Col xs={8}>\r\n                                                                        <FormControl\r\n                                                                            className='input_event'\r\n                                                                            placeholder=\"Product Name\"\r\n                                                                            margin=\"dense\"\r\n                                                                            label=\"Product_name\"\r\n                                                                            name=\"name\" value={name} onChange={onnamechange}\r\n                                                                            type=\"text\" />\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='row pt-3 '>\r\n                                                            <div className='col-12'>\r\n                                                                <Row>\r\n                                                                    <Col xs={4}>\r\n                                                                        <Form.Label>Price</Form.Label>\r\n                                                                    </Col>\r\n                                                                    <Col xs={8}>\r\n                                                                        <FormControl\r\n                                                                            className='input_event'\r\n                                                                            placeholder=\"Price\"\r\n                                                                            margin=\"dense\"\r\n                                                                            name=\"price\" value={price} onChange={onpricechange}\r\n                                                                            type=\"text\" />\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <Row className='pt-3 pb-2'>\r\n                                                            <Col xs={12}>\r\n                                                                <Row>\r\n                                                                    <Col xs={4}></Col>\r\n                                                                    <Col xs={8}>\r\n                                                                        <select\r\n                                                                            className='col-md-12'\r\n                                                                            // placeholder='Category Event'\r\n                                                                            value={category_id}\r\n                                                                            name=\"category_id\"\r\n                                                                            onChange={oncategorychange}>\r\n                                                                            {categories && categories.map(c =>\r\n                                                                                (<option key={c.id} value={c.id}>{c.name} </option>)\r\n                                                                            )}\r\n                                                                        </select>\r\n                                                                    </Col>\r\n                                                                    </Row>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <div className='row pt-3'>\r\n                                                            <div className='col-12'>\r\n                                                                 <Row>\r\n                                                                    <Col xs={4}>\r\n                                                                        <Form.Label>Quantity</Form.Label>\r\n                                                                    </Col>\r\n                                                                    <Col xs={8}>\r\n                                                                        <FormControl\r\n                                                                            placeholder=\"Quantity\"\r\n                                                                            className='input_event'\r\n                                                                            margin=\"dense\"\r\n                                                                            name=\"stock\" value={stock} onChange={onstockchange}\r\n                                                                            type=\"text\" />\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='row pt-3'>\r\n                                                            <div className='col-12'>\r\n                                                                <Row>\r\n                                                                    <Col xs={4}>\r\n                                                                        <Form.Label>Description</Form.Label>\r\n                                                                    </Col>\r\n                                                                    <Col xs={8}>\r\n                                                                        <FormControl\r\n                                                                            placeholder=\"Description\"\r\n                                                                            className='input_event'\r\n                                                                            margin=\"dense\"\r\n                                                                            id=\"Description\"\r\n                                                                            as=\"textarea\" aria-label=\"With textarea\"\r\n                                                                            name=\"description\" value={description} onChange={ondescchange}\r\n                                                                            type=\"textarea\" />\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='row pt-3 pb-2'>\r\n                                                            <div className='col-12'>\r\n                                                                <div className='row pt-3'>\r\n                                                                    <div className=\"btn-group btn-group-toggle col-md-12  \">\r\n                                                                        <div className='col-md-4'> Upload image </div><input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={onimagechange} />\r\n                                                                        {   /*<Button variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                                                            <span  >Upload Video </span>\r\n                                                                            </Button>*/}\r\n                                                                    </div>  </div> </div>\r\n                                                            <div className='col-12'>\r\n                                                                <div className='row pt-3'>\r\n                                                                    <div className=\"btn-group btn-group-toggle col-md-12  \">\r\n                                                                        <div className='col-md-4'>Upload File </div><input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" placeholder='file product' />\r\n                                                                        { /*<Button variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                                                            <span  >Upload Video </span>\r\n                                                                            </Button>*/}\r\n                                                                    </div> </div> </div>\r\n                                                            <div className='col-2'></div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <Row className='pb-4 pt-3'>\r\n                                                        <Col xs={8}></Col>\r\n                                                        <Col xs={4}>\r\n                                                            <Button type='submit'\r\n                                                                    variant=\"contained\" color=\"primary\"\r\n                                                                    onClick={handleClose} className='float-right'>\r\n                                                                    Save Product\r\n                                                            </Button>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </DialogContent>\r\n                                </form>\r\n                            </div>\r\n                        </Dialog>\r\n                        <div className='col-md-9 ' id='body'>\r\n                            <div className='row'>\r\n                                <div className='col-md-12 pb-4'><h6><b>Featured</b></h6></div>\r\n                            </div>\r\n\r\n                            <div className='row'>\r\n                                <div className='col-md-3 '> <div className='image_holder grid'>\r\n                                    <img src='https://picsum.photos/id/99/200/300' width=\"200\" height=\"180\" alt='event' style={{ borderRadius: '5px' }} className='product' />\r\n                                    <div className='description'>\r\n                                        <span>25$</span> <br />\r\n                                        <span>lorem ipsuem</span> <br />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                                <div className='col-md-3'>\r\n                                    <div className='image_holder grid '>\r\n\r\n                                        <img className='pic' src='https://picsum.photos/id/100/200/300' width=\"200\" height=\"180\" id='img' style={{ borderRadius: '5px' }} alt='event' className='product' />\r\n                                        <div className='icon'> </div>\r\n\r\n\r\n                                        <div className='description'>\r\n                                            <span>58$</span> <br />\r\n                                            <span>lorem ipsuem</span> <br />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-md-3'>\r\n                                    <div className='image_holder grid '>\r\n                                        <img src='https://picsum.photos/id/77/200/300' width=\"200\" height=\"180\" alt='event' style={{ borderRadius: '5px' }} className='product' />\r\n                                        <div className='description'>\r\n                                            <span>41$</span> <br />\r\n                                            <span>lorem ipsuem</span> <br />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-md-3'>\r\n                                    <div className='image_holder grid '>\r\n                                        <img src='https://picsum.photos/id/98/200/300' width=\"200\" height=\"180\" style={{ borderRadius: '5px' }} alt='event' className='product' />\r\n                                        <div className='description'>\r\n                                            <span>36$</span> <br />\r\n                                            <span>lorem ipsuem</span> <br />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col-md-12 mt-5 mb-3'> <h6><b>All products</b></h6></div>\r\n                                <div className='row'>\r\n                                    {markets && markets.map((markets) =>\r\n                                    (\r\n                                        <SingleProduct key={markets.id} markets={markets} className='products' />)\r\n                                    )}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    \r\n}\r\nMarket.prototype = {\r\n    auth: PropTypes.object.isRequired,\r\n    getMarket: PropTypes.func.isRequired,\r\n    myProduct: PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    search: PropTypes.func.isRequired,\r\n    addProduct: PropTypes.func.isRequired,\r\n    cart: PropTypes.object.isRequired,\r\n    showCart: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    markets: state.market,\r\n    categories: state.categories,\r\n    cart: state.cart,\r\n    carts: state.cart\r\n})\r\nexport default connect(mapStateToProps, { getMarket, myProduct, search, addProduct, showCart })(Market);\r\n","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\board\\Board.js",["391","392","393","394","395","396","397","398","399","400","401","402"],"import React, { useState, useEffect } from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Table } from 'reactstrap';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport { Link } from 'react-router-dom';\r\nimport { getThread, addThread, searchThread, myThreads } from '../../../Actions/Board';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './Board.css';\r\nimport { Button } from '@material-ui/core';\r\nimport SingleThread from './SingleThread';\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\n\r\n\r\nconst Board =( { categories, getThread, addThread , Thread: {thread,loading}, searchThread, myThreads}) => {\r\n    useEffect(() => {\r\n        getThread()\r\n    }, [getThread])\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const oncategorychange = e => {\r\n        setcategoryid(e.target.value)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n    const handleOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const [category_id, setcategoryid] = useState('')\r\n\r\n\r\n/***************************************/\r\nconst [title, settitle] = useState('')\r\nconst [body, setbody] = useState('')\r\nconst [status, setstatus] = useState('')\r\nconst [image, setimage] = useState('')\r\nconst ontitlechange = e => {\r\n    settitle(e.target.value)\r\n}\r\n\r\nconst onbodychange = e => {\r\n    setbody(e.target.value)\r\n}\r\n\r\nconst onstatuschange = e => {\r\n    setstatus(e.target.value)\r\n}\r\nconst onimagechange = e => {\r\n    setimage(e.target.files[0])\r\n}\r\nconst submit = e => {\r\n    e.preventDefault();\r\n    const file = new FormData();\r\n    file.append('title', title);\r\n    file.append('body', body);\r\n    file.append('image', image);\r\n    file.append('status', 1);\r\n    addThread(file)\r\n    e.target.reset();\r\n}\r\n/***************************************/\r\nconst [filter, setFilter] = React.useState('title');\r\nconst [value, setValue] = React.useState('');\r\nconst handleChange = (product) => {\r\n    setFilter(product.target.value);\r\n};\r\nconst handleChange1 = e => {\r\n    setValue(e.target.value)\r\n}\r\nconst onsubmit1 = e => {\r\n    e.preventDefault();\r\n    console.log(filter)\r\n   // console.log(value)\r\n    searchThread(filter, value)\r\n}\r\n/***************************************/\r\n    return loading ===true ? <Spinner /> :\r\n        <div>\r\n            <title>Forum | fishComb</title>\r\n            <Row className='pt-5 mb-4'>\r\n                <Col md={3}></Col>\r\n                <Col md={4} style={{display:'contents'}}>\r\n                    <Row>\r\n                        <ul className=\"nav\">\r\n                            <Col xs={4}>\r\n                                <li className=\"nav-item\">\r\n                                   <Button> <Link className='nav-link' className=\"link_cart\" to='#' ><span className=\"n\">Latest</span></Link></Button>\r\n                                </li>\r\n                            </Col>\r\n                            <Col xs={1}></Col>\r\n                            <Col xs={6}>\r\n                                 <li className=\"nav-item\">\r\n                                 <Button>\r\n                                        <Link className='nav-link' className=\"link_cart\" to='#' onClick={myThreads} ><span className=\"n\" >My Posts</span></Link>\r\n                                    </Button>\r\n                                </li>\r\n                           </Col>\r\n                        </ul>\r\n                    </Row>\r\n                </Col>\r\n                    <Col md={5}></Col>\r\n                    <Col>\r\n                        <button className='btn btn-outline-dark' id='Button_board' onClick={handleClickOpen} >New Post</button>\r\n                    </Col>         \r\n                </Row>\r\n                <Row className='Side_Bar'>\r\n                    <Col md={3} sm={3} xl={3} className='side_min_bar'>\r\n                        <form onSubmit={e => onsubmit1(e)} >\r\n                            <Col md={12} sm={12} xl={12} className=\"header__input px-0\" >\r\n                                <input type=\"text\" placeholder='Search Fishcomb' aria-label=\"Search\" height='25px' value={value} onChange={handleChange1}  />\r\n                                <button className=\"col  header__button\" >\r\n                                    <svg width=\"19px\" height=\"19px\" version=\"1.1\" xmlns=\"http://www.w3.org/1999/xlink\">\r\n                                        <g id=\"fishcomb-product-icons-14\">\r\n                                            <path d=\"M12.2518 1.61932e-15C12.3328 0.0283492 12.4155 0.051191 12.4995 0.0683699C15.6293 0.480702 18.1632 2.82089 18.8306 5.91537C19.498 9.00985 18.1549 12.1912 15.4749 13.8641C12.7948 15.5369 9.35588 15.3404 6.88257 13.3732C6.81668 13.3207 6.74396 13.2752 6.63263 13.1977L0.840723 19L0 18.1978L5.82371 12.3658C5.74646 12.2656 5.68965 12.1858 5.6283 12.106C4.09022 10.1285 3.64051 7.51038 4.43017 5.13067C5.21984 2.75096 7.14415 0.925279 9.55698 0.266643C9.95007 0.157251 10.3545 0.0866019 10.7522 0L12.2518 1.61932e-15ZM11.4884 13.7948C14.0295 13.8077 16.3277 12.2829 17.3102 9.93242C18.2926 7.58189 17.7654 4.86919 15.9748 3.06078C14.1841 1.25238 11.4832 0.704965 9.13291 1.67411C6.78265 2.64325 5.24665 4.93781 5.24202 7.48651C5.24318 10.9531 8.03216 13.7697 11.4884 13.7948L11.4884 13.7948Z\" id=\"Shape\" fill=\"#CDCDCD\" stroke=\"none\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </button>\r\n                            </Col>\r\n                        </form>\r\n                        <Row className='marketbtn mt-2 ml-0'>\r\n                            <Col xs={12} calssName='marketbtn px-0'>\r\n                                <Button className='marketbtn px-0'><h6>My Account</h6> </Button>\r\n                            </Col> \r\n                        </Row>\r\n                            </Col>\r\n                            <Col className='border-left'>\r\n                                {thread && thread.map((threads) =>\r\n                                    (\r\n                                    <SingleThread key={threads.id} threads={threads}  />)\r\n                                )}\r\n                            </Col>\r\n                        <Row>   \r\n                    </Row>\r\n                </Row>\r\n                <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <form className='addQuestion' onSubmit={e => submit(e)}>\r\n                        <DialogTitle id=\"form-dialog-title\">New Post</DialogTitle>\r\n                            <DialogContent>\r\n                                <Row className=\" pt-2\">\r\n                                    <Col sm={12} md={12} xl={12}>\r\n                                        <Row>\r\n                                            <Col xs={2}>\r\n                                                <Form.Label>Title</Form.Label>\r\n                                            </Col>\r\n                                            <Col xs={10}>\r\n                                                <FormControl\r\n                                                className='input_event'\r\n                                                placeholder='Title'\r\n                                                margin=\"dense\"\r\n                                                id=\"Title\"\r\n                                                label=\"Title\"\r\n                                                type=\"text\"\r\n                                                name=\"title\" value={title} onChange={ontitlechange} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    \r\n                                </Row>\r\n                                <Row className='pt-1 pb-1'>\r\n                                </Row>\r\n                                <Row className='pt-3'>\r\n                                    <Col xs={12}>\r\n                                    <Row>\r\n                                        <Col xs={2}>\r\n                                            <Form.Label>Body</Form.Label>\r\n                                        </Col>\r\n                                        <Col xs={10}>\r\n                                            <Form.Control as=\"textarea\"\r\n                                            rows={3}\r\n                                            className='input_event'\r\n                                            placeholder='Body'\r\n                                            name=\"body\" value={body} onChange={onbodychange} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=' pt-3'>\r\n                                        <Col  sm={12} md={12} xl={12} className=\"btn-group btn-group-toggle \">\r\n                                        <div className='col-md-3 px-0'>Upload Image</div><input accept=\"image/*\" id=\"icon-button-file\" className='px-0' type=\"file\" onChange={onimagechange} placeholder='file Image' />\r\n                                            { /*<Button variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                                <span  >Upload Video </span>\r\n\r\n                                                </Button>*/}\r\n                                        </Col>\r\n                                    </Row>\r\n                                <Row className='pt-3'>\r\n                                    <Col md={8} className='mt-3'></Col>\r\n                                    <Col xs={4} className='pb-4' >\r\n                                        <Button className='pt-2 pb-2 ' variant=\"contained\" color=\"primary\"  onClick={handleClose} type='submit'>Ask Question</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </DialogContent>\r\n                        </form>\r\n                    </Dialog>\r\n                </div>\r\n    \r\n}\r\nBoard.prototype={\r\n    categories: PropTypes.object.isRequired,\r\n    getThread: PropTypes.func.isRequired,\r\n    Thread: PropTypes.object.isRequired,\r\n    addThread: PropTypes.func.isRequired,\r\n    searchThread: PropTypes.func.isRequired,\r\n    myThreads: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    categories: state.categories,\r\n    Thread : state.Thread,\r\n})\r\nexport default connect (mapStateToProps, { getThread, addThread, searchThread, myThreads }) (Board);","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Eventitem.js",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"import React, { useEffect, useState, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    getevent,\r\n    deleteEvent,\r\n    subscribEevent,\r\n    invite,\r\n    getfriends,\r\n    update,\r\n    getevents\r\n} from '../../../Actions/events'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport './Events.css'\r\nimport { IoShareSocialOutline } from \"react-icons/io5\";\r\nimport {\r\n    Avatar,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    MenuItem,\r\n    Slide\r\n} from '@material-ui/core'\r\nimport { FormControl } from 'react-bootstrap'\r\nimport Button from '@material-ui/core/Button';\r\nimport UpdateRoundedIcon from '@material-ui/icons/UpdateRounded';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport ReactPlayer from 'react-player';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport FeaturedDialog from './FeaturedDialog'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Moment from \"react-moment\";\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\"\r\n        ref={ref}\r\n        {...props} />;\r\n});\r\nconst Eventitem = ({\r\n    match,\r\n    getevent,\r\n    events: {\r\n        event,\r\n        friends,\r\n        events,\r\n        categories,\r\n        loading\r\n    },\r\n    deleteEvent,\r\n    auth: {\r\n        user\r\n    },\r\n    getfriends,\r\n    invite,\r\n    update,\r\n    getevents\r\n}) => {\r\n    useEffect(() => {\r\n        getevent(match.params?.id);\r\n    }, [getevent, match.params?.id])\r\n    useEffect(() => {\r\n        getfriends()\r\n    }, [getfriends])\r\n    useEffect(() => {\r\n        getevents()\r\n    }, [getevents])\r\n    const [state, setState] = React.useState({ checkedA: true });\r\n    const anchorRef = React.useRef(null);\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClosePoint = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n        setOpen1(false);\r\n    };\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen1(false);\r\n        }\r\n    }\r\n    const prevOpen = React.useRef(open1);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open1 === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n        prevOpen.current = open1;\r\n    }, [open1]);\r\n    const handleToggle = () => {\r\n        setOpen1((prevOpen) => !prevOpen);\r\n    };\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const increment = useCallback(() => {\r\n        getevent(event.next_event)\r\n\r\n    }, [event && event.next_event])\r\n\r\n    const decrement = useCallback(() => {\r\n        getevent(event.previous_event)\r\n\r\n    }, [event && event.previous_event])\r\n\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const handleClose2 = () => {\r\n        setOpen2(false);\r\n    };\r\n    const handleOpen2 = () => {\r\n        setOpen2(true);\r\n    };\r\n    const handleClickOpen2 = () => {\r\n        setOpen2(true);\r\n    };\r\n    const [open3, setOpen3] = React.useState(false);\r\n    const handleClose3 = () => {\r\n        setOpen3(false);\r\n    };\r\n    const handleOpen3 = () => {\r\n        setOpen3(true);\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [user_id, setUser] = useState('');\r\n\r\n    const onsubmit = e => {\r\n        e.preventDefault();\r\n        invite(user_id, event.id)\r\n    }\r\n\r\n    const [uid, setText] = useState('');\r\n    const [disable, setdisable] = useState(false);\r\n    const [name, setname] = useState('')\r\n    const [description, setdescription] = useState('')\r\n\r\n    const [location, setlocation1] = useState('')\r\n    const [date, setdate] = useState('')\r\n    const [video_link, setvideolink] = useState('')\r\n    const [cover, setcover] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [category_id, setCategory_id] = useState('')\r\n\r\n    const onnamechange = e => {\r\n        setname(e.target.value)\r\n    }\r\n\r\n    const ondescchange = e => {\r\n        setdescription(e.target.value)\r\n    }\r\n\r\n\r\n    const onlocationchange = e => {\r\n        setlocation1(e.target.value)\r\n    }\r\n\r\n    const ondatechange = e => {\r\n        setdate(e.target.value)\r\n    }\r\n    const oncoverchange = e => {\r\n        setcover(e.target.files[0])\r\n    }\r\n    const onlinkchange = e => {\r\n        setvideolink(e.target.value)\r\n    }\r\n\r\n    const onstatuschange = e => {\r\n        setStatus(e.target.value)\r\n    }\r\n    useEffect(() => {\r\n        setlocation1(loading ||  !event?.location ? '' : event?.location)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setname(loading ||  !event?.name ? '' : event?.name)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setdescription(loading ||  !event?.description ? '' : event?.description)\r\n    }, [loading])\r\n    \r\n    useEffect(() => {\r\n        setvideolink(loading || !event?.video_link ? '' : event?.video_link)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setStatus(loading || !event?.status ? 1 : event?.status)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setdate(loading || !event?.date ? '' : event?.date)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setcover(loading || !event?.cover ? '' : event?.cover)\r\n\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setCategory_id(loading || !event?.category.id ? '' : event?.category.id)\r\n\r\n    }, [loading])\r\n    const handleswitch = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.checked\r\n        });\r\n        if (event.target.checked === true) {\r\n            setStatus(1)\r\n        } else {\r\n            setStatus(0)\r\n        }\r\n        console.log(status)\r\n    };\r\n    const getlink = () => {\r\n        console.log(window.location.href);\r\n    }\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        const file = new FormData();\r\n        file.append('name', name);\r\n        file.append('description', description);\r\n        file.append('category_id', category_id);\r\n        file.append('location', location);\r\n        file.append('date', date);\r\n        file.append('cover', cover);\r\n        file.append('video_link', video_link);\r\n        file.append('status', status);\r\n        update(file, event.id)\r\n        e.target.reset();\r\n    }\r\n    const [open5, setOpen5] = React.useState(false);\r\n\r\n    const handleClickOpen5 = () => {\r\n      setOpen5(true);\r\n    };\r\n  \r\n    const handleClose5 = () => {\r\n      setOpen5(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <title>{event?.name} | FishComb</title>\r\n             {/*****************************Update Dialog*********************************** */}\r\n            <Dialog open={open2}\r\n                onClose={handleClose2}\r\n                aria-labelledby=\"form-dialog-title1\" className='dialogForm'>\r\n                <form onSubmit={\r\n                    e => submit(e)} className='add__event'>\r\n                    <DialogTitle id=\"form-dialog-title1\">update event</DialogTitle>\r\n                    <DialogContent>\r\n                        <div className=\"row pt-1\">\r\n                            <div className=' col-sm-12'>\r\n                                <FormControl className='input_event'\r\n                                    placeholder={\r\n                                        event && event.name\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    id=\"Title\"\r\n                                    label=\"Title\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onChange={onnamechange} /></div>\r\n                        </div>\r\n                        <div className=\"row pt-3\">\r\n                            <div className='col-6'>\r\n                                <FormControl className='input_event' margin=\"dense\" id=\"Date\" type=\"Date\" name=\"date\"\r\n                                    value={date}\r\n                                    onChange={ondatechange} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <select\r\n                                    value={category_id}\r\n                                    onChange={\r\n                                        e => setCategory_id(e.target.value)\r\n                                    }>\r\n                                    {\r\n                                        categories && categories.map(c => (\r\n                                            <option key={\r\n                                                c.id\r\n                                            }\r\n                                                value={\r\n                                                    c.id\r\n                                                }>\r\n                                                {\r\n                                                    c.name\r\n                                                } </option>\r\n                                        ))\r\n                                    } </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row pt-3\">\r\n                            <div className='col-sm-12'>\r\n                                <FormControl placeholder={\r\n                                    event && event.location\r\n                                }\r\n                                    margin=\"dense\"\r\n                                    id=\"Location\"\r\n                                    className='input_event'\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    name=\"location\"\r\n                                    value={location}\r\n                                    onChange={onlocationchange} /></div>\r\n                        </div>\r\n                        <div className=\"row pt-3\">\r\n                            <div className='col-sm-12'>\r\n                                <FormControl placeholder={\r\n                                    event && event.description\r\n                                }\r\n                                    className='input_event'\r\n                                    margin=\"dense\"\r\n                                    id=\"Description\"\r\n                                    as=\"textarea\"\r\n                                    aria-label=\"With textarea\"\r\n                                    type=\"textarea\"\r\n\r\n                                    name=\"description\"\r\n                                    value={description}\r\n                                    onChange={ondescchange} /></div>\r\n                        </div>\r\n                        <div className='row pt-3'>\r\n                        </div>\r\n                        <Col sm={12}\r\n                            md={12}\r\n                            xl={12}\r\n                            className=\"btn-group btn-group-toggle \">\r\n                            <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\"\r\n                                onChange={oncoverchange}\r\n                                name=\"cover\" />\r\n                        </Col>\r\n                        <div className=\"row pt-3\">\r\n                            <div className='col-sm-12'>\r\n                                <FormControl placeholder={\r\n                                    event && event.video_link\r\n                                }\r\n                                    className='input_event'\r\n                                    margin=\"dense\"\r\n                                    id=\"video\"\r\n                                    type=\"textarea\"\r\n                                    fullWidth\r\n                                    name=\"video_link\"\r\n                                    value={video_link}\r\n                                    onChange={onlinkchange} />\r\n                                <FormControl // placeholder={event && event.status}\r\n                                    className='input_event'\r\n                                    hidden='true'\r\n                                    id=\"status\"\r\n                                    name=\"status\"\r\n                                    value={\r\n                                        status.toString()\r\n                                    }\r\n                                    type=\"textarea\"\r\n                                    fullWidth\r\n                                    onChange={onstatuschange} />\r\n                                disable event\r\n                                <Switch checked={\r\n                                    state.checkedA\r\n                                }\r\n                                    onChange={handleswitch}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={\r\n                                        { 'aria-label': 'secondary checkbox' }\r\n                                    } />\r\n                                enable event\r\n                            </div>\r\n                        </div>\r\n                        <div className='row pt-3'>\r\n                            <div className='col-sm-8'></div>\r\n                            <div className='col-sm-4'>\r\n                                <Button type='submit'\r\n                                    style={\r\n                                        {\r\n                                            backgroundColor: \"#f2f3f3\",\r\n                                            color: 'black',\r\n                                            borderRadius: '0'\r\n                                        }\r\n                                    }\r\n                                    onClick={handleClose}>\r\n                                    update Event\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                </form>\r\n            </Dialog>\r\n\r\n\r\n            {/*****************Navlink***************** */}\r\n            <Row>\r\n                <Col md={3}\r\n                    className='px-0'></Col>\r\n                <Col md={4}\r\n                    className=\"pb-4 pt-5 px-0 mr-5\">\r\n                    <ul className=\"nav nav-pills nav-justified\" id='navprofil'>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={`/dashboard/events`}\r\n                                className=\"link_cart\">\r\n                                <span className=\"n\">General Event</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={`/dashboard/Gallery`}\r\n                                className=\"link_cart\">\r\n                                <span className=\"n\">Gallery</span>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </Col>\r\n            </Row>\r\n            <Row className='pt-5'>\r\n                <Col md={1}\r\n                    sm={1}></Col>\r\n                <Col md={11}\r\n                    sm={11}>\r\n                    {/*********************NEXT PREVIEW EVENT************************* */}\r\n                    <Row className='pb-5'>\r\n                        <Col md={9}\r\n                            sm={9}></Col>\r\n                        <Col md={3}\r\n                            sm={3}\r\n                            className=' Top__section'>\r\n                            {\r\n                                event && event.previous_event !== null ? <button onClick={decrement}\r\n                                    style={\r\n                                        { backgroundColor: '#f7f8fa' }\r\n                                    }>\r\n                                    <NavigateBeforeIcon />Previous</button> : <button onClick={decrement} disabled='true'\r\n                                        style={\r\n                                            { backgroundColor: '#f7f8fa' }\r\n                                        }>\r\n                                        <NavigateBeforeIcon />Previous</button>\r\n                            }...{event && event.next_event !== null ? <button\r\n                                onClick={increment}\r\n                                style={\r\n                                    { backgroundColor: '#f7f8fa' }\r\n                                }>Next\r\n                                        <NavigateNextIcon /></button> : <button\r\n                                    onClick={increment}\r\n                                    disabled='true'\r\n                                    style={\r\n                                        { backgroundColor: '#f7f8fa' }\r\n                                    }>Next\r\n                                        <NavigateNextIcon /></button>}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Card className='pt-2'\r\n                            style={\r\n                                {\r\n                                    backgroundColor: '#f7f8fa',\r\n                                    border: '0px'\r\n                                }\r\n                            }>\r\n\r\n                            <Row>\r\n                                <Col xs={4} sm={4} md={4} xl={4}>\r\n\r\n                                    <img src={\r\n                                        event && event.cover\r\n                                    }\r\n                                        width=\"100%\"\r\n                                        height=\"320\"\r\n                                        alt='event'\r\n                                        style={\r\n                                            { borderRadius: '4px' }\r\n                                        } />\r\n                                </Col>\r\n                                <Col xs={1} sm={1} md={1}></Col>\r\n                                <Col md={7} sm={7}>\r\n                                    <Row>\r\n                                        <Col md={8}>\r\n                                            <h4>\r\n                                                <b>\r\n                                                    {event && event.name.charAt(0).toUpperCase() + event.name.slice(1)}\r\n                                                </b>\r\n                                            </h4>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                        <div className='col-sm-2' >\r\n                                                                   <Dropdown>\r\n                                                                    <Dropdown.Toggle>\r\n                                                                    <svg width=\"26px\" height=\"7px\" version=\"1.1\" xmlns=\"http://www.w3.org/1999/xlink\" >\r\n                                                                    <g id=\"Group\" transform=\"translate(0.5 0.5)\">\r\n                                                                        <path d=\"M2.5 5C3.88071 5 5 3.88071 5 2.5C5 1.11929 3.88071 0 2.5 0C1.11929 0 0 1.11929 0 2.5C0 3.88071 1.11929 5 2.5 5Z\" id=\"Oval\" fill=\"#D8D8D8\" fill-rule=\"evenodd\" stroke=\"none\" />\r\n                                                                        <path d=\"M2.5 5C3.88071 5 5 3.88071 5 2.5C5 1.11929 3.88071 0 2.5 0C1.11929 0 0 1.11929 0 2.5C0 3.88071 1.11929 5 2.5 5Z\" transform=\"translate(20 0)\" id=\"Oval-Copy\" fill=\"#D8D8D8\" fill-rule=\"evenodd\" stroke=\"none\" />\r\n                                                                        <path d=\"M2.5 5C3.88071 5 5 3.88071 5 2.5C5 1.11929 3.88071 0 2.5 0C1.11929 0 0 1.11929 0 2.5C0 3.88071 1.11929 5 2.5 5Z\" transform=\"translate(10 0)\" id=\"Oval-Copy-2\" fill=\"#D8D8D8\" fill-rule=\"evenodd\" stroke=\"none\" />\r\n                                                                    </g>\r\n                                                                </svg>\r\n                                                                    </Dropdown.Toggle>\r\n\r\n                                                                    <Dropdown.Menu>\r\n                                                                        <Dropdown.Item>\r\n                                                                               <IoShareSocialOutline />\r\n                                                                              Share\r\n                                                                          </Dropdown.Item>\r\n                                                                        <Dropdown.Item onClick={handleClickOpen}>\r\n                                                                                <AddBoxIcon />\r\n                                                                                    Invite Friends</Dropdown.Item>\r\n                                                                                    {\r\n                                                                                event && user && user.user_id === event.user.data.user_id ?  <Dropdown.Item onClick={handleClickOpen2}>  <UpdateRoundedIcon /> Update \r\n                                                                                  </Dropdown.Item>: <div></div>}\r\n                                                                                  {\r\n                                                                                event && user && user.user_id === event.user.data.user_id ?  <Link to='/dashboard/events'> <Dropdown.Item  onClick={\r\n                                                                                        e => deleteEvent(match.params.id)}>\r\n                                                                                           \r\n                                                                                    <DeleteOutlineRoundedIcon style={\r\n                                                                                        { color: '#212529' }} />\r\n                                                                                        Delete\r\n                                                                          </Dropdown.Item> </Link>: <div></div> }\r\n                                                                          {event && user && user.user_id === event.user.data.user_id ?  <Dropdown.Item><FeaturedDialog /></Dropdown.Item>: <div></div>}\r\n                                                                    </Dropdown.Menu>\r\n                                                                    </Dropdown>\r\n\r\n\r\n                                   \r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <div className='row'>\r\n                                        <div className='col-sm-10'>\r\n                                            <div className='row'>\r\n                                                <div className='col-sm-10'>\r\n                                                    <p>{event && event.location.charAt(0).toUpperCase() + event.location.slice(1)}, {event && <Moment date={event.date} format='dddd, MMMM Do YYYY' ></Moment>}</p>\r\n                                                </div> \r\n                                            </div>\r\n                                            <div className='row'>\r\n                                                <div className='col-sm-6 pb-4 pt-3'>\r\n                                                    <span>\r\n                                                        {event && event.description}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='row pb-3'>\r\n                                                <div className='col-sm-5 pb-4'>\r\n                                                    <Button onClick={handleClickOpen5}>\r\n                                                        Participants {event && event.participants.length}\r\n                                                    </Button> \r\n                                                    <AvatarGroup max={4} className='pt-2'>\r\n                                                    {event?.participants?.map(participants => (<Avatar alt={participants?.data?.attributes?.name} src={participants?.data?.attributes?.profile_image} />))}\r\n                                                    </AvatarGroup> \r\n                                                    <Dialog fullWidth  align='center'\r\n                                                                        open={open5}\r\n                                                                        onClose={handleClose5}\r\n                                                                        aria-labelledby=\"alert-dialog-title\"\r\n                                                                        aria-describedby=\"alert-dialog-description\"\r\n                                                                    >\r\n                                                                        <DialogTitle id=\"alert-dialog-title\">{\"Participants \"}</DialogTitle>\r\n                                                                        <DialogContent>\r\n                                                                            <Row className='pb-4 pt-3'>\r\n                                                                                <Col sm={2}  >{event?.participants?.map(participants =>(<Avatar alt={participants?.data?.attributes?.name} src={participants?.data?.attributes?.profile_image} />))}\r\n                                                                            </Col>\r\n                                                                            <Col sm={4}>{event?.participants?.map(participants =>(<div className='pt-2'>{participants?.data?.attributes?.name}</div> ))}</Col>\r\n                                                                            </Row>\r\n                                                                        </DialogContent>\r\n                                                                    </Dialog>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/************************************************ */}\r\n                                    </div>\r\n                                    <div className=\"bot__section\">\r\n                                        <div className='row '>\r\n                                            {event && event.is_subscribed === false ? <div className='col-sm-4' id='attend'>\r\n                                                    <button onClick={subscribEevent(event.id, 1)}\r\n                                                        className='btn btn-outline-dark'\r\n                                                        disabled={disable}>Attend\r\n                                                    </button>\r\n                                                </div> : <div className='col-sm-4' id='attend'>\r\n                                                        <button disabled={true}\r\n                                                            className='btn btn-outline-dark'>Already subscribed</button>\r\n                                                    </div>\r\n                                            }\r\n                                            <Dialog className='invite_form'\r\n                                                open={open}\r\n                                                TransitionComponent={Transition}\r\n                                                keepMounted\r\n                                                onClose={handleClose}\r\n                                                aria-labelledby=\"alert-dialog-slide-title\"\r\n                                                aria-describedby=\"alert-dialog-slide-description\">\r\n                                                <form onSubmit={\r\n                                                    e => onsubmit(e)}>\r\n                                                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                                                        {\"invite\"}</DialogTitle>\r\n                                                    <DialogContent>\r\n                                                        <div className='row'>\r\n                                                            <FormControl className='input_name' placeholder='Name' margin='dense' type='text'\r\n                                                                value={uid} /></div>\r\n                                                        <div className='row pt-2'>\r\n                                                            <div className='col-md-7 ' id='user_data'>\r\n                                                                {friends && friends.map((c, index) => (\r\n                                                                        <div className='col-md-6'>\r\n                                                                            <form onSubmit={\r\n                                                                                e => onsubmit(e)}>\r\n                                                                                <div className='col-md-12 pb-2 mt-1 friends border'>\r\n                                                                                    <div><Avatar className='mt-1'\r\n                                                                                        src={\r\n                                                                                            c.data.attributes.profile_image\r\n                                                                                        } /></div>\r\n                                                                                    <div className='col-md-1'></div>\r\n                                                                                    <div className='col-md-6 pt-2'>\r\n                                                                                        {\r\n                                                                                            c.data.attributes.name\r\n                                                                                        }</div>\r\n                                                                                    <div className='col-md-2'>\r\n                                                                                        <AddBoxIcon onClick={\r\n                                                                                            e => invite(c.data.user_id, event.id)\r\n                                                                                        } /></div>\r\n\r\n                                                                                </div>\r\n                                                                            </form>\r\n                                                                            <div className='col-md-1'></div>\r\n                                                                        </div>\r\n                                                                    ))\r\n                                                                } </div>\r\n\r\n                                                        </div>\r\n                                                        <div></div>\r\n                                                    </DialogContent>\r\n                                                    <DialogActions></DialogActions>\r\n                                                </form>\r\n                                            </Dialog>\r\n                                            <div className='col-sm-4 '>\r\n                                                <button className='btn btn-outline-dark' id='cancel'>Cancel</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                        <div className='mt-4 mb-2'></div>\r\n                        <Row>\r\n                            <Col xs={2}></Col>\r\n                            <Col xs={8} sm={8}>\r\n                                {event && event.video_link !== null ? <ReactPlayer\r\n                                    playing={true} url={event.video_link} /> : <div></div>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <div className='pt-3 '>\r\n                            <hr />\r\n                            <h6>\r\n                                <b>Similar Events</b>\r\n                            </h6>\r\n                            <Row> {/*events && events.map((event) =>\r\n                                (\r\n                                    <Single key={event.id} event={event} />)\r\n                                )*/}\r\n\r\n                                {/*<Carousel activeIndex={index} onSelect={handleSelect} >\r\n                                    {events && events.slice(0, 3).map((event) =>\r\n                                    (\r\n                                        <Carousel.Item key={event.id} interval={4000}>\r\n                                            <img\r\n                                                className=\"d-block w-100\"\r\n                                                src={event.cover}\r\n                                                alt=\"First slide\"\r\n                                                width=\"500\" height=\"500\"\r\n                                                style={{ borderRadius: '10px' }}\r\n                                            />\r\n                                            <Carousel.Caption>\r\n                                                <h3>{event.name}</h3>\r\n                                                <p>{event.description}</p>\r\n                                                <p>{event.date}</p>\r\n                                            </Carousel.Caption>\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n                                </Carousel>*/}\r\n                                <div>\r\n                                    <OwlCarousel className=\"slider-items owl-carousel pt-4\" autoplay='true' autoplaySpeed='2000'>\r\n                                        {\r\n                                            events && events.map((event) => (\r\n                                                <div class=\"item\"\r\n                                                    key={\r\n                                                        event.id\r\n                                                    }>\r\n                                                    <Col>\r\n                                                        <img src={\r\n                                                            event.cover\r\n                                                        }\r\n                                                            width='180px'\r\n                                                            height='250'\r\n                                                            style={\r\n                                                                { borderRadius: '5px' }\r\n                                                            } /></Col>\r\n                                                </div>\r\n                                            ))\r\n                                        } </OwlCarousel>\r\n                                </div>\r\n                            </Row>\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}; Eventitem.propTypes = {\r\n    events: PropTypes.object.isRequired,\r\n    getevent: PropTypes.func.isRequired,\r\n    deleteEvent: PropTypes.func.isRequired,\r\n    subscribEevent: PropTypes.func.isRequired,\r\n    getfriends: PropTypes.func.isRequired,\r\n    invite: PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    update: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    getevents: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({ events: state.events, auth: state.auth, categories: state.categories })\r\nexport default connect(mapStateToProps, {\r\n    update,\r\n    getevent,\r\n    deleteEvent,\r\n    subscribEevent,\r\n    getfriends,\r\n    invite,\r\n    getevents\r\n})(Eventitem)\r\n","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\market.js",["434","435","436"],"import { Pause } from '@material-ui/icons';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport { GET_MARKETS, GET_MY_PRODUCTS, GET_PRODUCT, ADD_PRODUCT, DELETE_PRODUCT, UPDATE_PRODUCT, GATEGORIES_MARKET, SEARCH_PRODUCT} from '../Actions/types';\r\nconst initialState = {\r\n   markets:null,\r\n   myproducts:null,\r\n   categories:null,\r\n   product: null,\r\n   cart: null,\r\n   loading: true\r\n}\r\nexport default function (state = initialState, action){\r\n    const { type, payload } = action;\r\n    switch (type){\r\n        case GET_MARKETS:\r\n            return{\r\n                ...state,\r\n                markets:payload,\r\n                loading:false\r\n            }\r\n        case GET_MY_PRODUCTS:\r\n            return{\r\n                ...state,\r\n                markets :payload,\r\n                loading:false\r\n            }\r\n        case ADD_PRODUCT:\r\n            return{\r\n                ...state,\r\n                markets :[payload,...state.markets],\r\n                loading:false\r\n            }\r\n        case SEARCH_PRODUCT:\r\n            return{\r\n                ...state,\r\n                markets: payload,\r\n                loading:false\r\n            }\r\n        case GET_PRODUCT:\r\n            return{\r\n                ...state,\r\n                product:payload,\r\n                loading:false\r\n            }\r\n        case DELETE_PRODUCT:\r\n            return{\r\n                ...state,\r\n                markest: state.markets.filter(product => product.id !== payload),\r\n            }\r\n        case UPDATE_PRODUCT:\r\n            return{\r\n                ...state,\r\n                product: payload,\r\n                loading:false\r\n            }\r\n        case GATEGORIES_MARKET:\r\n            return {\r\n                ...state,\r\n                categories:payload\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n}\r\n    \r\n","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\Board.js",["437"],"import { DELETE_THREAD, GET_THREAD, ADD_THREAD, UPDATE_THREAD, GET_ONETHREAD, SEARCH_THREAD, GETMT_THREADS } from '../Actions/types';\r\nconst initialState = {\r\n    thread: [],\r\n    threads: null,\r\n    loading:true,\r\n    isAuthenticated: false,\r\n    error :{}\r\n};\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case GET_THREAD:\r\n            return {\r\n                ...state,\r\n                thread:payload,\r\n                loading:false\r\n            }\r\n        case ADD_THREAD:\r\n            return {\r\n                ...state,\r\n                thread:[payload,...state.thread],\r\n                loading:false\r\n            }\r\n        case DELETE_THREAD:\r\n            return {\r\n                ...state,\r\n                thread:state.thread.filter(thread => thread.data.id !==payload)\r\n            }\r\n        case UPDATE_THREAD: {\r\n            return{\r\n                ...state,\r\n                thread:payload,\r\n                loading:false,\r\n            }\r\n        }\r\n        case GET_ONETHREAD: {\r\n            return{\r\n                ...state,\r\n                threads:payload\r\n            }\r\n        }\r\n        case SEARCH_THREAD: {\r\n            return{\r\n                ...state,\r\n                thread: payload,\r\n                loading:false\r\n            }\r\n        }\r\n        case GETMT_THREADS: {\r\n            return{\r\n                ...state,\r\n                thread: payload,\r\n                loading:false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\Events.js",["438","439","440","441"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './Events.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { addEvent, getevents, sortEvents, myevents, search } from '../../../Actions/events';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Single from './single'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col,Image } from 'react-bootstrap';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\n\r\nconst Events = ({ addEvent, getevents, events: { events, categories,loading }, sortEvents, myevents, search }) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n    useEffect(() => {\r\n        getevents()\r\n    }, [getevents])\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n\r\n    const handleOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const [name, setname] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [category_id, setcategoryid] = useState(1)\r\n    const [location, setlocation1] = useState('')\r\n    const [date, setdate] = useState('')\r\n    const [video_link, setvideolink] = useState('')\r\n    const [cover, setcover] = useState('')\r\n    const [status,setStatus]=useState(1)\r\n    const onnamechange = e => {\r\n        setname(e.target.value)\r\n    }\r\n    const ondescchange = e => {\r\n        setdescription(e.target.value)\r\n    }\r\n    const oncategorychange = e => {\r\n        setcategoryid(e.target.value)\r\n    }\r\n    const onlocationchange = e => {\r\n        setlocation1(e.target.value)\r\n    }\r\n\r\n    const ondatechange = e => {\r\n        setdate(e.target.value)\r\n    }\r\n    const oncoverchange = e => {\r\n        setcover(e.target.files[0])\r\n    }\r\n    const onlinkchange = e => {\r\n        setvideolink(e.target.value)\r\n    }\r\n    const onstatuschange =e=>{\r\n        setStatus(e.target.value)\r\n    }\r\n    const [state, setState] = React.useState({\r\n        checkedA: true\r\n\r\n    });   \r\n    const submit = e => {\r\n        e.preventDefault();\r\n        console.log(description)\r\n        const file = new FormData();\r\n        file.append('name', name);\r\n        file.append('description', description);\r\n        file.append('category_id', category_id);\r\n        file.append('location', location);\r\n        file.append('date', date);\r\n        file.append('cover', cover);\r\n        file.append('video_link', video_link);\r\n        file.append('status', status);\r\n        addEvent(file)\r\n        e.target.reset();\r\n    }\r\n    /****************************************** */\r\n    const [loc, setlocation] = useState({\r\n        location1: 'location',\r\n        asc: 'asc'\r\n    })\r\n    const { location1, asc } = loc;\r\n    const onchange1 = e => setlocation({ ...loc, [e.target.name]: e.target.value });\r\n    const submit1 = e => {\r\n        e.preventDefault();\r\n        console.log(location1 + '*****' + asc)\r\n        sortEvents(loc);\r\n    }\r\n    const [filter, setFilter] = React.useState('name');\r\n    const [value, setValue] = React.useState('');\r\n    const handleChange = (event) => {\r\n        setFilter(event.target.value);\r\n\r\n    };\r\n    const handleChange1 = e => {\r\n        setValue(e.target.value)\r\n    }\r\n    const handleswitch = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        if (event.target.checked === true) {\r\n           setStatus(1)\r\n        }\r\n        else {   setStatus(0) }\r\n        console.log(status)\r\n    };\r\n    const onsubmit1 = e => {\r\n        e.preventDefault();\r\n        console.log(filter)\r\n        // console.log(value)\r\n        search(filter, value)\r\n    }\r\n    return loading ===true ? <Spinner /> :\r\n        <div>\r\n            <title>Events | FishComb</title>\r\n              <Row className=' pb-3 '>\r\n\r\n                    <Col md={1} className='px-0' ></Col>\r\n                    <Col md={4} className=\"pb-4 pt-5 px-0 \">\r\n                        <ul className=\"nav nav-pills nav-justified \" id='navprofil'>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={`/dashboard/events`} className=\"link_cart\"><span className='n' >All Events</span></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={`/dashboard/invited`} className=\"link_cart\"><span  className='n'>Invited Events</span></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={`/dashboard/attendedevent`} className=\"link_cart\"><span  className='n'>Attending</span></Link>\r\n                            </li>\r\n                        </ul>\r\n                    </Col>\r\n                    <Col md={5}></Col>\r\n                </Row>\r\n                    <div  className='row pt-3 ' id='body'>\r\n                        <div className='col-md-9'>\r\n                            <div className='row pt-2 pb-2 px-2 '>\r\n                                <div  className='col-md-12'>\r\n                                    <h6><b>Featured</b></h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row pt-3 pb-4 '>\r\n                                <div className='col-md-3 col-sm-3'>\r\n                                    <Image src='https://picsum.photos/id/1/200/300' width=\"80%\" height=\"180\" alt='event' rounded className='product'/>\r\n                                </div>\r\n                                <div className='col-md-3 col-sm-3'>\r\n                                    <Image src='https://picsum.photos/id/800/200/300' width=\"80%\" height=\"180\" alt='event' rounded className='product'/>\r\n                                </div>\r\n                                <div className='col-md-3 col-sm-3'>\r\n                                    <Image  src='https://picsum.photos/id/500/200/300' width=\"80%\" height=\"180\" alt='event' rounded className='product'/>\r\n                                </div>\r\n                                <div className='col-md-3 col-sm-3'>\r\n                                    <Image  src='https://picsum.photos/id/120/200/300' width=\"80%\" height=\"180\" alt='event' rounded className='product'/>\r\n                                </div>\r\n                            </div>\r\n                            <div className='row px-2'>\r\n                                <div className='col-md-12'  >\r\n                                    <h6><b>All Events</b></h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className=' row pt-3 pb-2 px-3'>\r\n                                \r\n                                    {events && events.map((event) =>\r\n                                        (\r\n                                            <Single key={event.id} event={event} />)\r\n                                        )}\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <Col md={3} className='pt-5 mt-2   miniside'>\r\n                        <form onSubmit={e => onsubmit1(e)}  >\r\n\r\n                            <Col md={12} sm={12} xl={12} className=\"search_event px-0\" >\r\n                                <input type=\"text\" placeholder='Search Event' aria-label=\"Search\"  value={value} onChange={handleChange1} />\r\n                                <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n                                    <DropdownToggle caret style={{ color: 'black' }}>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu onChange={handleChange}>\r\n                                        <DropdownItem onClick={e => setFilter('username')}>By user</DropdownItem>\r\n                                        <DropdownItem onClick={e => setFilter('name')}>By event title</DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                                {/*<RadioGroup  className=\"radio_input col-md-5\" aria-label=\"gender\" name=\"gender1\" value={filter} onChange={handleChange}>\r\n                                               <FormControlLabel value=\"username\" control={<Radio />} label=\"By user\" />\r\n                                             </RadioGroup>*/}\r\n                                <button className=\"col-2 px-2  header__button\" >\r\n                                    <svg width=\"19px\" height=\"19px\" version=\"1.1\" xmlns=\"http://www.w3.org/1999/xlink\">\r\n                                        <g id=\"fishcomb-product-icons-14\">\r\n                                            <path d=\"M12.2518 1.61932e-15C12.3328 0.0283492 12.4155 0.051191 12.4995 0.0683699C15.6293 0.480702 18.1632 2.82089 18.8306 5.91537C19.498 9.00985 18.1549 12.1912 15.4749 13.8641C12.7948 15.5369 9.35588 15.3404 6.88257 13.3732C6.81668 13.3207 6.74396 13.2752 6.63263 13.1977L0.840723 19L0 18.1978L5.82371 12.3658C5.74646 12.2656 5.68965 12.1858 5.6283 12.106C4.09022 10.1285 3.64051 7.51038 4.43017 5.13067C5.21984 2.75096 7.14415 0.925279 9.55698 0.266643C9.95007 0.157251 10.3545 0.0866019 10.7522 0L12.2518 1.61932e-15ZM11.4884 13.7948C14.0295 13.8077 16.3277 12.2829 17.3102 9.93242C18.2926 7.58189 17.7654 4.86919 15.9748 3.06078C14.1841 1.25238 11.4832 0.704965 9.13291 1.67411C6.78265 2.64325 5.24665 4.93781 5.24202 7.48651C5.24318 10.9531 8.03216 13.7697 11.4884 13.7948L11.4884 13.7948Z\" id=\"Shape\" fill=\"#CDCDCD\" stroke=\"none\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </button>\r\n                                    {/* <input type=\"checkbox\" value=\"username\" onChange={handleChange} /> by user*/}\r\n\r\n                            </Col>\r\n                        </form>\r\n                        \r\n                        <ul className=\"nav nav-pills nav-justified  mt-3\" id='navprofil'>\r\n                            <li className=\"nav-item\">\r\n                                <form onSubmit={e => submit1(e)}>\r\n                                    \r\n                                        <Col sm={1} md={1} xl={1} className='px-0' >\r\n                                            <Col sm={1} md={1} xl={1} className='filtre px-0 pt-2'>\r\n                                                <div className='col-xs-2 mr-2 filterevent'>\r\n                                                    <select value={location1}\r\n                                                        name=\"location1\"\r\n                                                        onChange={e => onchange1(e)} >\r\n                                                        <option value='location'>\r\n                                                            Location\r\n                                                         </option>\r\n                                                        <option value='category'>\r\n                                                            Categories\r\n                                                       </option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className='col-xs-2 mr-2'> <select value={asc}\r\n                                                    name=\"asc\"\r\n                                                    onChange={e => onchange1(e)} >\r\n                                                    <option value='asc'>&#8593;</option>\r\n                                                    <option value='desc'>&#8595;</option>\r\n                                                </select></div>\r\n                                                <div className='col-xs-3'><button type='submit' id='button_sort'> <SortIcon /> Sort Event</button></div>\r\n                                            </Col>\r\n                                        </Col>\r\n                                    \r\n                                </form>\r\n                            </li>\r\n                        </ul>\r\n                        <div className='row pt-2 ml-1 mr-1'>\r\n                            <div className='col-sm-12 px-0 eventbtn'>\r\n                            <Button className=\"eventbtn\" onClick={myevents}><h6>My Events</h6></Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row pt-2 mx-1'>\r\n                            <div className='col-sm-12 px-0 eventbtn'>\r\n                                <Button className=\"eventbtn\" onClick={handleClickOpen}><h6>Add Events</h6></Button>\r\n                            </div>\r\n                        </div>\r\n                        </Col>\r\n                        <Row>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" className='dialogForm'   >\r\n                            <form className='add__event' onSubmit={e => submit(e)}>\r\n                                <DialogTitle id=\"form-dialog-title\">Add Event</DialogTitle>\r\n                                <DialogContent>\r\n                                    <Row className=\" pt-1\">\r\n                                        <Col  sm={12} md={12} xl={12} className=' col-md-12'>\r\n                                            <FormControl\r\n                                                className='input_event'\r\n                                                placeholder=\"Title\"\r\n                                                margin=\"dense\"\r\n                                                id=\"Title\"\r\n                                                label=\"Title\"\r\n                                                type=\"text\"\r\n                                                name=\"name\" value={name} onChange={onnamechange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <div className=\"row pt-3\">\r\n                                        <div className='col-5'>\r\n                                            <FormControl\r\n                                                className='input_event'\r\n                                                margin=\"dense\"\r\n                                                id=\"Date\"\r\n                                                type=\"Date\"\r\n                                                name=\"date\" value={date} onChange={ondatechange}/>\r\n                                        </div>\r\n                                        <div className='col-7 '>\r\n                                            <select\r\n                                            className='col-md-12'\r\n                                               // placeholder='Category Event'\r\n                                                value={category_id}\r\n                                                name=\"category_id\"\r\n                                                defaultValue='1'\r\n                                                onChange={oncategorychange}>\r\n                                                {categories && categories.map(c =>\r\n                                                    (<option key={c.id} value={c.id}>{c.name} </option>)\r\n                                                )}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Row className=\" pt-3\">\r\n                                        <Col sm={12} md={12} xl={12} >\r\n                                            <Select\r\n                                                className=\"form-control reg__input\" name=\"location\" value={location} onChange={onlocationchange}>\r\n                                                <option value=\"default\">Location</option>\r\n                                                <option value=\"Afganistan\" className='reg__input'>Afghanistan</option>\r\n                                                <option value=\"Albania\">Albania</option>\r\n                                                <option value=\"Algeria\">Algeria</option>\r\n                                                <option value=\"American Samoa\">American Samoa</option>\r\n                                                <option value=\"Andorra\">Andorra</option>\r\n                                                <option value=\"Angola\">Angola</option>\r\n                                                <option value=\"Anguilla\">Anguilla</option>\r\n                                                <option value=\"Antigua & Barbuda\">Antigua & Barbuda</option>\r\n                                                <option value=\"Argentina\">Argentina</option>\r\n                                                <option value=\"Armenia\">Armenia</option>\r\n                                                <option value=\"Aruba\">Aruba</option>\r\n                                                <option value=\"Australia\">Australia</option>\r\n                                                <option value=\"Austria\">Austria</option>\r\n                                                <option value=\"Azerbaijan\">Azerbaijan</option>\r\n                                                <option value=\"Bahamas\">Bahamas</option>\r\n                                                <option value=\"Bahrain\">Bahrain</option>\r\n                                                <option value=\"Bangladesh\">Bangladesh</option>\r\n                                                <option value=\"Barbados\">Barbados</option>\r\n                                                <option value=\"Belarus\">Belarus</option>\r\n                                                <option value=\"Belgium\">Belgium</option>\r\n                                                <option value=\"Belize\">Belize</option>\r\n                                                <option value=\"Benin\">Benin</option>\r\n                                                <option value=\"Bermuda\">Bermuda</option>\r\n                                                <option value=\"Bhutan\">Bhutan</option>\r\n                                                <option value=\"Bolivia\">Bolivia</option>\r\n                                                <option value=\"Bonaire\">Bonaire</option>\r\n                                                <option value=\"Bosnia & Herzegovina\">Bosnia & Herzegovina</option>\r\n                                                <option value=\"Botswana\">Botswana</option>\r\n                                                <option value=\"Brazil\">Brazil</option>\r\n                                                <option value=\"British Indian Ocean Ter\">British Indian Ocean Ter</option>\r\n                                                <option value=\"Brunei\">Brunei</option>\r\n                                                <option value=\"Bulgaria\">Bulgaria</option>\r\n                                                <option value=\"Burkina Faso\">Burkina Faso</option>\r\n                                                <option value=\"Burundi\">Burundi</option>\r\n                                                <option value=\"Cambodia\">Cambodia</option>\r\n                                                <option value=\"Cameroon\">Cameroon</option>\r\n                                                <option value=\"Canada\">Canada</option>\r\n                                                <option value=\"Canary Islands\">Canary Islands</option>\r\n                                                <option value=\"Cape Verde\">Cape Verde</option>\r\n                                                <option value=\"Cayman Islands\">Cayman Islands</option>\r\n                                                <option value=\"Central African Republic\">Central African Republic</option>\r\n                                                <option value=\"Chad\">Chad</option>\r\n                                                <option value=\"Channel Islands\">Channel Islands</option>\r\n                                                <option value=\"Chile\">Chile</option>\r\n                                                <option value=\"China\">China</option>\r\n                                                <option value=\"Christmas Island\">Christmas Island</option>\r\n                                                <option value=\"Cocos Island\">Cocos Island</option>\r\n                                                <option value=\"Colombia\">Colombia</option>\r\n                                                <option value=\"Comoros\">Comoros</option>\r\n                                                <option value=\"Congo\">Congo</option>\r\n                                                <option value=\"Cook Islands\">Cook Islands</option>\r\n                                                <option value=\"Costa Rica\">Costa Rica</option>\r\n                                                <option value=\"Cote DIvoire\">Cote DIvoire</option>\r\n                                                <option value=\"Croatia\">Croatia</option>\r\n                                                <option value=\"Cuba\">Cuba</option>\r\n                                                <option value=\"Curaco\">Curacao</option>\r\n                                                <option value=\"Cyprus\">Cyprus</option>\r\n                                                <option value=\"Czech Republic\">Czech Republic</option>\r\n                                                <option value=\"Denmark\">Denmark</option>\r\n                                                <option value=\"Djibouti\">Djibouti</option>\r\n                                                <option value=\"Dominica\">Dominica</option>\r\n                                                <option value=\"Dominican Republic\">Dominican Republic</option>\r\n                                                <option value=\"East Timor\">East Timor</option>\r\n                                                <option value=\"Ecuador\">Ecuador</option>\r\n                                                <option value=\"Egypt\">Egypt</option>\r\n                                                <option value=\"El Salvador\">El Salvador</option>\r\n                                                <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n                                                <option value=\"Eritrea\">Eritrea</option>\r\n                                                <option value=\"Estonia\">Estonia</option>\r\n                                                <option value=\"Ethiopia\">Ethiopia</option>\r\n                                                <option value=\"Falkland Islands\">Falkland Islands</option>\r\n                                                <option value=\"Faroe Islands\">Faroe Islands</option>\r\n                                                <option value=\"Fiji\">Fiji</option>\r\n                                                <option value=\"Finland\">Finland</option>\r\n                                                <option value=\"France\">France</option>\r\n                                                <option value=\"French Guiana\">French Guiana</option>\r\n                                                <option value=\"French Polynesia\">French Polynesia</option>\r\n                                                <option value=\"French Southern Ter\">French Southern Ter</option>\r\n                                                <option value=\"Gabon\">Gabon</option>\r\n                                                <option value=\"Gambia\">Gambia</option>\r\n                                                <option value=\"Georgia\">Georgia</option>\r\n                                                <option value=\"Germany\">Germany</option>\r\n                                                <option value=\"Ghana\">Ghana</option>\r\n                                                <option value=\"Gibraltar\">Gibraltar</option>\r\n                                                <option value=\"Great Britain\">Great Britain</option>\r\n                                                <option value=\"Greece\">Greece</option>\r\n                                                <option value=\"Greenland\">Greenland</option>\r\n                                                <option value=\"Grenada\">Grenada</option>\r\n                                                <option value=\"Guadeloupe\">Guadeloupe</option>\r\n                                                <option value=\"Guam\">Guam</option>\r\n                                                <option value=\"Guatemala\">Guatemala</option>\r\n                                                <option value=\"Guinea\">Guinea</option>\r\n                                                <option value=\"Guyana\">Guyana</option>\r\n                                                <option value=\"Haiti\">Haiti</option>\r\n                                                <option value=\"Hawaii\">Hawaii</option>\r\n                                                <option value=\"Honduras\">Honduras</option>\r\n                                                <option value=\"Hong Kong\">Hong Kong</option>\r\n                                                <option value=\"Hungary\">Hungary</option>\r\n                                                <option value=\"Iceland\">Iceland</option>\r\n                                                <option value=\"Indonesia\">Indonesia</option>\r\n                                                <option value=\"India\">India</option>\r\n                                                <option value=\"Iran\">Iran</option>\r\n                                                <option value=\"Iraq\">Iraq</option>\r\n                                                <option value=\"Ireland\">Ireland</option>\r\n                                                <option value=\"Isle of Man\">Isle of Man</option>\r\n                                                <option value=\"Israel\">Israel</option>\r\n                                                <option value=\"Italy\">Italy</option>\r\n                                                <option value=\"Jamaica\">Jamaica</option>\r\n                                                <option value=\"Japan\">Japan</option>\r\n                                                <option value=\"Jordan\">Jordan</option>\r\n                                                <option value=\"Kazakhstan\">Kazakhstan</option>\r\n                                                <option value=\"Kenya\">Kenya</option>\r\n                                                <option value=\"Kiribati\">Kiribati</option>\r\n                                                <option value=\"Korea North\">Korea North</option>\r\n                                                <option value=\"Korea Sout\">Korea South</option>\r\n                                                <option value=\"Kuwait\">Kuwait</option>\r\n                                                <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n                                                <option value=\"Laos\">Laos</option>\r\n                                                <option value=\"Latvia\">Latvia</option>\r\n                                                <option value=\"Lebanon\">Lebanon</option>\r\n                                                <option value=\"Lesotho\">Lesotho</option>\r\n                                                <option value=\"Liberia\">Liberia</option>\r\n                                                <option value=\"Libya\">Libya</option>\r\n                                                <option value=\"Liechtenstein\">Liechtenstein</option>\r\n                                                <option value=\"Lithuania\">Lithuania</option>\r\n                                                <option value=\"Luxembourg\">Luxembourg</option>\r\n                                                <option value=\"Macau\">Macau</option>\r\n                                                <option value=\"Macedonia\">Macedonia</option>\r\n                                                <option value=\"Madagascar\">Madagascar</option>\r\n                                                <option value=\"Malaysia\">Malaysia</option>\r\n                                                <option value=\"Malawi\">Malawi</option>\r\n                                                <option value=\"Maldives\">Maldives</option>\r\n                                                <option value=\"Mali\">Mali</option>\r\n                                                <option value=\"Malta\">Malta</option>\r\n                                                <option value=\"Marshall Islands\">Marshall Islands</option>\r\n                                                <option value=\"Martinique\">Martinique</option>\r\n                                                <option value=\"Mauritania\">Mauritania</option>\r\n                                                <option value=\"Mauritius\">Mauritius</option>\r\n                                                <option value=\"Mayotte\">Mayotte</option>\r\n                                                <option value=\"Mexico\">Mexico</option>\r\n                                                <option value=\"Midway Islands\">Midway Islands</option>\r\n                                                <option value=\"Moldova\">Moldova</option>\r\n                                                <option value=\"Monaco\">Monaco</option>\r\n                                                <option value=\"Mongolia\">Mongolia</option>\r\n                                                <option value=\"Montserrat\">Montserrat</option>\r\n                                                <option value=\"Morocco\">Morocco</option>\r\n                                                <option value=\"Mozambique\">Mozambique</option>\r\n                                                <option value=\"Myanmar\">Myanmar</option>\r\n                                                <option value=\"Nambia\">Nambia</option>\r\n                                                <option value=\"Nauru\">Nauru</option>\r\n                                                <option value=\"Nepal\">Nepal</option>\r\n                                                <option value=\"Netherland Antilles\">Netherland Antilles</option>\r\n                                                <option value=\"Netherlands\">Netherlands (Holland, Europe)</option>\r\n                                                <option value=\"Nevis\">Nevis</option>\r\n                                                <option value=\"New Caledonia\">New Caledonia</option>\r\n                                                <option value=\"New Zealand\">New Zealand</option>\r\n                                                <option value=\"Nicaragua\">Nicaragua</option>\r\n                                                <option value=\"Niger\">Niger</option>\r\n                                                <option value=\"Nigeria\">Nigeria</option>\r\n                                                <option value=\"Niue\">Niue</option>\r\n                                                <option value=\"Norfolk Island\">Norfolk Island</option>\r\n                                                <option value=\"Norway\">Norway</option>\r\n                                                <option value=\"Oman\">Oman</option>\r\n                                                <option value=\"Pakistan\">Pakistan</option>\r\n                                                <option value=\"Palau Island\">Palau Island</option>\r\n                                                <option value=\"Palestine\">Palestine</option>\r\n                                                <option value=\"Panama\">Panama</option>\r\n                                                <option value=\"Papua New Guinea\">Papua New Guinea</option>\r\n                                                <option value=\"Paraguay\">Paraguay</option>\r\n                                                <option value=\"Peru\">Peru</option>\r\n                                                <option value=\"Phillipines\">Philippines</option>\r\n                                                <option value=\"Pitcairn Island\">Pitcairn Island</option>\r\n                                                <option value=\"Poland\">Poland</option>\r\n                                                <option value=\"Portugal\">Portugal</option>\r\n                                                <option value=\"Puerto Rico\">Puerto Rico</option>\r\n                                                <option value=\"Qatar\">Qatar</option>\r\n                                                <option value=\"Republic of Montenegro\">Republic of Montenegro</option>\r\n                                                <option value=\"Republic of Serbia\">Republic of Serbia</option>\r\n                                                <option value=\"Reunion\">Reunion</option>\r\n                                                <option value=\"Romania\">Romania</option>\r\n                                                <option value=\"Russia\">Russia</option>\r\n                                                <option value=\"Rwanda\">Rwanda</option>\r\n                                                <option value=\"St Barthelemy\">St Barthelemy</option>\r\n                                                <option value=\"St Eustatius\">St Eustatius</option>\r\n                                                <option value=\"St Helena\">St Helena</option>\r\n                                                <option value=\"St Kitts-Nevis\">St Kitts-Nevis</option>\r\n                                                <option value=\"St Lucia\">St Lucia</option>\r\n                                                <option value=\"St Maarten\">St Maarten</option>\r\n                                                <option value=\"St Pierre & Miquelon\">St Pierre & Miquelon</option>\r\n                                                <option value=\"St Vincent & Grenadines\">St Vincent & Grenadines</option>\r\n                                                <option value=\"Saipan\">Saipan</option>\r\n                                                <option value=\"Samoa\">Samoa</option>\r\n                                                <option value=\"Samoa American\">Samoa American</option>\r\n                                                <option value=\"San Marino\">San Marino</option>\r\n                                                <option value=\"Sao Tome & Principe\">Sao Tome & Principe</option>\r\n                                                <option value=\"Saudi Arabia\">Saudi Arabia</option>\r\n                                                <option value=\"Senegal\">Senegal</option>\r\n                                                <option value=\"Seychelles\">Seychelles</option>\r\n                                                <option value=\"Sierra Leone\">Sierra Leone</option>\r\n                                                <option value=\"Singapore\">Singapore</option>\r\n                                                <option value=\"Slovakia\">Slovakia</option>\r\n                                                <option value=\"Slovenia\">Slovenia</option>\r\n                                                <option value=\"Solomon Islands\">Solomon Islands</option>\r\n                                                <option value=\"Somalia\">Somalia</option>\r\n                                                <option value=\"South Africa\">South Africa</option>\r\n                                                <option value=\"Spain\">Spain</option>\r\n                                                <option value=\"Sri Lanka\">Sri Lanka</option>\r\n                                                <option value=\"Sudan\">Sudan</option>\r\n                                                <option value=\"Suriname\">Suriname</option>\r\n                                                <option value=\"Swaziland\">Swaziland</option>\r\n                                                <option value=\"Sweden\">Sweden</option>\r\n                                                <option value=\"Switzerland\">Switzerland</option>\r\n                                                <option value=\"Syria\">Syria</option>\r\n                                                <option value=\"Tahiti\">Tahiti</option>\r\n                                                <option value=\"Taiwan\">Taiwan</option>\r\n                                                <option value=\"Tajikistan\">Tajikistan</option>\r\n                                                <option value=\"Tanzania\">Tanzania</option>\r\n                                                <option value=\"Thailand\">Thailand</option>\r\n                                                <option value=\"Togo\">Togo</option>\r\n                                                <option value=\"Tokelau\">Tokelau</option>\r\n                                                <option value=\"Tonga\">Tonga</option>\r\n                                                <option value=\"Trinidad & Tobago\">Trinidad & Tobago</option>\r\n                                                <option value=\"Tunisia\">Tunisia</option>\r\n                                                <option value=\"Turkey\">Turkey</option>\r\n                                                <option value=\"Turkmenistan\">Turkmenistan</option>\r\n                                                <option value=\"Turks & Caicos Is\">Turks & Caicos Is</option>\r\n                                                <option value=\"Tuvalu\">Tuvalu</option>\r\n                                                <option value=\"Uganda\">Uganda</option>\r\n                                                <option value=\"United Kingdom\">United Kingdom</option>\r\n                                                <option value=\"Ukraine\">Ukraine</option>\r\n                                                <option value=\"United Arab Erimates\">United Arab Emirates</option>\r\n                                                <option value=\"United States of America\">United States of America</option>\r\n                                                <option value=\"Uraguay\">Uruguay</option>\r\n                                                <option value=\"Uzbekistan\">Uzbekistan</option>\r\n                                                <option value=\"Vanuatu\">Vanuatu</option>\r\n                                                <option value=\"Vatican City State\">Vatican City State</option>\r\n                                                <option value=\"Venezuela\">Venezuela</option>\r\n                                                <option value=\"Vietnam\">Vietnam</option>\r\n                                                <option value=\"Virgin Islands (Brit)\">Virgin Islands (Brit)</option>\r\n                                                <option value=\"Virgin Islands (USA)\">Virgin Islands (USA)</option>\r\n                                                <option value=\"Wake Island\">Wake Island</option>\r\n                                                <option value=\"Wallis & Futana Is\">Wallis & Futana Is</option>\r\n                                                <option value=\"Yemen\">Yemen</option>\r\n                                                <option value=\"Zaire\">Zaire</option>\r\n                                                <option value=\"Zambia\">Zambia</option>\r\n                                                <option value=\"Zimbabwe\">Zimbabwe</option>\r\n                                            </Select>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"pt-3\">\r\n                                        <Col  sm={12} md={12} xl={12} >\r\n                                            <FormControl\r\n                                                placeholder=\"Description\"\r\n                                                className='input_event'\r\n                                                margin=\"dense\"\r\n                                                id=\"Description\"\r\n                                                as=\"textarea\" aria-label=\"With textarea\"\r\n                                                type=\"textarea\"\r\n                                                name=\"description\" value={description} onChange={ondescchange}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=' pt-3'>\r\n                                        <Col  sm={12} md={12} xl={12} className=\"btn-group btn-group-toggle \">\r\n                                            <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={oncoverchange} />\r\n                                            { /*<Button variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                                <span  >Upload Video </span>\r\n\r\n                                                </Button>*/}\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <div className=\"row pt-3\">\r\n                                        <div className='col-sm-12'>\r\n                                            <FormControl\r\n                                                placeholder=\"Video Link\"\r\n                                                className='input_event'\r\n                                                margin=\"dense\"\r\n                                                id=\"video\"\r\n\r\n                                                type=\"textarea\"\r\n                                                fullWidth\r\n                                                name=\"video_link\" value={video_link} onChange={onlinkchange}            \r\n                                            />\r\n                                            <FormControl\r\n                                        // placeholder={event && event.status}\r\n                                        className='input_event'\r\n                                        hidden='true'\r\n                                        id=\"status\"\r\n                                        name=\"status\" value={status.toString()}\r\n                                        type=\"textarea\"\r\n                                        fullWidth\r\n                                        onChange={onstatuschange}\r\n                                    />\r\n                                    disable event\r\n                                    <Switch\r\n                                        checked={state.checkedA}\r\n\r\n                                        onChange={handleswitch}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    /> enable event</div></div>\r\n                                    <div className='row pt-2 px-0'>\r\n                                        <div className='col-md-9'></div>\r\n                                        <div className='col-md-3'>\r\n                                            <Button type='submit'\r\n                                                style={{ backgroundColor: \"#f2f3f3\", color: 'black', borderRadius: '0' }}\r\n                                                onClick={handleClose}>\r\n                                                Add Event\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </DialogContent>\r\n                                </form>\r\n                            </Dialog>\r\n                        </div>\r\n                        \r\n                         \r\n</div>\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\nEvents.prototype = {\r\n    addEvent: PropTypes.func.isRequired,\r\n    getevents: PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    sortEvents: PropTypes.func.isRequired,\r\n    myevents: PropTypes.func.isRequired,\r\n    search: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    addEvent: state.addEvent,\r\n    events: state.events,\r\n    categories: state.categories,\r\n})\r\nexport default connect(mapStateToProps, { addEvent, getevents, sortEvents, myevents, search })(Events);\r\n ","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Reducers\\Replies.js",["442"],"import { ADD_REPLY, DELETE_REPLY, GET_REPLIES, UPDATE_REPLY } from '../Actions/types';\r\nconst initialState = {\r\n    replies: [],\r\n    loading:true,\r\n    isAuthenticated: false,\r\n    error :{}\r\n};\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case GET_REPLIES:\r\n            return {\r\n                ...state,\r\n                replies:payload,\r\n                loading:false\r\n            }\r\n        case ADD_REPLY: \r\n        return{\r\n            ...state,\r\n            replies:payload,\r\n            loading:false\r\n        }\r\n        case DELETE_REPLY:\r\n            return{\r\n                ...state,\r\n                replies:state.replies.filter(replies => replies.id !==payload)\r\n            }\r\n        case UPDATE_REPLY :\r\n            return{\r\n            ...state,\r\n            replies:payload,\r\n            loading:false,\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\Steppers.js",["443"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkout from './Checkout'\r\nimport StripePay from './StripePay'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Checkout', 'Payment', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <Checkout/>;\r\n    case 1:\r\n      return <StripePay/>;\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\n const Steppers =()=>{\r\n\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const steps = getSteps();\r\n  \r\n    const isStepOptional = (step) => {\r\n      return step === 2;\r\n    };\r\n  \r\n    const isStepSkipped = (step) => {\r\n      return skipped.has(step);\r\n    };\r\n  \r\n    const handleNext = () => {\r\n      let newSkipped = skipped;\r\n      if (isStepSkipped(activeStep)) {\r\n        newSkipped = new Set(newSkipped.values());\r\n        newSkipped.delete(activeStep);\r\n      }\r\n  \r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      setSkipped(newSkipped);\r\n    };\r\n  \r\n    const handleBack = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n  \r\n    const handleSkip = () => {\r\n      if (!isStepOptional(activeStep)) {\r\n        // You probably want to guard against something like this,\r\n        // it should never occur unless someone's actively trying to break something.\r\n        throw new Error(\"You can't skip a step that isn't optional.\");\r\n      }\r\n  \r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      setSkipped((prevSkipped) => {\r\n        const newSkipped = new Set(prevSkipped.values());\r\n        newSkipped.add(activeStep);\r\n        return newSkipped;\r\n      });\r\n    };\r\n  \r\n    const handleReset = () => {\r\n      setActiveStep(0);\r\n    };\r\n  \r\n     return (\r\n       \r\n        <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div >\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div className='pb-5'>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n              className='pb-5'\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n               >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n     )\r\n }\r\n export default Steppers;","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\CartProduct.js",["444","445","446","447","448","449"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteProd, updateQuantity } from '../../../../Actions/cart';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport { connect } from 'react-redux';\r\nimport { Fragment } from 'react';\r\nimport { GrAddCircle } from 'react-icons/gr';\r\nimport { Button } from '@material-ui/core';\r\nconst CartProduct = (  {cart  , deleteProd, loading,updateQuantity} ) => {\r\n/**********************************/\r\nconst [formdata, setFormData] = useState({\r\n    quantity: cart.quantity,\r\n});\r\nconst {\r\n    quantity,\r\n  } = formdata;\r\n  useEffect(() => {\r\n    setFormData({\r\n    })\r\n  }, [loading])\r\nconst onchange = e => setFormData({ ...formdata, [e.target.name]: e.target.value })\r\n\r\nconst onSubmit = e => {\r\n    e.preventDefault();\r\n    updateQuantity(formdata,cart.cart_id);\r\n}\r\nconst [total,setTotal]=useState(cart.amount)\r\nconst [total1,setTotal1]=useState(cart.product.price)\r\nconst handlechange=()=>{   \r\n    updateQuantity(formdata,cart.cart_id);\r\n}\r\nconst sum=()=> {\r\n    // setTotal1(cart.reduce((totalamount,cart)=>totalamount+cart.price,0))\r\n     console.log(total1)\r\n}\r\n/**********************************/\r\nreturn (\r\n    <Fragment>\r\n        <Form onSubmit={e => onSubmit(e)} >\r\n            <Row className='pt-3 pb-3'>\r\n                <Col xs={12}>\r\n                    <Row className=''>\r\n                        <Col xs={1} className='border-right'>\r\n                            <img src={cart && \"http://77.68.24.35/storage/\"+cart.product.image.slice(6)} width='70px' height='55px' style={{borderRadius:'4px'}}/>\r\n                        </Col>\r\n                        <Col xs={3}className='border-right'>\r\n                            <Row>\r\n                                <Col >\r\n                                 <h5> { cart && cart.product.name.charAt(0).toUpperCase() + cart.product.name.slice(1) }</h5>\r\n                                </Col>\r\n                            </Row>\r\n                           <Row>\r\n                               <Col>\r\n                                <h6>{cart && cart.product.description}</h6>\r\n                               </Col>\r\n                           </Row>\r\n                        </Col> \r\n                        <Col xs={1} className='border-right'>{cart && cart.product.price} £</Col> \r\n                        <Col xs={2}className='border-right ml-2'>\r\n                                <input className='col-6' value={quantity} type='number'    \r\n                         min=\"1\" max=\"100\"  name=\"quantity\"  onChange={e => onchange(e)} onClick={handlechange} defaultValue={quantity} />\r\n                            </Col>\r\n                        <Col xs={2}className='border-right'>{cart.amount} £</Col>\r\n                        <Col xs={1} >\r\n                            <Button onClick={e=>deleteProd(cart && cart.cart_id)}>\r\n                                <DeleteOutlineRoundedIcon   />\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </Col>    \r\n            </Row>\r\n            <hr/>\r\n        </Form>\r\n    </Fragment>\r\n)\r\n}\r\nCartProduct.propTypes = {\r\n    cart:PropTypes.object.isRequired,\r\n    deleteProd:PropTypes.func.isRequired,\r\n    updateQuantity:PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    carts: state.cart\r\n})\r\nexport default connect(mapStateToProps,{deleteProd, updateQuantity})(CartProduct)","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\cart.js",["450","451","452","453","454","455"],"import axios from 'axios';\r\nimport { GET_CART, ADD_CART, DELETE_PROD_CART, UPDATE_QUANTITY, ERROR_UPDATE_QUANTITY, CART_ERROR, MY_ORDERS, ORDER_FAILS, PAYMENT_SUCCESS, PAYMENT_ERROR} from './types';\r\nimport {  CHECKOUT,CHECKOUT_FAILED} from './types';\r\nimport Cookies from 'js-cookie';\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n\r\n//Show your cart \r\nexport const showCart = () => async dispatch =>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res =await axios.get('/api/cart',config)\r\n        dispatch ({\r\n            type: GET_CART,\r\n            payload: res.data\r\n        })\r\n       \r\n    }catch {\r\n        dispatch({\r\n            type: CART_ERROR,\r\n        })\r\n        toast.error('cart error')\r\n    }\r\n}\r\n//Add Cart\r\nexport const addCart = (product_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post('/api/cart',{product_id}, config)\r\n        dispatch ({\r\n            type: ADD_CART,\r\n            payload: res.data.data\r\n        })\r\n        toast.info('Product Add to you Basket')\r\n    }catch{\r\n\r\n    }\r\n}\r\n// Delete Product in cart \r\nexport const deleteProd = (cart_id) =>  async dispatch =>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {   \r\n        await axios.delete(`/api/cart/${cart_id}`,config)\r\n        const res =await axios.get('/api/cart',config)\r\n        dispatch ({\r\n            type: GET_CART,\r\n            payload: res.data\r\n        })\r\n        toast.success('Product Deleted')\r\n    }catch{\r\n\r\n    }\r\n}\r\n// Update Cart \r\nexport const updateQuantity  = (formData , cart_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.patch(`/api/cart/${cart_id}`,formData,config)\r\n        dispatch ({\r\n            type : UPDATE_QUANTITY,\r\n            payload: res.data\r\n        })\r\n    \r\n    }catch {\r\n        dispatch({\r\n            type: ERROR_UPDATE_QUANTITY,\r\n        })\r\n        toast.error('Update error')\r\n    }\r\n}\r\n//checkout\r\n//api/order\r\nexport const checkout = (formdata) =>  async dispatch =>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {   \r\n        const res = await axios.post(`/api/order`,formdata,config)\r\n        console.log(res.data.data)\r\n        dispatch ({\r\n            type: CHECKOUT,\r\n            payload: res.data.data\r\n        })\r\n        toast.info('Checkout success')\r\n    }catch{\r\n        toast.error('Checkout error')\r\n        dispatch({\r\n            type: CHECKOUT_FAILED,\r\n        });\r\n    }\r\n}\r\nexport const stripelog =(token,address)=>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {   \r\n        const res = await axios.post(`/api/getStripeResponse`,{token,address},config)\r\n      /*  dispatch ({\r\n            type: CHECKOUT,\r\n            payload: res.data\r\n        })*/\r\n       // toast.info('Checkout success')\r\n    }catch{\r\n       // toast.error('Checkout error')\r\n        dispatch({\r\n            type: CHECKOUT_FAILED,\r\n        });\r\n    } \r\n}\r\n//myOrders\r\nexport const myOrders =()=>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.get(`/api/order/my_orders`,config)\r\n        dispatch({\r\n            type:MY_ORDERS,\r\n            payload:res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_FAILS\r\n        })\r\n    }\r\n}\r\n//Order_Payment\r\nexport const Order_Payment =(order_id)=>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/order/payment`,{order_id},config)\r\n       /* dispatch({\r\n            type:PAYMENT_SUCCESS,\r\n           // payload:res.data\r\n        })*/\r\n        toast.success('payment success')\r\n    } catch (error) {\r\n        /*dispatch({\r\n            type:PAYMENT_ERROR\r\n        })*/\r\n        toast.error('Error')\r\n    } \r\n}\r\n///api/order/cancel_payment\r\nexport const CancelPayment =(order_id)=>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/order/cancel_payment`,{order_id},config)\r\n       /* dispatch({\r\n            type:PAYMENT_SUCCESS,\r\n           // payload:res.data\r\n        })*/\r\n        toast.info('payment canceled')\r\n    } catch (error) {\r\n        /*dispatch({\r\n            type:PAYMENT_ERROR\r\n        })*/\r\n        toast.error('Error')\r\n    }\r\n}","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Search\\Search.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\content\\ContentUser.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\profile.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Post.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Spinner\\Spinner.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\newsfeed\\Post\\Post.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\newsfeed\\publications\\Publication.js",["456","457"],"import React, { useState } from \"react\";\r\nimport {  useEffect } from 'react';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./Publication.css\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactPlayer from 'react-player';\r\nimport Moment from \"react-moment\";\r\nimport {\r\n  getPosts,\r\n  addLike,\r\n  addComment,\r\n} from \"../../../../Actions/Post\";\r\nimport { deletePost , getPost, updatePost } from \"../../../../Actions/Post\";\r\nimport { getUsers } from '../../../../Actions/profile';\r\nimport SingleComm from \"./SingleComm\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {  NavLink } from \"react-router-dom\";\r\nimport ReactEmoji from 'react-emoji'\r\n/*********************************/\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n/********************************/\r\nconst Publication = ({\r\n  auth: { user },\r\n  posts,\r\n  deletePost,\r\n  addLike,\r\n  addComment,\r\n  getPost,\r\n  getUsers,\r\n  getPosts, updatePost ,loading,\r\n  Post:{ post }\r\n}) => {\r\n  /******************************************/\r\n\r\n  const [hidden, setHidden] = useState(true);\r\n  const [body, setText] = useState(\"\");\r\n  const onclick = () => {\r\n    setHidden(hidden === false ? true : false);\r\n  }\r\n  const addcomment = async (id, body) => {\r\n    addComment(id, body);\r\n  };\r\n  /*************************************/\r\n\r\n  const getpost = async (post_id) =>{\r\n    getPost(post_id)\r\n  }\r\n  /******************************/\r\n  const [formdata, setFormData] = useState({\r\n    // link: '',\r\n     description: '',\r\n   });\r\n   const {\r\n  //  link,\r\n    description\r\n   } = formdata;\r\n   const onchange = e => setFormData({ ...formdata, [e.target.name]: e.target.value });\r\n   const onSubmit = e => {\r\n     e.preventDefault();\r\n     console.log('aaaaa');\r\n     updatePost(formdata ,post.data.id);\r\n   }\r\n   \r\n   useEffect(() => {\r\n     setFormData({\r\n         description: loading || !!post?.description ? '' : post?.description,\r\n     })// eslint-disable-next-line\r\n   }, [loading])\r\n  /******************************/\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n  const [open1, setOpen1] = React.useState(false);\r\n  const handleClickOpen1 = () => {\r\n      setOpen1(true);\r\n  };\r\n  const handleClose1 = () => {\r\n      setOpen1(false);\r\n  };\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n  /*****************************/\r\n  return (\r\n    <div className=\"row pb-5\">\r\n      <div className=\"card\">\r\n        <div className=\"form-pu\">\r\n          <form id=\"lo\">\r\n            <div className=\"row\" id=\"pub-top1\">\r\n              <div className=\"col-lg-1\">\r\n                <NavLink to={`/dashboard/profileuser/${posts.data.user.data.user_id}`} >\r\n                <Avatar\r\n                  src={posts && posts.data.user.data.attributes.profile_image}\r\n                  onClick={(e) => getUsers(posts.data.user.data.user_id)}\r\n                /></NavLink>\r\n              </div>\r\n              <div className=\"col-lg-9\">\r\n                <span className=\"nameuser\">\r\n                {posts &&posts.data.user.data.attributes.first_name.charAt(0).toUpperCase() +posts.data.user.data.attributes.first_name.slice(1)} {posts && posts.data.user.data.attributes.last_name.charAt(0).toUpperCase() + posts.data.user.data.attributes.last_name.slice(1)}\r\n                </span>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-8 datepost\">\r\n                    <Moment\r\n                      date={posts && posts.data.created_at}\r\n                      toNow/> ago\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-1\" id=\"pnt\">\r\n                <div className={classes.root}>\r\n                {user && user.user_id === posts.data.user.data.user_id ? <div>\r\n                   <Button\r\n                      ref={anchorRef}\r\n                      aria-controls={open ? 'menu-list-grow' : undefined}\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleToggle}>\r\n                      <svg width=\"26px\" height=\"7px\" version=\"1.1\" xmlns=\"http://www.w3.org/1999/xlink\" >\r\n                        <g id=\"Group\" transform=\"translate(0.5 0.5)\">\r\n                          <path d=\"M2.5 5C3.88071 5 5 3.88071 5 2.5C5 1.11929 3.88071 0 2.5 0C1.11929 0 0 1.11929 0 2.5C0 3.88071 1.11929 5 2.5 5Z\" id=\"Oval\" fill=\"#D8D8D8\" fill-rule=\"evenodd\" stroke=\"none\" />\r\n                          <path d=\"M2.5 5C3.88071 5 5 3.88071 5 2.5C5 1.11929 3.88071 0 2.5 0C1.11929 0 0 1.11929 0 2.5C0 3.88071 1.11929 5 2.5 5Z\" transform=\"translate(20 0)\" id=\"Oval-Copy\" fill=\"#D8D8D8\" fill-rule=\"evenodd\" stroke=\"none\" />\r\n                          <path d=\"M2.5 5C3.88071 5 5 3.88071 5 2.5C5 1.11929 3.88071 0 2.5 0C1.11929 0 0 1.11929 0 2.5C0 3.88071 1.11929 5 2.5 5Z\" transform=\"translate(10 0)\" id=\"Oval-Copy-2\" fill=\"#D8D8D8\" fill-rule=\"evenodd\" stroke=\"none\" />\r\n                        </g>\r\n                      </svg>\r\n                    </Button>\r\n                    <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                      {({ TransitionProps, placement }) => (\r\n                        <Grow\r\n                          {...TransitionProps}\r\n                          style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' ,borderRadius:'0'}}>\r\n                          <Paper>\r\n                            <ClickAwayListener onClickAway={handleClose}>\r\n                              <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                             {/* <MenuItem onClick={handleClickOpen1}  > <span onClick={(e) => getpost(posts.data.id)}>Update My Post</span></MenuItem> */} \r\n                              <MenuItem onClick={(e) => deletePost(posts.data.id)}>Delete My Post</MenuItem>\r\n                              </MenuList>\r\n                            </ClickAwayListener>\r\n                          </Paper>\r\n                        </Grow>\r\n                      )}\r\n                    </Popper>\r\n                  </div>  \r\n                  : (<div></div>)}  </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"row pt-2\" id=\"pub-top11\">\r\n              <div className=\"col-lg-1\"></div>\r\n              <div className=\"row pt-5\">\r\n                <div className=\"col-lg-1\"></div>\r\n                <div className=\"col-lg-10\">{posts && ReactEmoji.emojify(posts.data.description)}</div>\r\n              </div>\r\n              <div className=\"row pt-3\"></div>\r\n              <div className=\"col-sm-1\"></div>\r\n              <div className=\"col-sm-10\">\r\n                {posts && posts.data.link && (\r\n                  <ReactPlayer\r\n                    width='auto'\r\n                    url={posts.data.link}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"col-1\"></div>\r\n            </div>\r\n          </form>\r\n               <Dialog open={open1} onClose={handleClose1} aria-labelledby=\"form-dialog-title\"   className='UpdatePost' >\r\n                                <DialogTitle id=\"form-dialog-title\">Update Post</DialogTitle>\r\n                                <DialogContent>\r\n                                <div className=\"pub px-0 \">\r\n                                        <div className=\" \">   \r\n                                        <Avatar src={user && user.attributes.profile_image} />\r\n                                        <div className='pub__top'>\r\n                                        <form  onSubmit={(e) => onSubmit(e)} >\r\n                                            <input id=\"description\" placeholder={post && post.description}  autoComplete=\"description\" className='pub__input' name=\"description\" value={description} onChange={e => onchange(e)}  />\r\n                                            <input type=\"text\" id=\"linkurl\" />\r\n                                            <button  type=\"submit1\" onClick={handleClose1} >submit</button>\r\n                                        </form>\r\n                                        </div>  \r\n                                </div>\r\n                                </div>\r\n                                </DialogContent>                \r\n                </Dialog>\r\n          <div className=\"row\"></div>\r\n          <div className=\"row pt-2 pb-4\">\r\n            <div className=\"col-lg-2\">\r\n              <div className=\"row\" id=\"lcp\">\r\n                <div className='col-lg-1'></div>\r\n                <div className=\"col-lg-6\">\r\n                  <Button className=\"But__Like\" onClick={(e) => addLike(posts.data.id)}>\r\n                    <svg\r\n                      width=\"25px\"\r\n                      height=\"21px\"\r\n                      version=\"1.1\"\r\n                      xmlns=\"http://www.w3.org/1999/xlink\"\r\n                      id=\"like\">\r\n                      <g id=\"like\">\r\n                        <g id=\"like\">\r\n                          <path\r\n                            d=\"M14.6825 0L15.0357 0.09375C15.6746 0.255 16.2262 0.52125 16.4365 1.17C16.7857 2.22375 17.2778 3.25875 17.4325 4.335C17.5556 5.175 17.2619 6.06375 17.1468 6.93C17.1151 7.18875 17.0595 7.44375 17.004 7.755C17.1944 7.755 17.3571 7.755 17.5159 7.755C19.1706 7.755 20.8254 7.755 22.4802 7.755C23.2738 7.755 24.004 7.905 24.4167 8.62875C24.8684 9.38962 24.7982 10.3315 24.2381 11.025C24.0862 11.2037 24.0482 11.4461 24.1389 11.6588C24.3803 12.3357 24.2397 13.0822 23.7659 13.6388C23.6071 13.8142 23.5657 14.059 23.6587 14.2725C23.8744 14.9724 23.7273 15.7274 23.2619 16.3088C23.1672 16.4326 23.1209 16.5837 23.131 16.7363C23.5278 18.6113 22.5516 19.8675 20.5198 19.9838C19.75 20.025 18.9762 19.9838 18.2024 19.9838C15.8214 19.9838 13.4405 19.9838 11.0595 19.9838C10.3629 20.0241 9.67001 19.8604 9.0754 19.515C8.91794 19.4391 8.75317 19.3776 8.58333 19.3313C8.58333 19.4625 8.55159 19.545 8.54365 19.6275C8.55353 19.9117 8.43503 20.1865 8.21773 20.3833C8.00043 20.5801 7.70485 20.6802 7.40476 20.6588C5.32143 20.6775 3.23016 20.6775 1.14683 20.6588C0.396825 20.6588 0 20.25 0 19.5188C0 16.5363 0 13.5575 0 10.5825C0 9.72 0.416667 9.31125 1.3254 9.3075C3.57937 9.3075 5.8373 9.3075 8.09524 9.3075C8.14117 9.29978 8.18819 9.29978 8.23413 9.3075C8.96429 9.6 9.32143 9.135 9.63095 8.66625C10.5476 7.26375 11.4365 5.87625 12.3016 4.47375C12.3866 4.32016 12.4277 4.14822 12.4206 3.975C12.4206 3.27375 12.3889 2.5725 12.369 1.87125C12.3373 0.8325 12.7262 0.34875 13.8016 0.09375C13.9008 0.0675 14 0.03375 14.1032 1.33227e-15L14.6825 0ZM15.7381 8.76375C15.9048 7.8675 16.0635 7.02375 16.2143 6.17625C16.381 5.2425 16.6111 4.30125 16.2143 3.37125C15.9881 2.83125 15.7937 2.27625 15.5556 1.74C15.4414 1.43298 15.1948 1.18619 14.8769 1.06103C14.5591 0.935878 14.1999 0.944135 13.8889 1.08375C13.5616 1.15646 13.3499 1.4565 13.4048 1.77C13.461 2.4837 13.4755 3.19978 13.4484 3.915C13.455 4.2949 13.368 4.67103 13.1944 5.01375C12.504 6.1875 11.75 7.32375 11.0317 8.47875C10.4539 9.46974 9.5914 10.2861 8.54365 10.8338C8.30415 10.9429 8.16519 11.1844 8.19841 11.4338C8.19841 13.5638 8.19841 15.6937 8.19841 17.8275C8.19841 17.955 8.19841 18.0863 8.19841 18.1237C8.65873 18.3113 9.05952 18.4725 9.46429 18.63C9.7945 18.8123 10.1557 18.9392 10.5317 19.005C13.8056 19.0313 17.0833 19.005 20.3611 19.005C20.8972 19.0235 21.4109 18.8009 21.746 18.405C21.9591 18.1897 22.0702 17.9018 22.0537 17.6074C22.0372 17.3131 21.8946 17.0378 21.6587 16.845C21.5397 16.77 21.4365 16.6762 21.3254 16.5938C21.4484 16.5225 21.5675 16.4438 21.6944 16.3837C22.2198 16.1749 22.5801 15.7089 22.631 15.1725C22.6921 14.6807 22.349 14.2252 21.8373 14.1188C21.8056 14.1188 21.7897 14.0512 21.7222 13.9462C22.3294 13.7325 22.881 13.4362 23.0595 12.8212C23.2619 12.1275 22.8968 11.6962 22.1667 11.4188C22.303 11.3097 22.4554 11.22 22.619 11.1525C23.3186 10.8831 23.7202 10.1851 23.5794 9.48375C23.4841 8.96625 23.0873 8.76375 22.2222 8.76375L15.7381 8.76375ZM1.05556 10.3125L1.05556 19.6388L7.24603 19.6388L7.24603 10.3088L1.05556 10.3125Z\"\r\n                            transform=\"translate(0 0.23625)\"\r\n                            id=\"like\"\r\n                          />\r\n                        </g>\r\n                      </g>\r\n                    </svg>\r\n                  </Button>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                { <div className=\"col-lg-6 datepost\"><h6>{ posts.data?.likes?.length>0 && posts.data.likes.length}</h6> </div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-2\">\r\n              <div className=\"row\" id=\"lcp\">\r\n                <div className=\"col-lg-6\">\r\n                  <Button className=\"ButCom\" onClick={onclick}>\r\n                    <svg\r\n                      width=\"23px\"\r\n                      height=\"21px\"\r\n                      version=\"1.1\"\r\n                      xmlns=\"http://www.w3.org/1999/xlink\"\r\n                    >\r\n                      <g id=\"63-631368_community-transition-black-chat-icon-png-transparent-png-04\">\r\n                        <path\r\n                          d=\"M5.60959 21C5.72062 20.206 5.79675 19.5096 5.9268 18.8262C6.041 18.2274 5.90143 17.8857 5.31775 17.5831C3.22097 16.4995 1.57462 14.9179 0.635669 12.6693C-0.864755 9.0897 0.343832 5.1131 3.70313 2.52602C8.14731 -0.903881 15.1038 -0.835543 19.4972 2.6985C24.2142 6.47009 24.1635 12.8711 19.3672 16.5353C16.6423 18.5984 13.5399 19.3143 10.187 19.0475C9.81394 19.0213 9.44032 19.0895 9.09895 19.246C7.9538 19.7829 6.83721 20.3785 5.60959 21ZM6.83721 19.1093C7.63976 18.7091 8.30908 18.3218 9.01647 18.0354C9.43538 17.8592 9.88711 17.7803 10.3393 17.8044C13.1181 18.0354 15.716 17.479 18.0571 15.9267C22.5139 12.9589 23.0564 7.57976 19.2688 4.11081C15.2878 0.456366 8.2964 0.296911 4.15675 3.75936C0.216946 7.0591 0.245495 12.1974 4.26777 15.3898C5.12425 16.0699 6.11713 16.5613 7.07829 17.1601L6.83721 19.1093Z\"\r\n                          id=\"Shape\"\r\n                          fill=\"#000000\"\r\n                          stroke=\"none\"\r\n                        />\r\n                      </g>\r\n                    </svg>\r\n                  </Button>\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-lg-2 datepost\"><h6>{posts.data.comments.length}</h6> </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='row pt-2' hidden={hidden}>\r\n            <div ><hr /></div>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                addcomment(posts.data.id, { body });\r\n                setText(\"\");\r\n              }}\r\n\r\n            >\r\n              <div className=\"row pt-1\" >\r\n                <div className='col-lg-1'></div>\r\n                <div className=\"col-lg-1\">\r\n                <NavLink to={`/dashboard/profile/about`} >\r\n                  <Avatar\r\n                    src={user && user.attributes.profile_image}\r\n                  />\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"col-lg-9 pp\" >\r\n                  <input\r\n                    className=\" col-lg-11 comm\"\r\n                    type=\"text\"\r\n                    value={body}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                  />\r\n                  <button type=\"submit\" className=\"b\">\r\n                    add\r\n                </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <div className=\"row pt-1\">\r\n              <div className='col-lg-1'></div>\r\n              <div className='col-lg-11'>\r\n                {posts && posts.data.comments.map(comments => \r\n                  (\r\n                    <SingleComm key={comments.id} comments={comments} />\r\n                  )\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nPublication.prototype = {\r\n  auth: PropTypes.object.isRequired,\r\n  Post: PropTypes.object.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  getPost: PropTypes.func.isRequired,\r\n  addComment: PropTypes.func.isRequired,\r\n  getPosts: PropTypes.func.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  getUsers : PropTypes.func.isRequired,\r\n  updatePost: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  Post: state.Post,\r\n});\r\nexport default connect(mapStateToProps, { deletePost, getPost, addComment, getPosts, addLike, getUsers,updatePost })(\r\n  Publication\r\n);\r\n","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\single.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\StripePay.js",["458"],"import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport {stripelog,Order_Payment} from '../../../../Actions/cart'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nconst StripePay =({stripelog,cart :{order}})=>{\r\n\r\n\r\n    const handleToken =(token,address)=>{\r\n        console.log(order.id)\r\n        Order_Payment(order.id)\r\n        stripelog(token,address)\r\n       \r\n    }\r\n    return (\r\n        <Row>  <Col sm={3} md={3}></Col> <Col sm={3} md={3}><StripeCheckout\r\n       token={Order_Payment(order.id)}\r\n        stripeKey={\"pk_test_51IEjdFKKRkm2jfjKQ46eifger6zWp30iM4SzIGNVKSxaHUOKrfVOytseDJpKHIz43fTtvUwcq98BD7XoyPpG6ss400dIHQtQX9\"}\r\n        description={order && order.description}\r\n        name={\"Total amount: \"+order.sub_total}\r\n        email={order && order.email}\r\n       amount={order && order.sub_total}\r\n       billingAddress\r\n       shippingAddress\r\n       currency=\"USD\"\r\n      /></Col></Row>\r\n         \r\n    )\r\n}\r\nStripePay.propTypes={\r\n stripelog:PropTypes.func.isRequired,\r\n cart:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps =state =>({\r\n    cart:state.cart\r\n})\r\nexport default connect(mapStateToProps,{stripelog}) (StripePay);","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\Cart\\Checkout.js",["459"],"import React from 'react'\r\nimport {Fragment} from 'react'\r\nimport {checkout} from '../../../../Actions/cart'\r\nimport PropTypes from 'prop-types';\r\nimport {useState} from 'react';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport {Button, Col, Row,Card} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Checkout = ({checkout}) => {\r\n    const [formData, setFormData] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        shipping_address: \"\",\r\n        phone: \"\",\r\n        post_code: \"\",\r\n        email: \"\",\r\n        description: \"\"\r\n    })\r\n    const {\r\n        first_name,\r\n        last_name,\r\n        shipping_address,\r\n        phone,\r\n        post_code,\r\n        email,\r\n        description\r\n    } = formData;\r\n    const onchange = e => setFormData({  \r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n    const [disable,setdisable]=useState(false)\r\n    const submit =e=>{\r\n        e.preventDefault()\r\n    \r\n      console.log(formData)\r\n      checkout(formData)\r\n      setdisable(true)\r\n    }\r\n   \r\n    return (\r\n        <Fragment>\r\n           \r\n            <Row className='pb-5'>\r\n            \r\n                <form onSubmit={e=>submit(e)} >\r\n                    <Row>\r\n                    <Col xs={2}></Col>\r\n                    <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"first_name\" margin=\"dense\" label=\"first_name\" name=\"first_name\"\r\n                            value={first_name}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            type=\"text\"\r\n                            disabled={disable}\r\n                            /></Col>\r\n                           <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"last_name\" margin=\"dense\" label=\"last_name\" name=\"last_name\"\r\n                            value={last_name}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col xs={2}></Col>\r\n                    <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"shipping_address\" margin=\"dense\" label=\"shipping_address\" name=\"shipping_address\"\r\n                            value={shipping_address}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                               <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"phone\" margin=\"dense\" label=\"phone\" name=\"phone\"\r\n                            value={phone}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                    </Row>\r\n                         <Row>\r\n                         <Col xs={2}></Col>\r\n                         <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"post_code\" margin=\"dense\" label=\"post_code\" name=\"post_code\"\r\n                            value={post_code}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                               <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"email\" margin=\"dense\" label=\"email\" name=\"email\"\r\n                            value={email}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                         </Row>\r\n                          <Row>\r\n                          <Col xs={2}></Col>\r\n                          <Col sm={8}\r\n                        md={8}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"description\" margin=\"dense\" label=\"description\" name=\"description\"\r\n                            value={description}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                          </Row>\r\n                         <Row>\r\n                         <Col xs={2}></Col>\r\n                         <Col sm={3} md={3}><Button type='submit'  variant=\"outline-secondary\" disabled={disable}>Confirm</Button></Col>\r\n                         </Row>  \r\n                </form>\r\n            \r\n                </Row>   \r\n        </Fragment>\r\n    )\r\n\r\n};\r\nCheckout.prototype = {\r\n    checkout: PropTypes.func.isRequired\r\n}\r\nexport default connect(null,{checkout}) (Checkout);\r\n","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\newsfeed\\publications\\SingleComm.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\FeaturedDialog.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\board\\SingleThread.js",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476"],"import React from 'react';\r\nimport { Fragment, useState, useEffect } from 'react';\r\nimport { Col, Row, Card, Image } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './Board.css';\r\nimport { Button } from '@material-ui/core';\r\nimport { deleteTreadh, upadateThread } from '../../../Actions/Board';\r\nimport { addReplies ,getReplies } from '../../../Actions/Replies';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Switch from '@material-ui/core/Switch';\r\nconst SingleThread = ({ auth: {user}, threads, deleteTreadh, upadateThread, addReplies, match ,getReplies , loading,reply}) => {\r\n    /***********************************/\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n    /***********************************/\r\n    const [title, settitle] = useState('')\r\n    const [body, setbody] = useState('')\r\n    const [image, setimage] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const ontitlechange = e => {\r\n        settitle(e.target.value)\r\n    }\r\n    const onbodychange = e => {\r\n        setbody(e.target.value)\r\n    }\r\n    const onstatuschange = e => {\r\n        setStatus(e.target.value)\r\n    }\r\n    const onimagechange = e => {\r\n        setimage(e.target.value)\r\n    }\r\n    /***************************************/\r\n    const [state, setState] = React.useState({checkedA: true});\r\n    const handleswitch = (threads) => {\r\n        setState({\r\n            ...state,\r\n            [threads.target.name]: threads.target.checked\r\n        });\r\n        if (threads.target.checked === true) {\r\n            setStatus(1)\r\n        } else {\r\n            setStatus(0)\r\n        }\r\n        console.log(status)\r\n    };\r\n    /*********************************/\r\n    useEffect(() => {\r\n        settitle(loading || !!threads && !threads.data.title ? '' :  threads.data.title)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setbody(loading || !!threads && !threads.data.body ? '' : threads.data.body)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setStatus(loading || !!threads && !threads.data.status ? 1 : threads.data.status)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setimage(loading || !!threads && !threads.data.image ? '' : threads.data.image )\r\n    }, [loading])\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        const file = new FormData();\r\n        file.append('title', title);\r\n        file.append('body', body);\r\n        file.append('image', image);\r\n        file.append('status', status);\r\n        upadateThread(file,threads.data.id)\r\n        e.target.reset();\r\n    }\r\n    /************************************/\r\n    /***********************************/\r\n    return (\r\n        \r\n        <Fragment>\r\n            <title>{threads && threads?.data?.title?.charAt(0).toUpperCase() + threads?.data?.title?.slice(1)} | FishComb</title>\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                    <NavLink to={`/dashboard/thread/${threads.data.id}`} className='threadLink'>\r\n                         <b className='title__thread'>{threads && threads.data.title.charAt(0).toUpperCase() + threads.data.title.slice(1)} </b>\r\n                    </NavLink>\r\n                  </div>\r\n            <div class=\"card-body\">\r\n                    <blockquote class=\"blockquote mb-0\">\r\n                    {threads && threads.data.body.charAt(0).toUpperCase() + threads.data.body.slice(1)}\r\n                        {reply && reply.body.charAt(0).toUpperCase() + reply.body.slice(1)} \r\n                    \r\n                        <footer class=\"blockquote-footer\">{user && threads && user.user_id ===   threads.data.user.data.user_id ?\r\n                    <Button className=\"float-right thread__btn\" onClick={handleClickOpen} ><UpdateIcon/>Edit</Button> : (<div></div>)}                                     \r\n                        {user && threads && user.user_id ===   threads.data.user.data.user_id ?\r\n                      <Button className=\"float-right thread__btn\" onClick={e => deleteTreadh(threads && threads.data.id)}><DeleteIcon />Delete</Button> : (<div></div>)}\r\n                                        <NavLink to={`/dashboard/thread/${threads.data.id}`}>\r\n                      <Button className='float-right thread__btn' onClick={e => getReplies(threads && threads.data.id)}>Replies</Button>\r\n                                         </NavLink>\r\n                </footer>\r\n                </blockquote>\r\n             </div>\r\n        </div>\r\n                            <Dialog open={open} onClose={handleClose} >\r\n                                    <form className='addQuestion' onSubmit={e => submit(e)}>\r\n                                        <DialogTitle id=\"form-dialog-title\">Update Question</DialogTitle>\r\n                                    <DialogContent>\r\n                                            <Row className=\" pt-2\">\r\n                                         <Col sm={12} md={12} xl={12}>\r\n                                            <Row>\r\n                                                <Col xs={2}>\r\n                                                    <Form.Label>Title</Form.Label>\r\n                                                </Col>\r\n                                                <Col xs={10}>\r\n                                                    <FormControl\r\n                                                    className='input_event'\r\n                                                    placeholder={threads && threads.data.title}\r\n                                                    margin=\"dense\"\r\n                                                    id=\"Title\"\r\n                                                    label=\"Title\"\r\n                                                    type=\"text\"\r\n                                                    name=\"title\" value={title} onChange={ontitlechange} />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className='pt-3'>\r\n                                        <Col xs={12}>\r\n                                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                <Row>\r\n                                                    <Col xs={2}>\r\n                                                        <Form.Label>Body</Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={10}>\r\n                                                        <Form.Control as=\"textarea\"\r\n                                                            rows={3}\r\n                                                            className='input_event'\r\n                                                            placeholder={threads && threads.data.body}\r\n                                                            name=\"body\" value={body} onChange={onbodychange} />\r\n                                                    </Col>\r\n                                                </Row>\r\n           \r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className='pt-1 pb-1'>\r\n                                        <Col xs={12}>\r\n                                        <FormControl // placeholder={event && event.status}\r\n                                        className='input_event'\r\n                                        hidden='true'\r\n                                        id=\"status\"\r\n                                        name=\"status\"\r\n                                        value={\r\n                                            status.toString()\r\n                                        }\r\n                                        type=\"textarea\"\r\n                                        fullWidth\r\n                                        onChange={onstatuschange}/>\r\n                                        Disable Post\r\n                                    <Switch checked={\r\n                                        state.checkedA\r\n                                    }\r\n                                    onChange={handleswitch}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={\r\n                                        {'aria-label': 'secondary checkbox'}}/>\r\n                                        Enable Post\r\n                                    </Col>\r\n                                    </Row>\r\n                                    <Row className=' pt-3'>\r\n                                        <Col  sm={12} md={12} xl={12} className=\"btn-group btn-group-toggle \">\r\n                                        <div className='col-md-3 px-0'>Upload Image</div><input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={onimagechange} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className='pt-3'>\r\n                                        <Col md={10} className='mt-3'></Col>\r\n                                        <Col className='pb-4' >\r\n                                            <Button className='btn btn-light pt-2 pb-2 ' onClick={handleClose} type='submit'>Update</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </DialogContent>\r\n                            </form>\r\n                        </Dialog>\r\n                    \r\n                \r\n            \r\n        </Fragment>\r\n    )\r\n}\r\nSingleThread.prototype = {\r\n    Thread: PropTypes.object.isRequired,\r\n    thread: PropTypes.object.isRequired,\r\n    deleteTreadh: PropTypes.func.isRequired,\r\n    upadateThread: PropTypes.func.isRequired,\r\n    addReplies: PropTypes.func.isRequired,\r\n    getReplies: PropTypes.func.isRequired,\r\n    auth :PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    thread: state.Thread,\r\n    Threads: state.Thread\r\n})\r\nexport default connect(mapStateToProps, { deleteTreadh, upadateThread, addReplies ,getReplies })(SingleThread);","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Board.js",["477","478"],"import { GET_THREAD, ADD_THREAD, ADD_THREAD_ERROR, DELETE_THREAD, ERROR_DELETE_THREAD, UPDATE_THREAD, UPDATE_THREAD_ERRROR, GET_ONETHREAD, ERROR__THREAD, SEARCH_THREAD, SEARCH_THREAD_ERROR, GETMT_THREADS, GETMT_THREADS_ERROR } from './types';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport { toast } from 'react-toastify';\r\n\r\n//Toast Config \r\ntoast.configure();\r\n\r\n//Get Threads \r\nexport const getThread  =  () => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    const res = await axios.get('/api/threads',config)\r\n    console.log('***', res.data)\r\n    dispatch({\r\n        type: GET_THREAD,\r\n        payload: res.data\r\n    })\r\n}\r\n//Add Thread\r\nexport const addThread = (file) => async dispatch => {\r\n    const config = {\r\n        headers : {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post('/api/threads',file,config)\r\n        dispatch({\r\n            type: ADD_THREAD,\r\n            payload: res.data\r\n        })\r\n        toast.info('Thread Added')\r\n    }catch{\r\n        dispatch ({\r\n            type: ADD_THREAD_ERROR,\r\n        })\r\n        toast.error('error added')\r\n    }\r\n}\r\n//Delet Thread \r\nexport const deleteTreadh = (thread_id) => async dispatch => {\r\n    const config ={\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.delete(`/api/threads/${thread_id}`,config)\r\n        dispatch ({\r\n            type: DELETE_THREAD,\r\n            payload:thread_id\r\n        })\r\n        toast.info('Thread Delete')\r\n    }catch{\r\n        dispatch({\r\n            type:ERROR_DELETE_THREAD\r\n        })\r\n    }\r\n}\r\n//Update Thread \r\nexport const upadateThread = (file, thread_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n    try{\r\n        await axios.post(`/api/threads/update/${thread_id}`,file, config)\r\n        const res = await axios.get('/api/threads',config)\r\n        console.log('***', res.data)\r\n        dispatch({\r\n            type: GET_THREAD,\r\n            payload: res.data\r\n        })\r\n        toast.info('Thread Updated');\r\n    }catch {\r\n        dispatch({\r\n            type: UPDATE_THREAD_ERRROR\r\n        })\r\n    }\r\n}\r\n//Get Thread\r\nexport const getoneThread = (thread_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.get(`/api/thread/${thread_id}`,config)\r\n        dispatch ({\r\n            type: GET_ONETHREAD,\r\n            payload : res.data\r\n        })\r\n    }catch{\r\n        dispatch({\r\n            type: ERROR__THREAD\r\n        })\r\n    }\r\n}\r\n//Searsh Thread\r\nexport const searchThread = (filter,value) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/threads/search`,{filter,value} , config)\r\n        dispatch({\r\n            type: SEARCH_THREAD,\r\n            payload: res.data\r\n        })\r\n    }catch{\r\n        dispatch({\r\n            type: SEARCH_THREAD_ERROR,\r\n        })\r\n    }\r\n}\r\n//Get My Threads\r\nexport const myThreads = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{ \r\n        const res = await axios.post('/api/user/forum/myposts',{},config)\r\n        dispatch({\r\n            type: GETMT_THREADS,\r\n            payload:res.data\r\n        })\r\n    }catch{\r\n        dispatch({\r\n            type:GETMT_THREADS_ERROR\r\n        })\r\n    }\r\n}","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\YourAccount.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\products\\SingleProduct.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\market\\products\\UpdateProduct.js",["479","480","481","482","483","484","485","486","487","488","489","490","491"],"import React from 'react';\r\nimport { Fragment, useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { updateProduct } from '../../../../Actions/Market';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Switch from '@material-ui/core/Switch';\r\nconst UpdateProduct = ({ auth: { user }, updateProduct, market: { product, categories }, loading }) => {\r\n    /**********************************/\r\n    /*************************/\r\n    const [name, setname] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [category_id, setcategoryid] = useState('')\r\n    const [price, setprice] = useState('')\r\n    const [stock, setstock] = useState('')\r\n    const [image, setimage] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    useEffect(() => {\r\n        setname(loading || !product.name ? '' : product.name)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setcategoryid(loading || !product.category_id ? '' : product.category_id)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setdescription(loading || !product.description ? '' : product.description)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setStatus(loading || !product.status ? 1 : product.status)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setimage(loading || !product.image ? '' : product.image)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setstock(loading || !product.stock ? '' : product.stock)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setprice(loading || !product.price ? '' : product.price)\r\n    }, [loading])\r\n\r\n    const onnamechange = e => {\r\n        setname(e.target.value)\r\n    }\r\n    const ondescchange = e => {\r\n        setdescription(e.target.value)\r\n    }\r\n    const oncategorychange = e => {\r\n        setcategoryid(e.target.value)\r\n    }\r\n    const onpricechange = e => {\r\n        setprice(e.target.value)\r\n    }\r\n    const onstockchange = e => {\r\n        setstock(e.target.value)\r\n    }\r\n    const onimagechange = e => {\r\n        setimage(e.target.files[0])\r\n    }\r\n    const onstatuschange = e => {\r\n        setStatus(e.target.value)\r\n    }\r\n    /**********************/\r\n    const [state, setState] = React.useState({ checkedA: true });\r\n    const handleswitch = (product) => {\r\n        setState({\r\n            ...state,\r\n            [product.target.name]: product.target.checked\r\n        });\r\n        if (product.target.checked === true) {\r\n            setStatus(1)\r\n        } else {\r\n            setStatus(0)\r\n        }\r\n        console.log(status)\r\n    };\r\n    /**************************/\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        const file = new FormData();\r\n        file.append('name', name);\r\n        file.append('description', description);\r\n        file.append('category_id', category_id);\r\n        file.append('price', price);\r\n        file.append('stock', stock);\r\n        file.append('image', image);\r\n        file.append('status', status);\r\n        updateProduct(file, product.id)\r\n        setOpen2(false);\r\n        e.target.reset();\r\n    }\r\n    /*****************************/\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const handleClose2 = () => {\r\n        setOpen2(false);\r\n    };\r\n    const handleOpen2 = () => {\r\n        setOpen1(true);\r\n    };\r\n    /*********************************/\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    /**********************************/\r\n    return (\r\n        <Fragment>\r\n\r\n            <div>\r\n                <form className='addProduct' onSubmit={e => submit(e)}>\r\n                    <DialogContent>\r\n                        <div className='row'>\r\n                            <div className='col-sm-1 mr-2'>\r\n                                <Avatar src={user && user.attributes.profile_image} />\r\n                            </div>\r\n                            <div className='col-sm-10 pt-3 '>\r\n                                <div className='row'>\r\n                                    <div className='row'>\r\n                                        <div className='col-sm-12 pb-3'>\r\n                                            <h6><b>{user && user.attributes.first_name.charAt(0).toUpperCase() + user.attributes.first_name.slice(1)}  {user && user.attributes.last_name.charAt(0).toUpperCase() + user.attributes.last_name.slice(1)}</b> </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='row pt-3'>\r\n                                            <div className='col-sm-12'>\r\n                                                <Row>\r\n                                                    <Col xs={4}>\r\n                                                        <Form.Label>Name Product</Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={8}>\r\n                                                        <FormControl\r\n                                                            className='input_event'\r\n                                                            placeholder={product && product.name}\r\n                                                            label=\"Product_name\"\r\n                                                            name=\"name\" value={name}\r\n                                                            onChange={onnamechange}\r\n                                                            type=\"text\" />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row pt-3'>\r\n                                            <div className='col-sm-12'>\r\n                                                <Row>\r\n                                                    <Col xs={4}>\r\n                                                        <Form.Label>Price </Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={8}>\r\n                                                        <FormControl\r\n                                                            className='input_event'\r\n                                                            placeholder={product && product.price}\r\n                                                            margin=\"dense\"\r\n                                                            name=\"price\" value={price} onChange={onpricechange}\r\n                                                            type=\"text\" />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row pt-3 pb-3'>\r\n                                            <div className='row pt-3 '>\r\n                                                <div className='col-sm-12'>\r\n                                                    <Row>\r\n                                                        <Col xs={12}>\r\n                                                            <Select\r\n                                                                className='col-md-12'\r\n                                                                labelId=\"demo-controlled-open-select-label\"\r\n                                                                id=\"demo-controlled-open-select\"\r\n                                                                open={open1}\r\n                                                                onClose={handleClose1}\r\n                                                                onOpen={handleClickOpen1}\r\n                                                                value={category_id}\r\n                                                                name=\"category_id\"\r\n                                                                onChange={oncategorychange}>\r\n                                                                {categories && categories.map(c =>\r\n                                                                    (<MenuItem key={c.id} value={c.id} >{c.name}</MenuItem>)\r\n                                                                )}\r\n                                                            </Select>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row pt-2'>\r\n                                            <div className='col-12 pb-3'>\r\n                                                <Row>\r\n                                                    <Col xs={4}>\r\n                                                        <Form.Label>Quantity</Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={8}>\r\n                                                        <FormControl\r\n                                                            placeholder={product && product.stock}\r\n                                                            className='input_event'\r\n                                                            margin=\"dense\"\r\n                                                            name=\"stock\" value={stock} onChange={onstockchange}\r\n                                                            type=\"text\" />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row pt-3 pb-2'>\r\n                                            <div className='col-12'>\r\n                                                <Row>\r\n                                                    <Col xs={4}>\r\n                                                        <Form.Label>Description</Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={8}>\r\n                                                        <FormControl\r\n                                                            placeholder={product && product.description}\r\n                                                            className='input_event'\r\n                                                            margin=\"dense\"\r\n                                                            id=\"Description\"\r\n                                                            as=\"textarea\" aria-label=\"With textarea\"\r\n                                                            name=\"description\" value={description} onChange={ondescchange}\r\n                                                            type=\"textarea\" />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Row className='pt-2 pb-2'>\r\n                                            <Col xs={12}>\r\n                                                <FormControl // placeholder={event && event.status}\r\n                                                    className='input_event'\r\n                                                    hidden='true'\r\n                                                    id=\"status\"\r\n                                                    name=\"status\"\r\n                                                    value={\r\n                                                        status.toString()\r\n                                                    }\r\n                                                    type=\"textarea\"\r\n                                                    fullWidth\r\n                                                    onChange={onstatuschange} />\r\n                                                        Disable Product\r\n                                                    <Switch checked={\r\n                                                    state.checkedA\r\n                                                    }\r\n                                                    onChange={handleswitch}\r\n                                                    name=\"checkedA\"\r\n                                                    inputProps={\r\n                                                        { 'aria-label': 'secondary checkbox' }} />\r\n                                                    Enable Product\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <div className='row pt-3 pb-3'>\r\n                                            <div className='col-md-5'>\r\n                                                <div className='row '>\r\n                                                    <div className=\"btn-group btn-group-toggle col-md-12  \">\r\n                                                        <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={onimagechange} name='image' />\r\n                                                        { /*<Button variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                                        <span  >Upload Video </span>\r\n                                                        </Button>*/}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Row className='pt-3 pb-3'>\r\n                                        <Col xs={7}></Col>\r\n                                        <Col xs={5}>\r\n                                            <Button type='submit'\r\n                                                variant=\"contained\" color=\"primary\"\r\n                                                onClick={handleClose2}>\r\n                                                Update Product\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                </form>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\nUpdateProduct.prototype = {\r\n    auth: PropTypes.object.isRequired,\r\n    updateProduct: PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    market: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    market: state.market,\r\n    updateProduct: state.market,\r\n    categories: state.market,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { updateProduct })(UpdateProduct);","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\board\\SingleReply.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\Actions\\Replies.js",["492"],"import { GET_REPLIES, GET_REPLIES_ERROR, ADD_REPLY, ADD_REPLY_ERROR, UPDATE_REPLY, UPDATE_REPLY_ERROR, DELETE_REPLY, DELETE_REPLY_ERROR } from './types';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\ntoast.configure();\r\n\r\n\r\n//Get Replies \r\nexport const getReplies = (thread_id) => async dispatch => {\r\n    const config ={\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.get(`/api/thread/${thread_id}/replies`,config)\r\n        dispatch ({\r\n            type: GET_REPLIES,\r\n            payload : res.data\r\n        })\r\n    }catch (error){\r\n        dispatch({\r\n            type: GET_REPLIES_ERROR\r\n        })\r\n    }\r\n}\r\n//Post Replies \r\nexport const addReplies = (formData, thread_id) => async dispatch => {\r\n    const  config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/thread/${thread_id}/reply`,formData,config)\r\n        dispatch({\r\n            type: ADD_REPLY,\r\n            payload: res.data.data.replies\r\n        })\r\n        console.log('----------',res.data.data)\r\n        toast.info('Add Succes')\r\n    }catch (error){\r\n        dispatch({\r\n            type: ADD_REPLY_ERROR,\r\n        })\r\n    }\r\n}\r\n//Update Reply \r\nexport const updateReply = (formData, reply_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.patch(`/api/thread/${reply_id}/reply`, formData , config)\r\n        dispatch({\r\n            type: UPDATE_REPLY,\r\n            payload: res.data.data.replies\r\n        })\r\n        toast.info('Update Succes')\r\n    }catch (error) {\r\n        dispatch({\r\n            type: UPDATE_REPLY_ERROR\r\n        })\r\n    }\r\n}\r\n//Delete Reply \r\nexport const deleteReply = (reply_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{  \r\n        const res = await axios.delete (`/api/thread/replies/${reply_id}`, config )\r\n        dispatch({\r\n            type : DELETE_REPLY,\r\n            payload : reply_id\r\n        })\r\n        toast.info('Delete Succes');\r\n    }catch (error) {\r\n        dispatch({\r\n            type:DELETE_REPLY_ERROR,\r\n        })\r\n    }\r\n}","C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\content\\Content.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\navbar\\nav.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\events\\tileData.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Webinars.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Network.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Order.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Edit.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\profile\\edit-profile\\Aboute\\Aboute.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Calendar\\Calendar.js",[],"C:\\Users\\SAFSAF\\Desktop\\freelance\\fishcomb\\src\\components\\pages\\Calendar\\appointments.js",[],{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","replacedBy":"496"},{"ruleId":"497","severity":1,"message":"498","line":1,"column":27,"nodeType":"499","messageId":"500","endLine":1,"endColumn":35},{"ruleId":"497","severity":1,"message":"498","line":1,"column":27,"nodeType":"499","messageId":"500","endLine":1,"endColumn":35},{"ruleId":"501","severity":1,"message":"502","line":54,"column":25,"nodeType":"503","endLine":54,"endColumn":40},{"ruleId":"497","severity":1,"message":"504","line":1,"column":187,"nodeType":"499","messageId":"500","endLine":1,"endColumn":196},{"ruleId":"497","severity":1,"message":"505","line":2,"column":36,"nodeType":"499","messageId":"500","endLine":2,"endColumn":51},{"ruleId":"497","severity":1,"message":"506","line":1,"column":17,"nodeType":"499","messageId":"500","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"507","line":53,"column":12,"nodeType":"499","messageId":"500","endLine":53,"endColumn":20},{"ruleId":"497","severity":1,"message":"508","line":54,"column":11,"nodeType":"499","messageId":"500","endLine":54,"endColumn":22},{"ruleId":"497","severity":1,"message":"509","line":3,"column":8,"nodeType":"499","messageId":"500","endLine":3,"endColumn":21},{"ruleId":"497","severity":1,"message":"510","line":4,"column":10,"nodeType":"499","messageId":"500","endLine":4,"endColumn":18},{"ruleId":"497","severity":1,"message":"511","line":3,"column":20,"nodeType":"499","messageId":"500","endLine":3,"endColumn":29},{"ruleId":"497","severity":1,"message":"512","line":11,"column":8,"nodeType":"499","messageId":"500","endLine":11,"endColumn":18},{"ruleId":"497","severity":1,"message":"513","line":16,"column":8,"nodeType":"499","messageId":"500","endLine":16,"endColumn":12},{"ruleId":"497","severity":1,"message":"514","line":17,"column":7,"nodeType":"499","messageId":"500","endLine":17,"endColumn":22},{"ruleId":"497","severity":1,"message":"515","line":20,"column":9,"nodeType":"499","messageId":"500","endLine":20,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":115,"column":5,"nodeType":"518","messageId":"519","endLine":115,"endColumn":15},{"ruleId":"501","severity":1,"message":"502","line":161,"column":47,"nodeType":"503","endLine":161,"endColumn":64},{"ruleId":"520","severity":1,"message":"521","line":171,"column":42,"nodeType":"522","endLine":171,"endColumn":142},{"ruleId":"497","severity":1,"message":"523","line":10,"column":10,"nodeType":"499","messageId":"500","endLine":10,"endColumn":27},{"ruleId":"497","severity":1,"message":"524","line":2,"column":5,"nodeType":"499","messageId":"500","endLine":2,"endColumn":13},{"ruleId":"497","severity":1,"message":"525","line":3,"column":5,"nodeType":"499","messageId":"500","endLine":3,"endColumn":13},{"ruleId":"497","severity":1,"message":"526","line":4,"column":5,"nodeType":"499","messageId":"500","endLine":4,"endColumn":15},{"ruleId":"497","severity":1,"message":"527","line":5,"column":5,"nodeType":"499","messageId":"500","endLine":5,"endColumn":11},{"ruleId":"497","severity":1,"message":"528","line":6,"column":5,"nodeType":"499","messageId":"500","endLine":6,"endColumn":15},{"ruleId":"497","severity":1,"message":"529","line":7,"column":5,"nodeType":"499","messageId":"500","endLine":7,"endColumn":18},{"ruleId":"497","severity":1,"message":"530","line":8,"column":32,"nodeType":"499","messageId":"500","endLine":8,"endColumn":45},{"ruleId":"497","severity":1,"message":"531","line":32,"column":11,"nodeType":"499","messageId":"500","endLine":32,"endColumn":23},{"ruleId":"497","severity":1,"message":"532","line":86,"column":12,"nodeType":"499","messageId":"500","endLine":86,"endColumn":17},{"ruleId":"497","severity":1,"message":"533","line":90,"column":11,"nodeType":"499","messageId":"500","endLine":90,"endColumn":23},{"ruleId":"497","severity":1,"message":"534","line":93,"column":12,"nodeType":"499","messageId":"500","endLine":93,"endColumn":17},{"ruleId":"497","severity":1,"message":"535","line":93,"column":19,"nodeType":"499","messageId":"500","endLine":93,"endColumn":27},{"ruleId":"497","severity":1,"message":"536","line":94,"column":11,"nodeType":"499","messageId":"500","endLine":94,"endColumn":23},{"ruleId":"497","severity":1,"message":"537","line":97,"column":11,"nodeType":"499","messageId":"500","endLine":97,"endColumn":22},{"ruleId":"501","severity":1,"message":"502","line":332,"column":183,"nodeType":"503","endLine":332,"endColumn":202},{"ruleId":"497","severity":1,"message":"538","line":2,"column":8,"nodeType":"499","messageId":"500","endLine":2,"endColumn":14},{"ruleId":"497","severity":1,"message":"539","line":5,"column":10,"nodeType":"499","messageId":"500","endLine":5,"endColumn":15},{"ruleId":"497","severity":1,"message":"540","line":29,"column":11,"nodeType":"499","messageId":"500","endLine":29,"endColumn":27},{"ruleId":"497","severity":1,"message":"532","line":35,"column":12,"nodeType":"499","messageId":"500","endLine":35,"endColumn":17},{"ruleId":"497","severity":1,"message":"533","line":36,"column":11,"nodeType":"499","messageId":"500","endLine":36,"endColumn":23},{"ruleId":"497","severity":1,"message":"541","line":39,"column":11,"nodeType":"499","messageId":"500","endLine":39,"endColumn":22},{"ruleId":"497","severity":1,"message":"542","line":42,"column":12,"nodeType":"499","messageId":"500","endLine":42,"endColumn":23},{"ruleId":"497","severity":1,"message":"543","line":48,"column":8,"nodeType":"499","messageId":"500","endLine":48,"endColumn":14},{"ruleId":"497","severity":1,"message":"544","line":58,"column":7,"nodeType":"499","messageId":"500","endLine":58,"endColumn":21},{"ruleId":"497","severity":1,"message":"531","line":77,"column":7,"nodeType":"499","messageId":"500","endLine":77,"endColumn":19},{"ruleId":"501","severity":1,"message":"502","line":100,"column":72,"nodeType":"503","endLine":100,"endColumn":93},{"ruleId":"501","severity":1,"message":"502","line":107,"column":68,"nodeType":"503","endLine":107,"endColumn":89},{"ruleId":"497","severity":1,"message":"545","line":22,"column":5,"nodeType":"499","messageId":"500","endLine":22,"endColumn":13},{"ruleId":"497","severity":1,"message":"546","line":39,"column":8,"nodeType":"499","messageId":"500","endLine":39,"endColumn":25},{"ruleId":"497","severity":1,"message":"547","line":40,"column":8,"nodeType":"499","messageId":"500","endLine":40,"endColumn":12},{"ruleId":"497","severity":1,"message":"548","line":41,"column":8,"nodeType":"499","messageId":"500","endLine":41,"endColumn":13},{"ruleId":"497","severity":1,"message":"549","line":42,"column":8,"nodeType":"499","messageId":"500","endLine":42,"endColumn":14},{"ruleId":"497","severity":1,"message":"550","line":43,"column":8,"nodeType":"499","messageId":"500","endLine":43,"endColumn":16},{"ruleId":"497","severity":1,"message":"551","line":84,"column":11,"nodeType":"499","messageId":"500","endLine":84,"endColumn":27},{"ruleId":"497","severity":1,"message":"552","line":90,"column":14,"nodeType":"499","messageId":"500","endLine":90,"endColumn":31},{"ruleId":"497","severity":1,"message":"553","line":103,"column":11,"nodeType":"499","messageId":"500","endLine":103,"endColumn":23},{"ruleId":"497","severity":1,"message":"554","line":106,"column":11,"nodeType":"499","messageId":"500","endLine":106,"endColumn":27},{"ruleId":"555","severity":1,"message":"556","line":112,"column":8,"nodeType":"557","endLine":112,"endColumn":35,"suggestions":"558"},{"ruleId":"555","severity":1,"message":"559","line":112,"column":9,"nodeType":"560","endLine":112,"endColumn":34},{"ruleId":"555","severity":1,"message":"561","line":117,"column":8,"nodeType":"557","endLine":117,"endColumn":39,"suggestions":"562"},{"ruleId":"555","severity":1,"message":"559","line":117,"column":9,"nodeType":"560","endLine":117,"endColumn":38},{"ruleId":"497","severity":1,"message":"537","line":123,"column":11,"nodeType":"499","messageId":"500","endLine":123,"endColumn":22},{"ruleId":"497","severity":1,"message":"563","line":129,"column":12,"nodeType":"499","messageId":"500","endLine":129,"endColumn":17},{"ruleId":"497","severity":1,"message":"564","line":130,"column":11,"nodeType":"499","messageId":"500","endLine":130,"endColumn":23},{"ruleId":"497","severity":1,"message":"565","line":133,"column":11,"nodeType":"499","messageId":"500","endLine":133,"endColumn":22},{"ruleId":"497","severity":1,"message":"566","line":145,"column":21,"nodeType":"499","messageId":"500","endLine":145,"endColumn":28},{"ruleId":"497","severity":1,"message":"567","line":152,"column":17,"nodeType":"499","messageId":"500","endLine":152,"endColumn":24},{"ruleId":"497","severity":1,"message":"568","line":153,"column":21,"nodeType":"499","messageId":"500","endLine":153,"endColumn":31},{"ruleId":"555","severity":1,"message":"569","line":192,"column":8,"nodeType":"557","endLine":192,"endColumn":17,"suggestions":"570"},{"ruleId":"555","severity":1,"message":"571","line":195,"column":8,"nodeType":"557","endLine":195,"endColumn":17,"suggestions":"572"},{"ruleId":"555","severity":1,"message":"573","line":198,"column":8,"nodeType":"557","endLine":198,"endColumn":17,"suggestions":"574"},{"ruleId":"555","severity":1,"message":"575","line":202,"column":8,"nodeType":"557","endLine":202,"endColumn":17,"suggestions":"576"},{"ruleId":"555","severity":1,"message":"577","line":205,"column":8,"nodeType":"557","endLine":205,"endColumn":17,"suggestions":"578"},{"ruleId":"555","severity":1,"message":"579","line":208,"column":8,"nodeType":"557","endLine":208,"endColumn":17,"suggestions":"580"},{"ruleId":"555","severity":1,"message":"581","line":212,"column":8,"nodeType":"557","endLine":212,"endColumn":17,"suggestions":"582"},{"ruleId":"555","severity":1,"message":"583","line":216,"column":8,"nodeType":"557","endLine":216,"endColumn":17,"suggestions":"584"},{"ruleId":"497","severity":1,"message":"585","line":229,"column":11,"nodeType":"499","messageId":"500","endLine":229,"endColumn":18},{"ruleId":"520","severity":1,"message":"521","line":693,"column":57,"nodeType":"522","endLine":700,"endColumn":65},{"ruleId":"497","severity":1,"message":"586","line":1,"column":10,"nodeType":"499","messageId":"500","endLine":1,"endColumn":15},{"ruleId":"497","severity":1,"message":"587","line":2,"column":10,"nodeType":"499","messageId":"500","endLine":2,"endColumn":19},{"ruleId":"588","severity":1,"message":"589","line":12,"column":1,"nodeType":"590","endLine":64,"endColumn":2},{"ruleId":"588","severity":1,"message":"589","line":9,"column":1,"nodeType":"590","endLine":59,"endColumn":2},{"ruleId":"497","severity":1,"message":"545","line":12,"column":8,"nodeType":"499","messageId":"500","endLine":12,"endColumn":16},{"ruleId":"497","severity":1,"message":"532","line":37,"column":12,"nodeType":"499","messageId":"500","endLine":37,"endColumn":17},{"ruleId":"497","severity":1,"message":"533","line":38,"column":11,"nodeType":"499","messageId":"500","endLine":38,"endColumn":23},{"ruleId":"497","severity":1,"message":"541","line":42,"column":11,"nodeType":"499","messageId":"500","endLine":42,"endColumn":22},{"ruleId":"588","severity":1,"message":"589","line":8,"column":1,"nodeType":"590","endLine":37,"endColumn":2},{"ruleId":"501","severity":1,"message":"502","line":143,"column":17,"nodeType":"503","endLine":143,"endColumn":43},{"ruleId":"497","severity":1,"message":"591","line":8,"column":10,"nodeType":"499","messageId":"500","endLine":8,"endColumn":21},{"ruleId":"497","severity":1,"message":"592","line":28,"column":8,"nodeType":"499","messageId":"500","endLine":28,"endColumn":13},{"ruleId":"497","severity":1,"message":"593","line":28,"column":14,"nodeType":"499","messageId":"500","endLine":28,"endColumn":22},{"ruleId":"497","severity":1,"message":"594","line":29,"column":15,"nodeType":"499","messageId":"500","endLine":29,"endColumn":24},{"ruleId":"497","severity":1,"message":"595","line":33,"column":7,"nodeType":"499","messageId":"500","endLine":33,"endColumn":10},{"ruleId":"520","severity":1,"message":"521","line":45,"column":29,"nodeType":"522","endLine":45,"endColumn":163},{"ruleId":"497","severity":1,"message":"596","line":2,"column":30,"nodeType":"499","messageId":"500","endLine":2,"endColumn":46},{"ruleId":"497","severity":1,"message":"597","line":2,"column":124,"nodeType":"499","messageId":"500","endLine":2,"endColumn":139},{"ruleId":"497","severity":1,"message":"598","line":2,"column":141,"nodeType":"499","messageId":"500","endLine":2,"endColumn":154},{"ruleId":"497","severity":1,"message":"599","line":123,"column":15,"nodeType":"499","messageId":"500","endLine":123,"endColumn":18},{"ruleId":"497","severity":1,"message":"599","line":165,"column":15,"nodeType":"499","messageId":"500","endLine":165,"endColumn":18},{"ruleId":"497","severity":1,"message":"599","line":187,"column":15,"nodeType":"499","messageId":"500","endLine":187,"endColumn":18},{"ruleId":"497","severity":1,"message":"600","line":63,"column":9,"nodeType":"499","messageId":"500","endLine":63,"endColumn":16},{"ruleId":"497","severity":1,"message":"554","line":95,"column":9,"nodeType":"499","messageId":"500","endLine":95,"endColumn":25},{"ruleId":"497","severity":1,"message":"601","line":10,"column":11,"nodeType":"499","messageId":"500","endLine":10,"endColumn":22},{"ruleId":"497","severity":1,"message":"602","line":7,"column":26,"nodeType":"499","messageId":"500","endLine":7,"endColumn":30},{"ruleId":"497","severity":1,"message":"602","line":3,"column":20,"nodeType":"499","messageId":"500","endLine":3,"endColumn":24},{"ruleId":"497","severity":1,"message":"603","line":3,"column":26,"nodeType":"499","messageId":"500","endLine":3,"endColumn":31},{"ruleId":"497","severity":1,"message":"532","line":25,"column":12,"nodeType":"499","messageId":"500","endLine":25,"endColumn":17},{"ruleId":"497","severity":1,"message":"554","line":26,"column":11,"nodeType":"499","messageId":"500","endLine":26,"endColumn":27},{"ruleId":"497","severity":1,"message":"533","line":32,"column":11,"nodeType":"499","messageId":"500","endLine":32,"endColumn":23},{"ruleId":"604","severity":1,"message":"605","line":68,"column":26,"nodeType":"560","messageId":"606","endLine":68,"endColumn":28},{"ruleId":"604","severity":1,"message":"605","line":68,"column":39,"nodeType":"560","messageId":"606","endLine":68,"endColumn":41},{"ruleId":"555","severity":1,"message":"607","line":69,"column":8,"nodeType":"557","endLine":69,"endColumn":17,"suggestions":"608"},{"ruleId":"604","severity":1,"message":"605","line":71,"column":25,"nodeType":"560","messageId":"606","endLine":71,"endColumn":27},{"ruleId":"604","severity":1,"message":"605","line":71,"column":38,"nodeType":"560","messageId":"606","endLine":71,"endColumn":40},{"ruleId":"555","severity":1,"message":"609","line":72,"column":8,"nodeType":"557","endLine":72,"endColumn":17,"suggestions":"610"},{"ruleId":"604","severity":1,"message":"605","line":74,"column":27,"nodeType":"560","messageId":"606","endLine":74,"endColumn":29},{"ruleId":"604","severity":1,"message":"605","line":74,"column":40,"nodeType":"560","messageId":"606","endLine":74,"endColumn":42},{"ruleId":"555","severity":1,"message":"611","line":75,"column":8,"nodeType":"557","endLine":75,"endColumn":17,"suggestions":"612"},{"ruleId":"604","severity":1,"message":"605","line":77,"column":26,"nodeType":"560","messageId":"606","endLine":77,"endColumn":28},{"ruleId":"604","severity":1,"message":"605","line":77,"column":39,"nodeType":"560","messageId":"606","endLine":77,"endColumn":41},{"ruleId":"555","severity":1,"message":"613","line":78,"column":8,"nodeType":"557","endLine":78,"endColumn":17,"suggestions":"614"},{"ruleId":"497","severity":1,"message":"615","line":1,"column":88,"nodeType":"499","messageId":"500","endLine":1,"endColumn":101},{"ruleId":"497","severity":1,"message":"599","line":55,"column":15,"nodeType":"499","messageId":"500","endLine":55,"endColumn":18},{"ruleId":"555","severity":1,"message":"616","line":27,"column":8,"nodeType":"557","endLine":27,"endColumn":17,"suggestions":"617"},{"ruleId":"555","severity":1,"message":"618","line":30,"column":8,"nodeType":"557","endLine":30,"endColumn":17,"suggestions":"619"},{"ruleId":"555","severity":1,"message":"620","line":33,"column":8,"nodeType":"557","endLine":33,"endColumn":17,"suggestions":"621"},{"ruleId":"555","severity":1,"message":"622","line":36,"column":8,"nodeType":"557","endLine":36,"endColumn":17,"suggestions":"623"},{"ruleId":"555","severity":1,"message":"624","line":39,"column":8,"nodeType":"557","endLine":39,"endColumn":17,"suggestions":"625"},{"ruleId":"555","severity":1,"message":"626","line":42,"column":8,"nodeType":"557","endLine":42,"endColumn":17,"suggestions":"627"},{"ruleId":"555","severity":1,"message":"628","line":45,"column":8,"nodeType":"557","endLine":45,"endColumn":17,"suggestions":"629"},{"ruleId":"497","severity":1,"message":"534","line":105,"column":12,"nodeType":"499","messageId":"500","endLine":105,"endColumn":17},{"ruleId":"497","severity":1,"message":"537","line":109,"column":11,"nodeType":"499","messageId":"500","endLine":109,"endColumn":22},{"ruleId":"497","severity":1,"message":"513","line":113,"column":12,"nodeType":"499","messageId":"500","endLine":113,"endColumn":16},{"ruleId":"497","severity":1,"message":"514","line":114,"column":11,"nodeType":"499","messageId":"500","endLine":114,"endColumn":26},{"ruleId":"497","severity":1,"message":"515","line":117,"column":11,"nodeType":"499","messageId":"500","endLine":117,"endColumn":22},{"ruleId":"516","severity":1,"message":"630","line":302,"column":5,"nodeType":"518","messageId":"519","endLine":302,"endColumn":9},{"ruleId":"497","severity":1,"message":"599","line":81,"column":15,"nodeType":"499","messageId":"500","endLine":81,"endColumn":18},"no-native-reassign",["631"],"no-negated-in-lhs",["632"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'SUBSCRIBE' is defined but never used.","'GET_MY_PRODUCTS' is defined but never used.","'useEffect' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'PersonAddIcon' is defined but never used.","'MdCancel' is defined but never used.","'Container' is defined but never used.","'UpdateIcon' is defined but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-dupe-keys","Duplicate key 'addReplies'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IoBagCheckOutline' is defined but never used.","'DECREASE' is defined but never used.","'INCREASE' is defined but never used.","'CLEAR_CART' is defined but never used.","'REMOVE' is defined but never used.","'GET_TOTALS' is defined but never used.","'TOGGLE_AMOUNT' is defined but never used.","'getCategories' is defined but never used.","'handleChange' is assigned a value but never used.","'open1' is assigned a value but never used.","'handleClose1' is assigned a value but never used.","'open2' is assigned a value but never used.","'setOpen2' is assigned a value but never used.","'handleClose2' is assigned a value but never used.","'handleOpen2' is assigned a value but never used.","'Select' is defined but never used.","'Table' is defined but never used.","'oncategorychange' is assigned a value but never used.","'handleOpen1' is assigned a value but never used.","'category_id' is assigned a value but never used.","'status' is assigned a value but never used.","'onstatuschange' is assigned a value but never used.","'MenuItem' is defined but never used.","'ClickAwayListener' is defined but never used.","'Grow' is defined but never used.","'Paper' is defined but never used.","'Popper' is defined but never used.","'MenuList' is defined but never used.","'handleClosePoint' is assigned a value but never used.","'handleListKeyDown' is defined but never used.","'handleToggle' is assigned a value but never used.","'handleClickOpen1' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'event.next_event' and 'getevent'. Either include them or remove the dependency array. If 'getevent' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["633"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useCallback has missing dependencies: 'event.previous_event' and 'getevent'. Either include them or remove the dependency array. If 'getevent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["634"],"'open3' is assigned a value but never used.","'handleClose3' is assigned a value but never used.","'handleOpen3' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setText' is assigned a value but never used.","'setdisable' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'event?.location'. Either include it or remove the dependency array. If 'setlocation1' needs the current value of 'event.location', you can also switch to useReducer instead of useState and read 'event.location' in the reducer.",["635"],"React Hook useEffect has a missing dependency: 'event?.name'. Either include it or remove the dependency array. If 'setname' needs the current value of 'event.name', you can also switch to useReducer instead of useState and read 'event.name' in the reducer.",["636"],"React Hook useEffect has a missing dependency: 'event?.description'. Either include it or remove the dependency array. If 'setdescription' needs the current value of 'event.description', you can also switch to useReducer instead of useState and read 'event.description' in the reducer.",["637"],"React Hook useEffect has a missing dependency: 'event?.video_link'. Either include it or remove the dependency array. If 'setvideolink' needs the current value of 'event.video_link', you can also switch to useReducer instead of useState and read 'event.video_link' in the reducer.",["638"],"React Hook useEffect has a missing dependency: 'event?.status'. Either include it or remove the dependency array. If 'setStatus' needs the current value of 'event.status', you can also switch to useReducer instead of useState and read 'event.status' in the reducer.",["639"],"React Hook useEffect has a missing dependency: 'event?.date'. Either include it or remove the dependency array. If 'setdate' needs the current value of 'event.date', you can also switch to useReducer instead of useState and read 'event.date' in the reducer.",["640"],"React Hook useEffect has a missing dependency: 'event?.cover'. Either include it or remove the dependency array. If 'setcover' needs the current value of 'event.cover', you can also switch to useReducer instead of useState and read 'event.cover' in the reducer.",["641"],"React Hook useEffect has a missing dependency: 'event?.category.id'. Either include it or remove the dependency array. If 'setCategory_id' needs the current value of 'event.category.id', you can also switch to useReducer instead of useState and read 'event.category.id' in the reducer.",["642"],"'getlink' is assigned a value but never used.","'Pause' is defined but never used.","'propTypes' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'GrAddCircle' is defined but never used.","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'setTotal1' is assigned a value but never used.","'sum' is assigned a value but never used.","'DELETE_PROD_CART' is defined but never used.","'PAYMENT_SUCCESS' is defined but never used.","'PAYMENT_ERROR' is defined but never used.","'res' is assigned a value but never used.","'getpost' is assigned a value but never used.","'handleToken' is assigned a value but never used.","'Card' is defined but never used.","'Image' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","unexpectedMixedOperator","React Hook useEffect has a missing dependency: 'threads'. Either include it or remove the dependency array. If 'settitle' needs the current value of 'threads', you can also switch to useReducer instead of useState and read 'threads' in the reducer.",["643"],"React Hook useEffect has a missing dependency: 'threads'. Either include it or remove the dependency array. If 'setbody' needs the current value of 'threads', you can also switch to useReducer instead of useState and read 'threads' in the reducer.",["644"],"React Hook useEffect has a missing dependency: 'threads'. Either include it or remove the dependency array. If 'setStatus' needs the current value of 'threads', you can also switch to useReducer instead of useState and read 'threads' in the reducer.",["645"],"React Hook useEffect has a missing dependency: 'threads'. Either include it or remove the dependency array. If 'setimage' needs the current value of 'threads', you can also switch to useReducer instead of useState and read 'threads' in the reducer.",["646"],"'UPDATE_THREAD' is defined but never used.","React Hook useEffect has a missing dependency: 'product.name'. Either include it or remove the dependency array. If 'setname' needs the current value of 'product.name', you can also switch to useReducer instead of useState and read 'product.name' in the reducer.",["647"],"React Hook useEffect has a missing dependency: 'product.category_id'. Either include it or remove the dependency array. If 'setcategoryid' needs the current value of 'product.category_id', you can also switch to useReducer instead of useState and read 'product.category_id' in the reducer.",["648"],"React Hook useEffect has a missing dependency: 'product.description'. Either include it or remove the dependency array. If 'setdescription' needs the current value of 'product.description', you can also switch to useReducer instead of useState and read 'product.description' in the reducer.",["649"],"React Hook useEffect has a missing dependency: 'product.status'. Either include it or remove the dependency array. If 'setStatus' needs the current value of 'product.status', you can also switch to useReducer instead of useState and read 'product.status' in the reducer.",["650"],"React Hook useEffect has a missing dependency: 'product.image'. Either include it or remove the dependency array. If 'setimage' needs the current value of 'product.image', you can also switch to useReducer instead of useState and read 'product.image' in the reducer.",["651"],"React Hook useEffect has a missing dependency: 'product.stock'. Either include it or remove the dependency array. If 'setstock' needs the current value of 'product.stock', you can also switch to useReducer instead of useState and read 'product.stock' in the reducer.",["652"],"React Hook useEffect has a missing dependency: 'product.price'. Either include it or remove the dependency array. If 'setprice' needs the current value of 'product.price', you can also switch to useReducer instead of useState and read 'product.price' in the reducer.",["653"],"Duplicate key 'auth'.","no-global-assign","no-unsafe-negation",{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"658","fix":"659"},{"desc":"660","fix":"661"},{"desc":"662","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"672","fix":"673"},{"desc":"674","fix":"675"},{"desc":"674","fix":"676"},{"desc":"674","fix":"677"},{"desc":"674","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},"Update the dependencies array to be: [event.next_event, getevent]",{"range":"693","text":"694"},"Update the dependencies array to be: [event.previous_event, getevent]",{"range":"695","text":"696"},"Update the dependencies array to be: [event?.location, loading]",{"range":"697","text":"698"},"Update the dependencies array to be: [event?.name, loading]",{"range":"699","text":"700"},"Update the dependencies array to be: [event?.description, loading]",{"range":"701","text":"702"},"Update the dependencies array to be: [event?.video_link, loading]",{"range":"703","text":"704"},"Update the dependencies array to be: [event?.status, loading]",{"range":"705","text":"706"},"Update the dependencies array to be: [event?.date, loading]",{"range":"707","text":"708"},"Update the dependencies array to be: [event?.cover, loading]",{"range":"709","text":"710"},"Update the dependencies array to be: [event?.category.id, loading]",{"range":"711","text":"712"},"Update the dependencies array to be: [loading, threads]",{"range":"713","text":"714"},{"range":"715","text":"714"},{"range":"716","text":"714"},{"range":"717","text":"714"},"Update the dependencies array to be: [loading, product.name]",{"range":"718","text":"719"},"Update the dependencies array to be: [loading, product.category_id]",{"range":"720","text":"721"},"Update the dependencies array to be: [loading, product.description]",{"range":"722","text":"723"},"Update the dependencies array to be: [loading, product.status]",{"range":"724","text":"725"},"Update the dependencies array to be: [loading, product.image]",{"range":"726","text":"727"},"Update the dependencies array to be: [loading, product.stock]",{"range":"728","text":"729"},"Update the dependencies array to be: [loading, product.price]",{"range":"730","text":"731"},[3403,3430],"[event.next_event, getevent]",[3527,3558],"[event.previous_event, getevent]",[5495,5504],"[event?.location, loading]",[5599,5608],"[event?.name, loading]",[5724,5733],"[event?.description, loading]",[5850,5859],"[event?.video_link, loading]",[5958,5967],"[event?.status, loading]",[6061,6070],"[event?.date, loading]",[6169,6178],"[event?.cover, loading]",[6295,6304],"[event?.category.id, loading]",[2558,2567],"[loading, threads]",[2686,2695],[2819,2828],[2951,2960],[1273,1282],"[loading, product.name]",[1398,1407],"[loading, product.category_id]",[1524,1533],"[loading, product.description]",[1634,1643],"[loading, product.status]",[1742,1751],"[loading, product.image]",[1850,1859],"[loading, product.stock]",[1958,1967],"[loading, product.price]"]