[{"F:\\work\\Project\\fishComb_Front\\src\\index.js":"1","F:\\work\\Project\\fishComb_Front\\src\\App.js":"2","F:\\work\\Project\\fishComb_Front\\src\\store.js":"3","F:\\work\\Project\\fishComb_Front\\src\\ProtectedRoute.js":"4","F:\\work\\Project\\fishComb_Front\\src\\Actions\\Market.js":"5","F:\\work\\Project\\fishComb_Front\\src\\Actions\\auth.js":"6","F:\\work\\Project\\fishComb_Front\\src\\Actions\\events.js":"7","F:\\work\\Project\\fishComb_Front\\src\\Actions\\Friends.js":"8","F:\\work\\Project\\fishComb_Front\\src\\components\\auth\\Reset\\Reset.js":"9","F:\\work\\Project\\fishComb_Front\\src\\components\\auth\\HomePage\\HomePage.js":"10","F:\\work\\Project\\fishComb_Front\\src\\components\\auth\\login\\Login.js":"11","F:\\work\\Project\\fishComb_Front\\src\\components\\auth\\Register\\Register.js":"12","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Dashboard\\Dashboard.js":"13","F:\\work\\Project\\fishComb_Front\\src\\Actions\\types.js":"14","F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Header\\Header.js":"15","F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Footer\\Footer.js":"16","F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Menu\\Menu.js":"17","F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Container\\Container.js":"18","F:\\work\\Project\\fishComb_Front\\src\\Reducers\\index.js":"19","F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Header\\Notification.js":"20","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\Board.js":"21","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\Userprofile.js":"22","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Search\\Searchitem.js":"23","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\Profile.js":"24","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\ProductItem.js":"25","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Newfeed.js":"26","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Market.js":"27","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\messages\\Messages.js":"28","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\watch\\Watch.js":"29","F:\\work\\Project\\fishComb_Front\\src\\Reducers\\auth.red.js":"30","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Eventitem.js":"31","F:\\work\\Project\\fishComb_Front\\src\\Reducers\\Profile.js":"32","F:\\work\\Project\\fishComb_Front\\src\\Reducers\\market.js":"33","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Events.js":"34","F:\\work\\Project\\fishComb_Front\\src\\Reducers\\friends.js":"35","F:\\work\\Project\\fishComb_Front\\src\\Reducers\\Post.js":"36","F:\\work\\Project\\fishComb_Front\\src\\Reducers\\events.js":"37","F:\\work\\Project\\fishComb_Front\\src\\Actions\\profile.js":"38","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\AddProduct.js":"39","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\UpdateProduct.js":"40","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\SingleProduct.js":"41","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\navbar\\nav.js":"42","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\YourAccount.js":"43","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Search\\Search.js":"44","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\content\\Content.js":"45","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\content\\ContentUser.js":"46","F:\\work\\Project\\fishComb_Front\\src\\Actions\\Post.js":"47","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Post\\Post.js":"48","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\publications\\Publication.js":"49","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\single.js":"50","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Order.js":"51","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Webinars.js":"52","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Network.js":"53","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Edit.js":"54","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\publications\\SingleComm.js":"55","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Post\\UpdatePost.js":"56","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Aboute\\Aboute.js":"57","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\Cart.js":"58","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\CartProduct.js":"59"},{"size":646,"mtime":1611020275957,"results":"60","hashOfConfig":"61"},{"size":1763,"mtime":1611522004815,"results":"62","hashOfConfig":"61"},{"size":387,"mtime":1611020275958,"results":"63","hashOfConfig":"61"},{"size":545,"mtime":1611094856107,"results":"64","hashOfConfig":"61"},{"size":5694,"mtime":1611533104171,"results":"65","hashOfConfig":"61"},{"size":3796,"mtime":1611095012877,"results":"66","hashOfConfig":"61"},{"size":9807,"mtime":1611420950339,"results":"67","hashOfConfig":"61"},{"size":2483,"mtime":1611255000805,"results":"68","hashOfConfig":"61"},{"size":2176,"mtime":1611020275908,"results":"69","hashOfConfig":"61"},{"size":954,"mtime":1611446532487,"results":"70","hashOfConfig":"61"},{"size":3132,"mtime":1611094856357,"results":"71","hashOfConfig":"61"},{"size":40769,"mtime":1611350380909,"results":"72","hashOfConfig":"61"},{"size":1362,"mtime":1611351056768,"results":"73","hashOfConfig":"61"},{"size":2669,"mtime":1611526710788,"results":"74","hashOfConfig":"61"},{"size":24211,"mtime":1611518726004,"results":"75","hashOfConfig":"61"},{"size":3096,"mtime":1611020275914,"results":"76","hashOfConfig":"61"},{"size":28366,"mtime":1611020275917,"results":"77","hashOfConfig":"61"},{"size":2459,"mtime":1611528961299,"results":"78","hashOfConfig":"61"},{"size":320,"mtime":1611173873435,"results":"79","hashOfConfig":"61"},{"size":2443,"mtime":1611020275916,"results":"80","hashOfConfig":"61"},{"size":3544,"mtime":1611020275920,"results":"81","hashOfConfig":"61"},{"size":1924,"mtime":1611446547987,"results":"82","hashOfConfig":"61"},{"size":1337,"mtime":1611020275919,"results":"83","hashOfConfig":"61"},{"size":5174,"mtime":1611440216345,"results":"84","hashOfConfig":"61"},{"size":3830,"mtime":1611529778377,"results":"85","hashOfConfig":"61"},{"size":1724,"mtime":1611521670161,"results":"86","hashOfConfig":"61"},{"size":8606,"mtime":1611529286275,"results":"87","hashOfConfig":"61"},{"size":2625,"mtime":1611020275925,"results":"88","hashOfConfig":"61"},{"size":3524,"mtime":1611020275956,"results":"89","hashOfConfig":"61"},{"size":1198,"mtime":1611094997488,"results":"90","hashOfConfig":"61"},{"size":21949,"mtime":1611524982174,"results":"91","hashOfConfig":"61"},{"size":715,"mtime":1611435360427,"results":"92","hashOfConfig":"61"},{"size":1891,"mtime":1611524386058,"results":"93","hashOfConfig":"61"},{"size":19989,"mtime":1611523513831,"results":"94","hashOfConfig":"61"},{"size":1265,"mtime":1611355215811,"results":"95","hashOfConfig":"61"},{"size":2861,"mtime":1611444887994,"results":"96","hashOfConfig":"61"},{"size":2229,"mtime":1611355215810,"results":"97","hashOfConfig":"61"},{"size":2112,"mtime":1611440012188,"results":"98","hashOfConfig":"61"},{"size":7642,"mtime":1611520252206,"results":"99","hashOfConfig":"61"},{"size":8583,"mtime":1611520284430,"results":"100","hashOfConfig":"61"},{"size":916,"mtime":1611254379931,"results":"101","hashOfConfig":"61"},{"size":997,"mtime":1611020275953,"results":"102","hashOfConfig":"61"},{"size":2802,"mtime":1611245343730,"results":"103","hashOfConfig":"61"},{"size":2990,"mtime":1611446532574,"results":"104","hashOfConfig":"61"},{"size":1012,"mtime":1611020275949,"results":"105","hashOfConfig":"61"},{"size":1952,"mtime":1611440887947,"results":"106","hashOfConfig":"61"},{"size":6381,"mtime":1611444333945,"results":"107","hashOfConfig":"61"},{"size":8133,"mtime":1611076652647,"results":"108","hashOfConfig":"61"},{"size":16184,"mtime":1611529316338,"results":"109","hashOfConfig":"61"},{"size":898,"mtime":1611249503249,"results":"110","hashOfConfig":"61"},{"size":870,"mtime":1611020275952,"results":"111","hashOfConfig":"61"},{"size":189,"mtime":1611020275953,"results":"112","hashOfConfig":"61"},{"size":1451,"mtime":1611020275952,"results":"113","hashOfConfig":"61"},{"size":4161,"mtime":1611185595767,"results":"114","hashOfConfig":"61"},{"size":3052,"mtime":1611445659625,"results":"115","hashOfConfig":"61"},{"size":2160,"mtime":1611444279617,"results":"116","hashOfConfig":"61"},{"size":2277,"mtime":1611020275950,"results":"117","hashOfConfig":"61"},{"size":1335,"mtime":1611532996276,"results":"118","hashOfConfig":"61"},{"size":609,"mtime":1611533323280,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mwbrep",{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"162"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"162"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"162"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"162"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\work\\Project\\fishComb_Front\\src\\index.js",[],"F:\\work\\Project\\fishComb_Front\\src\\App.js",["243","244","245","246"],"F:\\work\\Project\\fishComb_Front\\src\\store.js",[],"F:\\work\\Project\\fishComb_Front\\src\\ProtectedRoute.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Actions\\Market.js",["247"],"F:\\work\\Project\\fishComb_Front\\src\\Actions\\auth.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Actions\\events.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Actions\\Friends.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\auth\\Reset\\Reset.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\auth\\HomePage\\HomePage.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\auth\\login\\Login.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\auth\\Register\\Register.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Dashboard\\Dashboard.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Actions\\types.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Header\\Header.js",["248","249","250"],"F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Footer\\Footer.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Menu\\Menu.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Container\\Container.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Reducers\\index.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Header\\Notification.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\Board.js",[],["251","252"],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\Userprofile.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Search\\Searchitem.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\Profile.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\ProductItem.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Newfeed.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Market.js",["253","254","255","256","257","258","259"],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\messages\\Messages.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\watch\\Watch.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Reducers\\auth.red.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Eventitem.js",["260","261","262","263","264","265","266","267","268","269","270","271","272","273","274"],"import Single from './single'\r\nimport React, { useEffect, useState, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { getevent, deleteEvent, subscribEevent, invite, getfriends, update, getevents } from '../../../Actions/events'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport './Events.css'\r\nimport { IoShareSocialOutline } from \"react-icons/io5\";\r\nimport { Avatar, Dialog, DialogActions, DialogContent, DialogTitle, MenuItem, Slide } from '@material-ui/core'\r\nimport { FormControl } from 'react-bootstrap'\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport { ReactTinyLink } from 'react-tiny-link';\r\nimport UpdateRoundedIcon from '@material-ui/icons/UpdateRounded';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport { NavLink } from 'react-bootstrap';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst Eventitem = ({ match, getevent, events: { event, friends, events, categories, loading }, deleteEvent, auth: { user }, getfriends, invite, update, getevents }) => {\r\n    useEffect(() => {\r\n        getevent(match.params.id);\r\n    }, [getevent, match.params.id]\r\n    )\r\n    useEffect(() => {\r\n        getfriends()\r\n    }, [getfriends]\r\n    )\r\n    useEffect(() => {\r\n        getevents()\r\n    }, [getevents])\r\n    const [state, setState] = React.useState({\r\n        checkedA: true\r\n\r\n    });\r\n\r\n\r\n    const increment = useCallback(() => {\r\n\r\n        getevent(event.next_event)\r\n    }, [event && event.next_event])\r\n\r\n    const decrement = useCallback(() => {\r\n\r\n        getevent(event.previous_event)\r\n    }, [event && event.previous_event])\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n\r\n\r\n    const [open1, setOpen1] = React.useState(false);\r\n\r\n\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const handleClose2 = () => {\r\n        setOpen2(false);\r\n    };\r\n\r\n    const handleOpen2 = () => {\r\n        setOpen2(true);\r\n    };\r\n    const handleClickOpen2 = () => {\r\n        setOpen2(true);\r\n    };\r\n    const [open3, setOpen3] = React.useState(false);\r\n    const handleClose3 = () => {\r\n        setOpen3(false);\r\n    };\r\n\r\n    const handleOpen3 = () => {\r\n        setOpen3(true);\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n\r\n    const handleOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const [user_id, setUser] = useState('');\r\n\r\n    const onsubmit = e => {\r\n        e.preventDefault();\r\n        invite(user_id, event.id)\r\n    }\r\n\r\n    const [uid, setText] = useState('');\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        description: '',\r\n        location: '',\r\n        date: '',\r\n        cover: 'non',\r\n        video_link: '',\r\n        status: '',\r\n\r\n    })\r\n    const [category_id, setCategory_id] = useState('')\r\n    const { name, description, location, date, cover, video_link, status } = formData;\r\n\r\n    useEffect(() => {\r\n        setFormData({\r\n            location: loading || !event.location ? '' : event.location,\r\n            name: loading || !event.name ? '' : event.name,\r\n            description: loading || !event.description ? '' : event.description,\r\n            cover: loading || !event.cover ? '' : event.cover,\r\n            video_link: loading || !event.video_link ? '' : event.video_link,\r\n            status: loading || !event.status ? true : event.status,\r\n            date: loading || !event.date ? '' : event.date,\r\n        })\r\n    }, [loading])\r\n    const handleswitch = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        if (event.target.checked === true) {\r\n            setFormData({ status: true })\r\n        }\r\n        else { setFormData({ status: false }) }\r\n        console.log(status)\r\n    };\r\n    const onchange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        update({\r\n            name,\r\n            description,\r\n            category_id,\r\n            location,\r\n            date,\r\n            cover: 'non',\r\n            video_link,\r\n            status,\r\n\r\n        }, event.id)\r\n        e.target.reset();\r\n    }\r\n    const [disable, setdisable] = useState(false);\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col-sm-3'></div>\r\n                <div className=\"col-sm-8 \">\r\n                    <ul className=\"nav nav-pills nav-justified\" id='navprofil'>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to={`/NavEvents`} className=\"m\"><span className=\"n\">General event</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to={`/MyStream`} className=\"m\"><span className=\"n\">My Streams</span></NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to={`/invited`} className=\"m\"><span className=\"n\">Invited Webinars</span></NavLink>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n                <Dialog open={open2} onClose={handleClose2} aria-labelledby=\"form-dialog-title1\"    >\r\n                    <form onSubmit={e => submit(e)}>\r\n                        <DialogTitle id=\"form-dialog-title1\">update event</DialogTitle>\r\n                        <DialogContent>\r\n                            <div className=\"row pt-1\">\r\n                                <div className=' col-sm-12'>\r\n                                    <FormControl\r\n                                        className='input_event'\r\n                                        placeholder={event && event.name}\r\n                                        margin=\"dense\"\r\n                                        id=\"Title\"\r\n                                        label=\"Title\"\r\n                                        type=\"text\"\r\n\r\n                                        name=\"name\" value={name} onChange={e => onchange(e)}\r\n                                    /></div></div>\r\n                            <div className=\"row pt-3\">\r\n                                <div className='col-6'>\r\n                                    <FormControl\r\n                                        className='input_event'\r\n                                        margin=\"dense\"\r\n                                        id=\"Date\"\r\n                                        type=\"Date\"\r\n\r\n                                        name=\"date\" value={date} onChange={e => onchange(e)}\r\n                                    />\r\n\r\n                                </div>\r\n                                <div className='col-6'>\r\n\r\n\r\n                                    <Select\r\n                                        labelId=\"demo-controlled-open-select-label1\"\r\n                                        id=\"demo-controlled-open-select1\"\r\n                                        open={open3}\r\n                                        onClose={handleClose3}\r\n                                        onOpen={handleOpen3}\r\n                                        value={category_id}\r\n                                        onChange={e => setCategory_id(e.target.value)}>\r\n\r\n                                        {categories && categories.map(c =>\r\n                                            (<MenuItem key={c.id} value={c.id} >{c.name} </MenuItem>)\r\n\r\n                                        )}\r\n\r\n                                    </Select>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row pt-3\">\r\n                                <div className='col-sm-12'>\r\n                                    <FormControl\r\n                                        placeholder={event && event.location}\r\n                                        margin=\"dense\"\r\n                                        id=\"Location\"\r\n                                        className='input_event'\r\n                                        type=\"text\"\r\n                                        fullWidth\r\n                                        name=\"location\" value={location} onChange={e => onchange(e)}\r\n                                    /></div></div>\r\n                            <div className=\"row pt-3\">\r\n                                <div className='col-sm-12'>\r\n                                    <FormControl\r\n                                        placeholder={event && event.description}\r\n                                        className='input_event'\r\n                                        margin=\"dense\"\r\n                                        id=\"Description\"\r\n                                        as=\"textarea\" aria-label=\"With textarea\"\r\n                                        type=\"textarea\"\r\n\r\n                                        name=\"description\" value={description} onChange={e => onchange(e)}\r\n                                    /></div></div>\r\n                            <div className='row pt-3'>\r\n\r\n\r\n                                <div className=\"btn-group btn-group-toggle col-md-12  \">\r\n                                    <Button variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n\r\n                                        <span  >Upload Video </span>\r\n\r\n                                    </Button>\r\n                                </div>  </div>\r\n                            <div className=\"row pt-3\">\r\n                                <div className='col-sm-12'>\r\n                                    <FormControl\r\n                                        placeholder={event && event.video_link}\r\n                                        className='input_event'\r\n                                        margin=\"dense\"\r\n                                        id=\"video\"\r\n\r\n                                        type=\"textarea\"\r\n                                        fullWidth\r\n                                        name=\"video_link\" value={video_link} onChange={e => onchange(e)}\r\n                                    />\r\n                                    <FormControl\r\n                                        // placeholder={event && event.status}\r\n                                        className='input_event'\r\n                                        hidden='true'\r\n                                        id=\"status\"\r\n                                        name=\"status\" value={status.toString()}\r\n                                        type=\"textarea\"\r\n                                        fullWidth\r\n                                        onChange={e => onchange(e)}\r\n                                    />\r\n                                    disable event\r\n                                    <Switch\r\n                                        checked={state.checkedA}\r\n\r\n                                        onChange={handleswitch}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    /> enable event\r\n\r\n                                </div></div>\r\n                            <div className='row pt-3'><div className='col-sm-8'></div><div className='col-sm-4'>\r\n                                <Button type='submit' style={{ backgroundColor: \"#f2f3f3\", color: 'black', borderRadius: '0' }} onClick={handleClose}>\r\n                                    update Event\r\n          </Button></div></div>\r\n                        </DialogContent>\r\n\r\n\r\n\r\n                    </form>\r\n                </Dialog>\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className='row pt-2 pb-2'>\r\n                <div className='col-sm-10'></div>\r\n                <div className='col-sm-2 Top__section'> <button onClick={increment}>Next {'>>'} </button> -<button onClick={decrement}>{'<<'} Preview</button>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div className='row pt-5'>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className='col-sm-9'>\r\n                    <div className='row'>\r\n                        <div className='col-sm-4'>  {event && !event.video_link===null ? <ReactTinyLink cardSize=\"large\" showGraphic={true} maxLine={2} minLine={1} url={event.video_link} /> : <div></div>}</div>\r\n                        <div className='col-sm-1'></div>\r\n                        <div className='col-sm-7'>\r\n                            <div className='row'>\r\n                                <div className='col-sm-8'> <h4><b>{event && event.name}</b></h4>\r\n                                    <div className='row'>\r\n                                        <div className='col-sm-2 '>{event && event.location} </div>\r\n\r\n                                        <div className='col-sm-4 '>  {event && event.date} </div></div>\r\n\r\n                                    <div className='row'>\r\n                                        <div className='col-sm-9 pb-3 pt-2'>\r\n                                           <p>{event && event.description}</p>\r\n                                          \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div><div className='col-sm-1'><IoShareSocialOutline />\r\n                                    <div>  <AddBoxIcon onClick={handleClickOpen} /></div>\r\n\r\n                                    <div>\r\n                                        {event && user && user.id === event.user.data.user_id ?\r\n\r\n                                            <UpdateRoundedIcon onClick={handleClickOpen2} />\r\n                                            : <div></div>} </div>\r\n                                    <div>{event && user && user.id === event.user.data.user_id ? <Link to='/dashboard/events'><DeleteOutlineRoundedIcon onClick={e => deleteEvent(match.params.id)} style={{ color: '#212529' }} />\r\n                                    </Link> : <div></div>}</div>\r\n                                </div></div>\r\n\r\n                            <div className='row'><div className='col-sm-6'>participants {event && event.participants.length}\r\n                            </div></div>\r\n\r\n                            <div className=\"bot__section\">\r\n                                <div className='row '>\r\n                                    {event && event.is_subscribed === false ? <div className='col-sm-2 pt-5' id='attend'>\r\n                                        <button onClick={subscribEevent(event.id, 1)}  >Attend</button>\r\n                                    </div> : <div className='col-sm-2 pt-5' id='attend'>\r\n                                            <button disabled={true}>Already subscribed</button>\r\n                                        </div>}\r\n\r\n\r\n\r\n                                    <div className='col-sm-2' id='Invite'>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <Dialog className='invite_form'\r\n                                        open={open}\r\n                                        TransitionComponent={Transition}\r\n                                        keepMounted\r\n                                        onClose={handleClose}\r\n                                        aria-labelledby=\"alert-dialog-slide-title\"\r\n                                        aria-describedby=\"alert-dialog-slide-description\"\r\n                                    >\r\n\r\n                                        <form onSubmit={e => onsubmit(e)}>\r\n                                            <DialogTitle id=\"alert-dialog-slide-title\">{\"invite\"}</DialogTitle>\r\n\r\n                                            <DialogContent>\r\n                                                <div className='row'>\r\n\r\n                                                    <FormControl\r\n                                                        className='input_name'\r\n                                                        placeholder='Name'\r\n                                                        margin='dense'\r\n                                                        type='text'\r\n                                                        value={uid}\r\n\r\n\r\n                                                    /></div>\r\n                                                <div className='row pt-2'>\r\n\r\n                                                    <div className='col-md-7 ' id='user_data'>\r\n\r\n                                                        {friends && friends.map((c, index) =>\r\n                                                        (\r\n                                                            <div className='col-md-6'>\r\n                                                                <form onSubmit={e => onsubmit(e)}>\r\n                                                                    <div className='col-md-12 pb-2 mt-3 friends'>\r\n                                                                        <div className='col-md-2 '><Avatar className='mr-2 pr-1 pb-2' src={c.data.attributes.profile_image} /></div> <div className='col-md-8'> {c.data.attributes.name}</div>\r\n                                                                        <div className='col-md-2'> <AddBoxIcon onClick={e => invite(c.data.user_id, event.id)} /></div>\r\n\r\n                                                                    </div>\r\n                                                                </form>\r\n                                                                <div className='col-md-1'>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                        )}\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                                <div>\r\n\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n\r\n                                            </DialogActions>\r\n                                        </form>\r\n                                    </Dialog>\r\n\r\n\r\n                                    <div className='col-sm-2 pt-5' >\r\n                                        <button id='cancel'>Cancel</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='mt-4 mb-2'><hr /></div>\r\n                        <div className='mt-2'>\r\n                            <h6><b>Similar Events</b></h6>\r\n                            <div className='row '>\r\n                                {/*events && events.map((event) =>\r\n                                (\r\n                                    <Single key={event.id} event={event} />)\r\n                                )*/\r\n                                }\r\n\r\n                                <Carousel activeIndex={index} onSelect={handleSelect} >\r\n                                    {events && events.map((event) =>\r\n                                    (\r\n                                        <Carousel.Item key={event.id} interval={4000}>\r\n                                            <img\r\n                                                className=\"d-block w-100\"\r\n                                                src=\"https://picsum.photos/id/98/200/300\"\r\n                                                alt=\"First slide\"\r\n                                                width=\"500\" height=\"400\"\r\n                                                style={{ borderRadius: '10px' }}\r\n                                            />\r\n                                            <Carousel.Caption>\r\n                                                <h3>{event.name}</h3>\r\n                                                <p>{event.description}</p>\r\n                                                <p>{event.date}</p>\r\n                                            </Carousel.Caption>\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n\r\n\r\n                                </Carousel>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nEventitem.propTypes = {\r\n    events: PropTypes.object.isRequired,\r\n    getevent: PropTypes.func.isRequired,\r\n    deleteEvent: PropTypes.func.isRequired,\r\n    subscribEevent: PropTypes.func.isRequired,\r\n    getfriends: PropTypes.func.isRequired,\r\n    invite: PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    update: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    getevents: PropTypes.func.isRequired,\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n    events: state.events,\r\n    auth: state.auth,\r\n    categories: state.categories,\r\n\r\n})\r\nexport default connect(mapStateToProps, { update, getevent, deleteEvent, subscribEevent, getfriends, invite, getevents })(Eventitem)","F:\\work\\Project\\fishComb_Front\\src\\Reducers\\Profile.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Reducers\\market.js",["275"],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Events.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Reducers\\friends.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Reducers\\Post.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Reducers\\events.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Actions\\profile.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\AddProduct.js",["276","277","278","279","280","281"],"import React from 'react';\r\nimport { Fragment, useState} from 'react';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { addProduct } from '../../../../Actions/Market';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nconst AddProduct = ( { auth: { user }, addProduct ,market: { categories }} ) => {\r\n/****************************/\r\n\r\nconst [formData, setFormData] = useState({\r\n    description: '',\r\n    category_id: '',\r\n    name: '',\r\n    price: '',\r\n    stock: '',\r\n    status:'1',\r\n    image: 'jaw'\r\n})\r\nconst { name, category_id, description, price, stock, status,image } = formData;\r\nconst onchange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\nconst submit = e => {\r\n    e.preventDefault();\r\n    addProduct({\r\n        category_id,\r\n        description,\r\n        name,\r\n        price,\r\n        stock,\r\n        status,\r\n        image\r\n    })\r\n    e.target.reset();\r\n}\r\n/*****************************/    \r\nconst [open1, setOpen1] = React.useState(false);\r\nconst handleClickOpen1 = () => {\r\n    setOpen1(true);\r\n};\r\nconst handleClose1 = () => {\r\n    setOpen1(false);\r\n};\r\nconst [open2, setOpen2] = React.useState(false);\r\nconst handleClose2 = () => {\r\n    setOpen1(false);\r\n};\r\nconst handleOpen2 = () => {\r\n    setOpen1(true);\r\n};\r\n/*********************************/ \r\nconst [open, setOpen] = React.useState(false);\r\nconst handleClickOpen = () => {\r\n    setOpen(true);\r\n};\r\nconst handleClose = () => {\r\n    setOpen(false);\r\n};\r\n/*******************************/  \r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <form  className='addProduct' onSubmit={e => submit(e)}>\r\n                    <DialogContent>\r\n                        <div className='row'>\r\n                            <div className='col-sm-1 mr-2'>\r\n                                <Avatar src={user && user.profile_image}/>\r\n                            </div>\r\n                            <div className='col-sm-10 pt-3'>\r\n                                <div className='row'>\r\n                                    <div className='row'>\r\n                                        <div className='col-sm-12'>\r\n                                            <h6> {user && user.first_name.charAt(0).toUpperCase() + user.first_name.slice(1)}  {user && user.last_name.charAt(0).toUpperCase() + user.last_name.slice(1)}</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                <div className='row'>\r\n                                    <div className='row pt-3'>\r\n                                        <div className='col-sm-12'>\r\n                                            <FormControl\r\n                                                className='input_event'\r\n                                                placeholder=\"Product Name\"\r\n                                                margin=\"dense\"\r\n                                                label=\"Product_name\"\r\n                                                name=\"name\" value={name} onChange={e => onchange(e)}\r\n                                                type=\"text\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                <div className='row pt-3'>\r\n                                    <Select\r\n                                        labelId=\"demo-controlled-open-select-label\"\r\n                                        id=\"demo-controlled-open-select\"\r\n                                        open={open1}\r\n                                        onClose={handleClose2}\r\n                                        onOpen={handleOpen2}\r\n                                        value={category_id}\r\n                                        name=\"category_id\"\r\n                                        onChange={e => onchange(e)}>\r\n                                        {categories && categories.map(c =>\r\n                                        (<MenuItem key={c.id} value={c.id} >{c.name}</MenuItem>)\r\n                                        )}\r\n                                    </Select>\r\n                                <div className='col-6'>\r\n                                    <FormControl\r\n                                        className='input_event'\r\n                                        placeholder=\"Price\"\r\n                                        margin=\"dense\"\r\n                                        name=\"price\" value={price} onChange={e => onchange(e)}\r\n                                        type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                        <div className='row pt-3'>\r\n                            <div className='col-12'>\r\n                                <FormControl\r\n                                    placeholder=\"Stock\"\r\n                                    className='input_event'\r\n                                    margin=\"dense\"\r\n                                    name=\"stock\" value={stock} onChange={e => onchange(e)}\r\n                                    type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row pt-3'>\r\n                            <div className='col-12'>\r\n                                <FormControl\r\n                                    placeholder=\"Description\"\r\n                                    className='input_event'\r\n                                    margin=\"dense\"\r\n                                    id=\"Description\"\r\n                                    as=\"textarea\" aria-label=\"With textarea\"\r\n                                    name=\"description\" value={description} onChange={e => onchange(e)}\r\n                                    type=\"textarea\"/>\r\n                             </div>\r\n                        </div>\r\n                        <div className='row pt-3 pb-2'>\r\n                            <div className='col-4'>\r\n                                <Button  variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                    <span>Upload Image </span>\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-4'>\r\n                            </div>\r\n                            <div className='col-md-4'>\r\n                                <Button type='submit'\r\n                                    style={{ backgroundColor: \"#f2f3f3\", color: 'black', borderRadius: '0' }} \r\n                                    onClick={handleClose}>\r\n                                    Save Product\r\n                                </Button>\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </DialogContent>\r\n</form>\r\n</div>\r\n</Fragment>\r\n)\r\n}\r\nAddProduct.prototype = {\r\n    auth: PropTypes.object.isRequired,\r\n    addProduct : PropTypes.func.isRequired,\r\n    ccategories: PropTypes.object.isRequired,\r\n    market:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    market: state.market,\r\n    addProduct: state.market,\r\n    categories: state.market\r\n})\r\nexport default connect(mapStateToProps , { addProduct })(AddProduct);","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\UpdateProduct.js",["282","283","284","285","286","287","288","289"],"import React from 'react' ;\r\nimport { Fragment ,useState, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { updateProduct } from '../../../../Actions/Market';\r\nconst UpdateProduct = ({ updateProduct , market:{ product, categories }, loading}) => {\r\n/**********************************/\r\nconst [category_id, setCategory_id] = useState('')\r\nconst [formData, setFormData] = useState({\r\n    description: '',\r\n    name: '',\r\n    price: '',\r\n    stock: '',\r\n    status:'',\r\n    image: 'jaw'\r\n})\r\nconst { name,description, price, stock, status, image } = formData;\r\nuseEffect(() => {\r\n    setFormData({\r\n        name: loading || !product.name ? '' : product.name,\r\n        category_id: loading || !product.category_id ? '' : product.category_id,\r\n        description: loading || !product.description ? '' : product.description,\r\n        price: loading || !product.price ? '' : product.price,\r\n        stock: loading || !product.stock ? '' : product.stock,\r\n        status: loading || !product.status ? '' : product.status,\r\n    })\r\n}, [loading])\r\nconst onchange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\nconst submit = e => {\r\n    e.preventDefault();\r\n    updateProduct({ \r\n        description,\r\n        category_id,\r\n        name,\r\n        price,\r\n        stock,\r\n        status,\r\n        image\r\n    },product.id)\r\n    e.target.reset();\r\n}\r\n/*****************************/    \r\nconst [open1, setOpen1] = React.useState(false);\r\nconst handleClickOpen1 = () => {\r\n    setOpen1(true);\r\n};\r\nconst handleClose1 = () => {\r\n    setOpen1(false);\r\n};\r\nconst [open2, setOpen2] = React.useState(false);\r\nconst handleClose2 = () => {\r\n    setOpen1(false);\r\n};\r\nconst handleOpen2 = () => {\r\n    setOpen1(true);\r\n};\r\n/*********************************/ \r\nconst [open, setOpen] = React.useState(false);\r\nconst handleClickOpen = () => {\r\n    setOpen(true);\r\n};\r\nconst handleClose = () => {\r\n    setOpen(false);\r\n};\r\n/**********************************/\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                <form  className='addProduct' onSubmit={e => submit(e)}>\r\n                    <DialogContent>\r\n                        <div className='row'>\r\n                            <div className='col-sm-1 mr-2'>\r\n                                \r\n                            </div>\r\n                            <div className='col-sm-10 pt-3'>\r\n                                <div className='row'>\r\n                                    <div className='row'>\r\n                                        <div className='col-sm-12'>\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                <div className='row'>\r\n                                    <div className='row pt-3'>\r\n                                        <div className='col-sm-12'>\r\n                                            <FormControl\r\n                                                className='input_event'\r\n                                                placeholder=\"Product Name\"\r\n                                                label=\"Product_name\"\r\n                                                name=\"name\" value={name} onChange={e => onchange(e)}\r\n                                                type=\"text\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                <div className='row pt-3'>\r\n                                   <div className='col-sm-6'>\r\n                                    <Select\r\n                                            labelId=\"demo-controlled-open-select-label\"\r\n                                            id=\"demo-controlled-open-select\"\r\n                                            open={open1}\r\n                                            onClose={handleClose2}\r\n                                            onOpen={handleOpen2}\r\n                                            value={category_id}\r\n                                            name=\"category_id\"\r\n                                            onChange={e => setCategory_id(e.target.value)}>\r\n                                            {categories && categories.map(c =>\r\n                                            (<MenuItem key={c.id} value={c.id} >{c.name}</MenuItem>)\r\n                                            )}\r\n                                        </Select>\r\n                                    </div> \r\n                                <div className='col-6'>\r\n                                    <FormControl\r\n                                        className='input_event'\r\n                                        placeholder=\"Price\"\r\n                                        margin=\"dense\"\r\n                                        name=\"price\" value={price} onChange={e => onchange(e)}\r\n                                        type=\"text\"/>\r\n                                </div>\r\n                            </div>\r\n                        <div className='row pt-3'>\r\n                            <div className='col-12'>\r\n                                <FormControl\r\n                                    placeholder=\"Stock\"\r\n                                    className='input_event'\r\n                                    margin=\"dense\"\r\n                                    name=\"stock\" value={stock} onChange={e => onchange(e)}\r\n                                    type=\"text\"/>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <FormControl\r\n                                    placeholder=\"1 or 0 \"\r\n                                    className='input_event'\r\n                                    margin=\"dense\"\r\n                                    name=\"status\" value={status} onChange={e => onchange(e)}\r\n                                    type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row pt-3'>\r\n                            <div className='col-12'>\r\n                                <FormControl\r\n                                    placeholder=\"Description\"\r\n                                    className='input_event'\r\n                                    margin=\"dense\"\r\n                                    id=\"Description\"\r\n                                    as=\"textarea\" aria-label=\"With textarea\"\r\n                                    name=\"description\" value={description} onChange={e => onchange(e)}\r\n                                    type=\"textarea\"/>\r\n                             </div>\r\n                        </div>\r\n                        <div className='row pt-3 pb-2'>\r\n                            <div className='col-4'>\r\n                                <Button  variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                    <span>Upload Image </span>\r\n                                </Button>\r\n                            </div>\r\n                            <div className='col-4'>\r\n                            </div>\r\n                            <div className='col-md-4'>\r\n                                <Button type='submit'\r\n                                    style={{ backgroundColor: \"#f2f3f3\", color: 'black', borderRadius: '0' }} \r\n                                    onClick={handleClose}>\r\n                                    Update Product \r\n                                </Button>\r\n                            </div>  \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </DialogContent>\r\n</form>\r\n</div>\r\n</Fragment>\r\n)\r\n}\r\nUpdateProduct.prototype= {\r\n    auth: PropTypes.object.isRequired,\r\n    updateProduct : PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    market:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    events: state.events,\r\n    market: state.market,\r\n    updateProduct: state.market,\r\n    categories: state.market\r\n})\r\nexport default connect(mapStateToProps, { updateProduct }) (UpdateProduct) ;","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\SingleProduct.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\navbar\\nav.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\YourAccount.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Search\\Search.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\content\\Content.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\content\\ContentUser.js",[],"F:\\work\\Project\\fishComb_Front\\src\\Actions\\Post.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Post\\Post.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\publications\\Publication.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\single.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Order.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Webinars.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Network.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Edit.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\publications\\SingleComm.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Post\\UpdatePost.js",["290"],"import React from 'react';\r\nimport { Fragment ,useState ,useEffect } from 'react';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { updatePost ,getPosts } from '../../../../Actions/Post';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UpdatePost  = ({ auth: { user }, getPosts, updatePost ,loading, history, Post:{ post }  }) => {\r\n    const [formdata, setFormData] = useState({\r\n       // link: '',\r\n        description: '',\r\n      });\r\n      const {\r\n     //  link,\r\n       description\r\n      } = formdata;\r\n      const onchange = e => setFormData({ ...formdata, [e.target.name]: e.target.value });\r\n      const onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log('aaaaa');\r\n        updatePost(formdata ,post.id);\r\n      }\r\n      useEffect(() => {\r\n        setFormData({\r\n            description: loading || !post.description ? '' : post.description,\r\n        })\r\n      }, [loading])\r\n    \r\n    return(\r\n        <Fragment>\r\n            \r\n                <div className=\"pub px-0 \">\r\n                        <div className=\" \">   \r\n                        <Avatar src={user && user.profile_image} />\r\n                        <div className='pub__top'>\r\n                        <form  onSubmit={(e) => onSubmit(e)} >\r\n                            <input id=\"description\" placeholder={post && post.description}  autoComplete=\"description\" className='pub__input' name=\"description\" value={description} onChange={e => onchange(e)}  />\r\n                            <input type=\"text\" id=\"linkurl\" />\r\n                            <button  type=\"submit1\" >submit</button>\r\n                        </form>\r\n                        </div>  \r\n                </div>\r\n                </div>\r\n               \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nUpdatePost.prototype = {\r\n    auth: PropTypes.object.isRequired,\r\n    Post: PropTypes.object.isRequired,\r\n    getPosts: PropTypes.func.isRequired,\r\n    updatePost: PropTypes.func.isRequired,\r\n  };\r\n  const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    Post: state.Post,\r\n  })\r\n  export default connect(mapStateToProps, { getPosts,updatePost })(UpdatePost);","F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Aboute\\Aboute.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\Cart.js",[],"F:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\CartProduct.js",[],{"ruleId":"291","severity":1,"message":"292","line":15,"column":10,"nodeType":"293","messageId":"294","endLine":15,"endColumn":26},{"ruleId":"291","severity":1,"message":"295","line":16,"column":10,"nodeType":"293","messageId":"294","endLine":16,"endColumn":23},{"ruleId":"291","severity":1,"message":"296","line":16,"column":24,"nodeType":"293","messageId":"294","endLine":16,"endColumn":37},{"ruleId":"291","severity":1,"message":"297","line":20,"column":10,"nodeType":"293","messageId":"294","endLine":20,"endColumn":23},{"ruleId":"291","severity":1,"message":"298","line":2,"column":36,"nodeType":"293","messageId":"294","endLine":2,"endColumn":51},{"ruleId":"291","severity":1,"message":"299","line":1,"column":17,"nodeType":"293","messageId":"294","endLine":1,"endColumn":26},{"ruleId":"291","severity":1,"message":"300","line":38,"column":14,"nodeType":"293","messageId":"294","endLine":38,"endColumn":22},{"ruleId":"291","severity":1,"message":"301","line":39,"column":13,"nodeType":"293","messageId":"294","endLine":39,"endColumn":24},{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"291","severity":1,"message":"306","line":1,"column":28,"nodeType":"293","messageId":"294","endLine":1,"endColumn":36},{"ruleId":"291","severity":1,"message":"297","line":9,"column":32,"nodeType":"293","messageId":"294","endLine":9,"endColumn":45},{"ruleId":"291","severity":1,"message":"307","line":20,"column":8,"nodeType":"293","messageId":"294","endLine":20,"endColumn":13},{"ruleId":"291","severity":1,"message":"308","line":20,"column":15,"nodeType":"293","messageId":"294","endLine":20,"endColumn":23},{"ruleId":"291","severity":1,"message":"309","line":21,"column":7,"nodeType":"293","messageId":"294","endLine":21,"endColumn":19},{"ruleId":"291","severity":1,"message":"310","line":24,"column":7,"nodeType":"293","messageId":"294","endLine":24,"endColumn":18},{"ruleId":"291","severity":1,"message":"311","line":46,"column":7,"nodeType":"293","messageId":"294","endLine":46,"endColumn":19},{"ruleId":"291","severity":1,"message":"312","line":1,"column":8,"nodeType":"293","messageId":"294","endLine":1,"endColumn":14},{"ruleId":"313","severity":1,"message":"314","line":44,"column":8,"nodeType":"315","endLine":44,"endColumn":35,"suggestions":"316"},{"ruleId":"313","severity":1,"message":"317","line":44,"column":9,"nodeType":"318","endLine":44,"endColumn":34},{"ruleId":"313","severity":1,"message":"319","line":49,"column":8,"nodeType":"315","endLine":49,"endColumn":39,"suggestions":"320"},{"ruleId":"313","severity":1,"message":"317","line":49,"column":9,"nodeType":"318","endLine":49,"endColumn":38},{"ruleId":"291","severity":1,"message":"321","line":57,"column":12,"nodeType":"293","messageId":"294","endLine":57,"endColumn":17},{"ruleId":"291","severity":1,"message":"310","line":65,"column":11,"nodeType":"293","messageId":"294","endLine":65,"endColumn":22},{"ruleId":"291","severity":1,"message":"322","line":93,"column":11,"nodeType":"293","messageId":"294","endLine":93,"endColumn":23},{"ruleId":"291","severity":1,"message":"323","line":97,"column":11,"nodeType":"293","messageId":"294","endLine":97,"endColumn":22},{"ruleId":"291","severity":1,"message":"324","line":100,"column":21,"nodeType":"293","messageId":"294","endLine":100,"endColumn":28},{"ruleId":"291","severity":1,"message":"325","line":107,"column":17,"nodeType":"293","messageId":"294","endLine":107,"endColumn":24},{"ruleId":"291","severity":1,"message":"326","line":119,"column":48,"nodeType":"293","messageId":"294","endLine":119,"endColumn":53},{"ruleId":"313","severity":1,"message":"327","line":131,"column":8,"nodeType":"315","endLine":131,"endColumn":17,"suggestions":"328"},{"ruleId":"291","severity":1,"message":"329","line":156,"column":12,"nodeType":"293","messageId":"294","endLine":156,"endColumn":19},{"ruleId":"291","severity":1,"message":"330","line":156,"column":21,"nodeType":"293","messageId":"294","endLine":156,"endColumn":31},{"ruleId":"331","severity":1,"message":"332","line":10,"column":1,"nodeType":"333","endLine":67,"endColumn":2},{"ruleId":"291","severity":1,"message":"334","line":41,"column":7,"nodeType":"293","messageId":"294","endLine":41,"endColumn":23},{"ruleId":"291","severity":1,"message":"322","line":44,"column":7,"nodeType":"293","messageId":"294","endLine":44,"endColumn":19},{"ruleId":"291","severity":1,"message":"307","line":47,"column":8,"nodeType":"293","messageId":"294","endLine":47,"endColumn":13},{"ruleId":"291","severity":1,"message":"308","line":47,"column":15,"nodeType":"293","messageId":"294","endLine":47,"endColumn":23},{"ruleId":"291","severity":1,"message":"335","line":55,"column":8,"nodeType":"293","messageId":"294","endLine":55,"endColumn":12},{"ruleId":"291","severity":1,"message":"336","line":56,"column":7,"nodeType":"293","messageId":"294","endLine":56,"endColumn":22},{"ruleId":"291","severity":1,"message":"337","line":10,"column":10,"nodeType":"293","messageId":"294","endLine":10,"endColumn":16},{"ruleId":"313","severity":1,"message":"338","line":33,"column":4,"nodeType":"315","endLine":33,"endColumn":13,"suggestions":"339"},{"ruleId":"291","severity":1,"message":"334","line":50,"column":7,"nodeType":"293","messageId":"294","endLine":50,"endColumn":23},{"ruleId":"291","severity":1,"message":"322","line":53,"column":7,"nodeType":"293","messageId":"294","endLine":53,"endColumn":19},{"ruleId":"291","severity":1,"message":"307","line":56,"column":8,"nodeType":"293","messageId":"294","endLine":56,"endColumn":13},{"ruleId":"291","severity":1,"message":"308","line":56,"column":15,"nodeType":"293","messageId":"294","endLine":56,"endColumn":23},{"ruleId":"291","severity":1,"message":"335","line":64,"column":8,"nodeType":"293","messageId":"294","endLine":64,"endColumn":12},{"ruleId":"291","severity":1,"message":"336","line":65,"column":7,"nodeType":"293","messageId":"294","endLine":65,"endColumn":22},{"ruleId":"313","severity":1,"message":"340","line":27,"column":10,"nodeType":"315","endLine":27,"endColumn":19,"suggestions":"341"},"no-unused-vars","'getMyinvitations' is defined but never used.","Identifier","unusedVar","'getcategories' is defined but never used.","'Myinvitations' is defined but never used.","'getCategories' is defined but never used.","'GET_MY_PRODUCTS' is defined but never used.","'useEffect' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","no-native-reassign",["342"],"no-negated-in-lhs",["343"],"'useState' is defined but never used.","'open2' is assigned a value but never used.","'setOpen2' is assigned a value but never used.","'handleClose2' is assigned a value but never used.","'handleOpen2' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Single' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'event.next_event' and 'getevent'. Either include them or remove the dependency array. If 'getevent' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["344"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useCallback has missing dependencies: 'event.previous_event' and 'getevent'. Either include them or remove the dependency array. If 'getevent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["345"],"'open1' is assigned a value but never used.","'handleClose1' is assigned a value but never used.","'handleOpen1' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setText' is assigned a value but never used.","'cover' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'event.cover', 'event.date', 'event.description', 'event.location', 'event.name', 'event.status', and 'event.video_link'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'event.location', you can also switch to useReducer instead of useState and read 'event.location' in the reducer.",["346"],"'disable' is assigned a value but never used.","'setdisable' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'handleClickOpen1' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'Avatar' is defined but never used.","React Hook useEffect has missing dependencies: 'product.category_id', 'product.description', 'product.name', 'product.price', 'product.status', and 'product.stock'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'product.name', you can also switch to useReducer instead of useState and read 'product.name' in the reducer.",["347"],"React Hook useEffect has a missing dependency: 'post.description'. Either include it or remove the dependency array. If 'setFormData' needs the current value of 'post.description', you can also switch to useReducer instead of useState and read 'post.description' in the reducer.",["348"],"no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},"Update the dependencies array to be: [event.next_event, getevent]",{"range":"359","text":"360"},"Update the dependencies array to be: [event.previous_event, getevent]",{"range":"361","text":"362"},"Update the dependencies array to be: [event.cover, event.date, event.description, event.location, event.name, event.status, event.video_link, loading]",{"range":"363","text":"364"},"Update the dependencies array to be: [loading, product.category_id, product.description, product.name, product.price, product.status, product.stock]",{"range":"365","text":"366"},"Update the dependencies array to be: [loading, post.description]",{"range":"367","text":"368"},[1780,1807],"[event.next_event, getevent]",[1904,1935],"[event.previous_event, getevent]",[4032,4041],"[event.cover, event.date, event.description, event.location, event.name, event.status, event.video_link, loading]",[1401,1410],"[loading, product.category_id, product.description, product.name, product.price, product.status, product.stock]",[936,945],"[loading, post.description]"]