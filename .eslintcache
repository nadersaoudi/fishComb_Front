[{"D:\\work\\Project\\fishComb_Front\\src\\index.js":"1","D:\\work\\Project\\fishComb_Front\\src\\App.js":"2","D:\\work\\Project\\fishComb_Front\\src\\store.js":"3","D:\\work\\Project\\fishComb_Front\\src\\ProtectedRoute.js":"4","D:\\work\\Project\\fishComb_Front\\src\\Actions\\auth.js":"5","D:\\work\\Project\\fishComb_Front\\src\\Actions\\Friends.js":"6","D:\\work\\Project\\fishComb_Front\\src\\Actions\\events.js":"7","D:\\work\\Project\\fishComb_Front\\src\\Actions\\Market.js":"8","D:\\work\\Project\\fishComb_Front\\src\\components\\auth\\Reset\\Reset.js":"9","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Dashboard\\Dashboard.js":"10","D:\\work\\Project\\fishComb_Front\\src\\components\\auth\\login\\Login.js":"11","D:\\work\\Project\\fishComb_Front\\src\\components\\auth\\Register\\Register.js":"12","D:\\work\\Project\\fishComb_Front\\src\\components\\auth\\HomePage\\HomePage.js":"13","D:\\work\\Project\\fishComb_Front\\src\\Actions\\types.js":"14","D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Footer\\Footer.js":"15","D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Container\\Container.js":"16","D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Menu\\Menu.js":"17","D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Header\\Header.js":"18","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\index.js":"19","D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Header\\Notification.js":"20","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\Profile.js":"21","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\Userprofile.js":"22","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Market.js":"23","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Invited.js":"24","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Gallery.js":"25","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Attended.js":"26","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\Cart.js":"27","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Eventitem.js":"28","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\Board.js":"29","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\watch\\Watch.js":"30","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Newfeed.js":"31","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Events.js":"32","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Search\\Searchitem.js":"33","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\messages\\Messages.js":"34","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\ProductItem.js":"35","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\Profile.js":"36","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\cart.js":"37","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\auth.red.js":"38","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\Board.js":"39","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\Post.js":"40","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\Replies.js":"41","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\events.js":"42","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\friends.js":"43","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\market.js":"44","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\Replies.js":"45","D:\\work\\Project\\fishComb_Front\\src\\Actions\\profile.js":"46","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\SingleProduct.js":"47","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\UpdateProduct.js":"48","D:\\work\\Project\\fishComb_Front\\src\\Actions\\cart.js":"49","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Search\\Search.js":"50","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\navbar\\nav.js":"51","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\content\\Content.js":"52","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\content\\ContentUser.js":"53","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\single.js":"54","D:\\work\\Project\\fishComb_Front\\src\\Actions\\Post.js":"55","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\publications\\Publication.js":"56","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Post\\Post.js":"57","D:\\work\\Project\\fishComb_Front\\src\\Actions\\Replies.js":"58","D:\\work\\Project\\fishComb_Front\\src\\Actions\\Board.js":"59","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\SingleReply.js":"60","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\SingleThread.js":"61","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Edit.js":"62","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Webinars.js":"63","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Order.js":"64","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Network.js":"65","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Aboute\\Aboute.js":"66","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\publications\\SingleComm.js":"67","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\FeaturedDialog.js":"68","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\Steppers.js":"69","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\CartProduct.js":"70","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\YourAccount.js":"71","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\tileData.js":"72","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\Checkout.js":"73","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\StripePay.js":"74","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\UpdateThread.js":"75"},{"size":646,"mtime":1611020275957,"results":"76","hashOfConfig":"77"},{"size":1763,"mtime":1611522004815,"results":"78","hashOfConfig":"77"},{"size":387,"mtime":1611020275958,"results":"79","hashOfConfig":"77"},{"size":545,"mtime":1611094856107,"results":"80","hashOfConfig":"77"},{"size":3764,"mtime":1611791916424,"results":"81","hashOfConfig":"77"},{"size":2483,"mtime":1611255000805,"results":"82","hashOfConfig":"77"},{"size":9857,"mtime":1612389748737,"results":"83","hashOfConfig":"77"},{"size":4831,"mtime":1612917162564,"results":"84","hashOfConfig":"77"},{"size":2173,"mtime":1611796330246,"results":"85","hashOfConfig":"77"},{"size":1362,"mtime":1611351056768,"results":"86","hashOfConfig":"77"},{"size":3142,"mtime":1612220125240,"results":"87","hashOfConfig":"77"},{"size":40769,"mtime":1611350380909,"results":"88","hashOfConfig":"77"},{"size":952,"mtime":1611870276985,"results":"89","hashOfConfig":"77"},{"size":4689,"mtime":1612913936088,"results":"90","hashOfConfig":"77"},{"size":3096,"mtime":1611020275914,"results":"91","hashOfConfig":"77"},{"size":3065,"mtime":1612735310466,"results":"92","hashOfConfig":"77"},{"size":28339,"mtime":1612963771895,"results":"93","hashOfConfig":"77"},{"size":29078,"mtime":1612990044778,"results":"94","hashOfConfig":"77"},{"size":432,"mtime":1612795786448,"results":"95","hashOfConfig":"77"},{"size":3061,"mtime":1612988210298,"results":"96","hashOfConfig":"77"},{"size":5226,"mtime":1612736681764,"results":"97","hashOfConfig":"77"},{"size":2197,"mtime":1612819244862,"results":"98","hashOfConfig":"77"},{"size":25073,"mtime":1612988507811,"results":"99","hashOfConfig":"77"},{"size":3494,"mtime":1612988032620,"results":"100","hashOfConfig":"77"},{"size":1993,"mtime":1612049385130,"results":"101","hashOfConfig":"77"},{"size":2994,"mtime":1612047544873,"results":"102","hashOfConfig":"77"},{"size":3036,"mtime":1612218022999,"results":"103","hashOfConfig":"77"},{"size":32783,"mtime":1612964394983,"results":"104","hashOfConfig":"77"},{"size":10653,"mtime":1612967024821,"results":"105","hashOfConfig":"77"},{"size":3524,"mtime":1611020275956,"results":"106","hashOfConfig":"77"},{"size":3129,"mtime":1612882879701,"results":"107","hashOfConfig":"77"},{"size":45392,"mtime":1612951412512,"results":"108","hashOfConfig":"77"},{"size":1352,"mtime":1611969657151,"results":"109","hashOfConfig":"77"},{"size":4319,"mtime":1612555974991,"results":"110","hashOfConfig":"77"},{"size":10590,"mtime":1612809442959,"results":"111","hashOfConfig":"77"},{"size":715,"mtime":1611435360427,"results":"112","hashOfConfig":"77"},{"size":1641,"mtime":1612917307952,"results":"113","hashOfConfig":"77"},{"size":1198,"mtime":1611094997488,"results":"114","hashOfConfig":"77"},{"size":1397,"mtime":1612917076629,"results":"115","hashOfConfig":"77"},{"size":2950,"mtime":1612043490484,"results":"116","hashOfConfig":"77"},{"size":970,"mtime":1612817158390,"results":"117","hashOfConfig":"77"},{"size":2585,"mtime":1611953147457,"results":"118","hashOfConfig":"77"},{"size":1265,"mtime":1611355215811,"results":"119","hashOfConfig":"77"},{"size":1829,"mtime":1611695015132,"results":"120","hashOfConfig":"77"},{"size":5014,"mtime":1612950148585,"results":"121","hashOfConfig":"77"},{"size":2579,"mtime":1612819436876,"results":"122","hashOfConfig":"77"},{"size":1399,"mtime":1612264341372,"results":"123","hashOfConfig":"77"},{"size":16283,"mtime":1612973754705,"results":"124","hashOfConfig":"77"},{"size":5483,"mtime":1612385272261,"results":"125","hashOfConfig":"77"},{"size":3341,"mtime":1612817871251,"results":"126","hashOfConfig":"77"},{"size":957,"mtime":1611968935137,"results":"127","hashOfConfig":"77"},{"size":1012,"mtime":1611020275949,"results":"128","hashOfConfig":"77"},{"size":1869,"mtime":1612819163525,"results":"129","hashOfConfig":"77"},{"size":984,"mtime":1612122660758,"results":"130","hashOfConfig":"77"},{"size":6511,"mtime":1612122815619,"results":"131","hashOfConfig":"77"},{"size":17921,"mtime":1612985351942,"results":"132","hashOfConfig":"77"},{"size":8271,"mtime":1611790096916,"results":"133","hashOfConfig":"77"},{"size":2650,"mtime":1612817446753,"results":"134","hashOfConfig":"77"},{"size":3772,"mtime":1612990132942,"results":"135","hashOfConfig":"77"},{"size":4762,"mtime":1612880808331,"results":"136","hashOfConfig":"77"},{"size":11811,"mtime":1612966541171,"results":"137","hashOfConfig":"77"},{"size":3996,"mtime":1611968819299,"results":"138","hashOfConfig":"77"},{"size":189,"mtime":1611020275953,"results":"139","hashOfConfig":"77"},{"size":1355,"mtime":1612385272287,"results":"140","hashOfConfig":"77"},{"size":1451,"mtime":1611020275952,"results":"141","hashOfConfig":"77"},{"size":2238,"mtime":1611968783897,"results":"142","hashOfConfig":"77"},{"size":3196,"mtime":1612814472839,"results":"143","hashOfConfig":"77"},{"size":3768,"mtime":1612473544177,"results":"144","hashOfConfig":"77"},{"size":4476,"mtime":1612047365904,"results":"145","hashOfConfig":"77"},{"size":3583,"mtime":1612812976977,"results":"146","hashOfConfig":"77"},{"size":2802,"mtime":1611245343730,"results":"147","hashOfConfig":"77"},{"size":1349,"mtime":1611680703169,"results":"148","hashOfConfig":"77"},{"size":5788,"mtime":1612047238182,"results":"149","hashOfConfig":"77"},{"size":1256,"mtime":1612385272278,"results":"150","hashOfConfig":"77"},{"size":9056,"mtime":1612916961750,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"1ko0wdw",{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"154"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"154"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"154"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"154"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"154"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"154"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"154"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"154"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"154"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"154"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"154"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"154"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"154"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"154"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"154"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"154"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"154"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"154"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\work\\Project\\fishComb_Front\\src\\index.js",[],["327","328"],"D:\\work\\Project\\fishComb_Front\\src\\App.js",["329","330","331","332"],"import React , { useEffect } from 'react'\r\nimport './App.css';\r\nimport Dashboard from './components/pages/Dashboard/Dashboard'\r\nimport Login  from './components/auth/login/Login';\r\nimport Reset  from './components/auth/Reset/Reset';\r\nimport Register from './components/auth/Register/Register';\r\nimport HomePage from './components/auth/HomePage/HomePage';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,HashRouter\r\n} from \"react-router-dom\";\r\nimport store from \"./store\";\r\nimport { loadUser  } from \"./Actions/auth\";\r\nimport { getMyinvitations } from './Actions/Friends'; \r\nimport { getcategories,Myinvitations } from './Actions/events'; \r\nimport { Provider } from 'react-redux';\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport  Cookies from 'js-cookie';\r\nimport { getCategories } from './Actions/Market';\r\n\r\n\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>; \r\n\r\nconst App = () => {\r\n  if (Cookies.user) {\r\n    ProtectedRoute(Cookies.user);\r\n  }\r\n  useEffect(() => { \r\n    store.dispatch(loadUser());\r\n  }, []);\r\n  \r\n \r\n  return (\r\n    \r\n    <Provider store={store}>\r\n    <HashRouter>\r\n    <React.Suspense fallback={loading()}>\r\n    <Switch>\r\n    <Route path=\"/home\">\r\n        <HomePage />\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n      <Route path=\"/reset\">\r\n          <Reset />\r\n        </Route>\r\n      <ProtectedRoute  path=\"/dashboard\">\r\n        <Dashboard />\r\n      </ProtectedRoute>\r\n      <Route exact path=\"*\">\r\n        <Redirect exact from=\"/\" to=\"/dashboard/newsfeed\" />\r\n      </Route>\r\n    </Switch>\r\n    </React.Suspense>\r\n    </HashRouter>\r\n    </Provider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\work\\Project\\fishComb_Front\\src\\store.js",[],"D:\\work\\Project\\fishComb_Front\\src\\ProtectedRoute.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Actions\\auth.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Actions\\Friends.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Actions\\events.js",["333"],"import { ADD_EVENT, EVENT_ERROR ,GET_EVENTS,GET_EVENT, GET_CATEGORIES, DELETE_EVENT,FILTER_EVENT, GET_FRIENDS, INVITE_FRIENDS,UPDATE_EVENT, SEARCH_EVENT,GET_INV1, ACCEPT_EVENT,ATTENDED, SUBSCRIBE} from './types'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie';\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n//Add event\r\nexport const addEvent = file => async dispatch => {\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + Cookies.get('user'),\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        try {\r\n\r\n            const res = await axios.post(`/api/events`,file, config)\r\n           \r\n            dispatch({\r\n                type: ADD_EVENT,\r\n                payload: res.data.data,\r\n            })\r\n            toast.success('Event added');\r\n        } catch (error) {\r\n            toast.error('Error happened when adding event');\r\n            dispatch({\r\n                type: EVENT_ERROR,\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n//get Events\r\nexport const getevents = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.get('/api/events', config)\r\n        \r\n        dispatch({\r\n            type: GET_EVENTS,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching events');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n//show single event\r\nexport const getevent = (eventID) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.get(`/api/events/${eventID}`, config)\r\n        \r\n        dispatch({\r\n            type: GET_EVENT,\r\n            payload: res.data.data\r\n        })\r\n    } catch (error) {\r\n        \r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n///get categories\r\nexport const getcategories = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/categories`,{}, config)\r\n       \r\n        dispatch({\r\n            type: GET_CATEGORIES,\r\n            payload: res.data.data\r\n        })\r\n    } catch (error) {\r\n       \r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n//delete event\r\n//show single event\r\nexport const deleteEvent = (eventID) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    if (window.confirm('Are you sure? this can not be undone')) {\r\n    try {\r\n        await axios.delete(`/api/events/${eventID}`, config)\r\n        \r\n        dispatch({\r\n            type: DELETE_EVENT,\r\n            payload:parseInt(eventID)\r\n        })\r\n        toast.success('delete success')\r\n    } catch (error) {\r\n        toast.error('delete error');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n    }\r\n}\r\n//127.0.0.1:8000/api/event/filter?sort[by]=name&sort[order]=asc\r\nexport const sortEvents = ({location1,asc}) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        JSON.stringify({location1,asc})\r\n        const res = await axios.get(`api/event/filter?sort[by]=${location1}&sort[order]=${asc}`,config)\r\n       console.log(res);\r\n        dispatch({\r\n            type: FILTER_EVENT,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n///api/events/myevents\r\nexport const myevents = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/myevents`,{}, config)\r\n       \r\n        dispatch({\r\n            type: GET_EVENTS,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\nexport const subscribEevent = (event_id,status) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n      await axios.post(`api/events/subscribe`,{event_id,status}, config)\r\n       /* dispatch({\r\n            type:SUBSCRIBE,\r\n            payload:res.data\r\n        })*/\r\n        \r\n        toast.info('subscribe success')\r\n        } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n//invite \r\nexport const invite = (user_id,event_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n      \r\n        const res = await axios.post(`api/events/invite`,{user_id,event_id}, config)\r\n      \r\n        dispatch({\r\n            type: INVITE_FRIENDS,\r\n            payload: res.data\r\n        })\r\n      \r\n        toast.error(res.data.status);\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\nexport const getfriends = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/user/friends`,{}, config) \r\n        dispatch({\r\n            type: GET_FRIENDS,\r\n            payload: res.data.users\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n//update\r\nexport const update = (file,event_id) => async dispatch => {\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + Cookies.get('user'),\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n        try {\r\n\r\n            const res = await axios.post(`/api/events/update/${event_id}`, file , config)\r\n           \r\n            dispatch({\r\n                type: UPDATE_EVENT,\r\n                payload: res.data.data,\r\n            })\r\n            toast.success('Event updated');\r\n        } catch (error) {\r\n            toast.error('Error happened when updating event');\r\n            dispatch({\r\n                type: EVENT_ERROR,\r\n            });\r\n        }\r\n    }\r\n//search\r\nexport const search = (filter,value) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/search`,{filter,value}, config) \r\n        dispatch({\r\n            type: SEARCH_EVENT,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n}\r\n///api/events/invitations\r\nexport const Myinvitations = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/invitations`,{}, config) \r\n       // console.log(res.data)\r\n        dispatch({\r\n            type: GET_INV1,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n       // toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n///invite/accept\r\nexport const acceptinv = (event_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`api/events/invite/accept`,{event_id}, config) \r\n        console.log(res.data)\r\n        dispatch({\r\n        type: ACCEPT_EVENT,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n       // toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}\r\n///api/event/attending\r\nexport const optedevent = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.get(`api/event/attending`, config) \r\n        console.log(res.data)\r\n        dispatch({\r\n        type: ATTENDED,\r\n        payload: res.data\r\n        })\r\n    } catch (error) {\r\n       // toast.error('Error happened when fetching event');\r\n        dispatch({\r\n            type: EVENT_ERROR,\r\n        });\r\n    }\r\n\r\n}","D:\\work\\Project\\fishComb_Front\\src\\Actions\\Market.js",["334"],"import axios from 'axios';\r\nimport { GET_MARKETS, ADD_PRODUCT, GET_MY_PRODUCTS, \r\n    GET_PRODUCT, UPDATE_PRODUCT, DELETE_PRODUCT, MARKET_CATERROR,\r\n     GATEGORIES_MARKET, SEARCH_PRODUCT, PRODUCT_ERROR, SEARCH_PRODUCT_ERROR,DELETE_PRODUCT_ERROR,UPDATE_PRODUCT_ERROR} from './types';\r\nimport Cookies from 'js-cookie';\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n//Get Products\r\nexport const getMarket = () => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.get(`/api/marketplace`,config)\r\n        console.log(res);\r\n        dispatch({\r\n            type:GET_MARKETS,\r\n            payload: res.data\r\n        })\r\n    }catch{\r\n        \r\n    }\r\n}\r\n//Add Product\r\nexport const addProduct = file => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/marketplace`,file,config)\r\n        console.log(res);\r\n        dispatch({\r\n            type: ADD_PRODUCT,\r\n            payload: res.data.data\r\n        })\r\n        toast.info('Product Added');\r\n    } catch (error) {\r\n        toast.error('Error happened when adding product');\r\n        dispatch({\r\n            type: PRODUCT_ERROR,\r\n        });\r\n    }\r\n}\r\n//Get Product\r\nexport const getProduct = (productID) => async dispatch => {\r\n    const config ={\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.get(`/api/marketplace/product/${productID}`, config)\r\n        dispatch({\r\n            type:GET_PRODUCT,\r\n            payload: res.data.data\r\n        })\r\n    }catch{\r\n\r\n    }\r\n}\r\n\r\n//Update Product \r\nexport const updateProduct = (formdata, productID) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/marketplace/product/${productID}`,formdata,config)\r\n        dispatch({\r\n            type: UPDATE_PRODUCT,\r\n            payload: res.data.data\r\n        })\r\n        toast.info('Product Updated');\r\n    }catch{\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_ERROR,\r\n        })\r\n        toast.error('Error Updated');\r\n    }\r\n}\r\n//My Product\r\nexport const myProduct = () => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/marketplace/my_products`,{},config)\r\n        dispatch({\r\n            type: GET_MARKETS,\r\n            payload: res.data\r\n        })\r\n    }catch{\r\n    }\r\n}\r\n//Delete Product \r\nexport const deleteProduct = (productID) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n         await axios.delete(`/api/marketplace/product/${productID}` ,config)\r\n         dispatch ({\r\n             type: DELETE_PRODUCT,\r\n             payload: productID\r\n         })\r\n         toast.info('Product Delete');\r\n    }catch {\r\n        dispatch ({\r\n            type: DELETE_PRODUCT_ERROR,\r\n        })\r\n        toast.error('Error Delete');\r\n    }\r\n}\r\n//Categories Market\r\nexport const getCategories = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/marketplace/categories`,{}, config)\r\n        dispatch({\r\n            type: GATEGORIES_MARKET,\r\n            payload: res.data.data\r\n        })\r\n    } catch (error) {\r\n       \r\n        dispatch({\r\n            type: MARKET_CATERROR,\r\n        });\r\n    }\r\n}\r\n//Search Product\r\nexport const search = (filter,value) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/marketplace/search`,{filter,value},config)\r\n        dispatch({\r\n            type: SEARCH_PRODUCT,\r\n            payload:res.data\r\n        })\r\n    }catch{\r\n        toast.error('Error happened when fetching Product');\r\n        dispatch({\r\n            type: SEARCH_PRODUCT_ERROR,\r\n        })\r\n       \r\n    }\r\n}\r\n","D:\\work\\Project\\fishComb_Front\\src\\components\\auth\\Reset\\Reset.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Dashboard\\Dashboard.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\auth\\login\\Login.js",["335"],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport { log } from \"../../../Actions/auth\";\r\nimport Footer from \"../../layout/Footer/Footer\"\r\nimport {\r\n  NavLink\r\n} from \"react-router-dom\";\r\n\r\nconst Login = ({ log, isAuthenticated }) => {\r\n\r\n  const [formData, setFormData] = useState({\r\n    login: '',\r\n    password: ''\r\n  });\r\n  const { login, password } = formData;\r\n\r\n  const onchange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    log(login, password);\r\n  }\r\n  if (isAuthenticated) {\r\n\r\n    return <Redirect to=\"/dashboard/newsfeed\" />;\r\n  };\r\n  return (\r\n    <div className=\"Login\">\r\n      <div className=\"row\">\r\n\r\n\r\n        <a href=\"/\" className=\"img\">\r\n          <img src=\"../../../../dist/img/logofish.png\" alt=\"\" /></a>\r\n\r\n      </div>\r\n      \r\n      <div className='row'>\r\n        <div className='col-sm-3'></div>\r\n        <div className='col-sm-6'>\r\n        <div className=\"card col-sm-7 \">\r\n          <div className=\"card-body\">\r\n            \r\n            <form onSubmit={e => onSubmit(e)} className=\"form-signin\">\r\n            \r\n              <div className=\"mb-3  \">\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-sm-12 mb-4 \" >\r\n                    <input type=\"email\" className=\"form-control log__input\" placeholder=\"Email\"\r\n                      name=\"login\" value={login} onChange={e => onchange(e)} />\r\n                  </div>\r\n                  <div className=\"col-sm-12 mb-4 \">\r\n                    <input type=\"password\" name=\"password\" className=\"form-control log__input\" placeholder=\"New Password\"\r\n                      name=\"password\" value={password}\r\n                      onChange={e => onchange(e)} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <button className=\"btn btn-primary col-sm-12  log-button\" type=\"submit\" value=\"handleSubmit\" >Login</button>\r\n              </div>\r\n              <div className=\"col-sm-12  mt-3 mb-4 span1\" >\r\n                <NavLink to=\"/reset\" className=\"log__link\" > <span>Forget password?</span></NavLink>\r\n              </div >\r\n              \r\n              <hr></hr>\r\n              <div>\r\n                <NavLink to=\"/register\">\r\n                  <button className=\"btn btn-primary col-sm-12 mt-2 mb-4 log-button1\">Create Account</button>\r\n                </NavLink>\r\n\r\n\r\n              </div>\r\n\r\n\r\n            </form>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n        </div>\r\n        <div className='col-3'></div>\r\n      </div>\r\n      <div className='pt-5'></div>\r\n      <Footer />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  log: propTypes.func.isRequired,\r\n  isAuthenticated: propTypes.bool.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { log })(Login);","D:\\work\\Project\\fishComb_Front\\src\\components\\auth\\Register\\Register.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\auth\\HomePage\\HomePage.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Actions\\types.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Footer\\Footer.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Container\\Container.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Menu\\Menu.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Header\\Header.js",["336","337","338"],"D:\\work\\Project\\fishComb_Front\\src\\Reducers\\index.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\layout\\Header\\Notification.js",["339","340"],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\Profile.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\Userprofile.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Market.js",["341","342","343","344","345","346","347","348","349","350","351"],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Invited.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Gallery.js",["352"],"import React from \"module\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {  Col, Row,Container } from 'react-bootstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport {tileData} from './tileData';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n      paddingTop:'60px'\r\n     // backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n      width: 700,\r\n      height: 650,\r\n    },\r\n  }));\r\nconst Gallery =()=>{\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n        <Row className='pt-5 pb-3'>\r\n                    <Col md={3} className='px-0' ></Col>\r\n                    <Col md={4} className=\"pb-4 pt-5 px-0 mr-5\">\r\n                        <ul className=\"nav nav-pills nav-justified \" id='navprofil'>\r\n                            <li className=\"nav-item\">\r\n                    <Link to={`/dashboard/events`}className=\"link_cart\" ><span className=\"n\" >General event</span></Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to={`/dashboard/Gallery`} className=\"link_cart\" ><span className=\"n\">Gallery</span></Link>\r\n                </li>\r\n\r\n            </ul>\r\n        </Col>\r\n        <Row className='pt-3'>\r\n          <Col xs={1}></Col>\r\n          <Col xs={10}>\r\n          <h1>Events Gallery</h1>\r\n          </Col>  \r\n        </Row>\r\n    </Row>\r\n    <Row>\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={200} className={classes.gridList} cols={7}>\r\n        {tileData.map((tile) => (\r\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n            <img src={tile.img} alt={tile.title} />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n    </Row>\r\n    </div>\r\n    )\r\n}\r\nexport default Gallery;","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Attended.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\Cart.js",["353"],"import React, { useEffect,useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { showCart,deleteProd } from '../../../../Actions/cart';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport { Fragment } from 'react';\r\nimport CartProduct from './CartProduct';\r\nimport './Cart.css';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport { IoBagCheckOutline } from 'react-icons/io5';\r\nimport { Button } from '@material-ui/core';\r\nimport Stepper from './Steppers'\r\nconst Cart = ( { showCart, cart :{ cart}   ,deleteProd }  ) => {\r\n/******************************/    \r\nuseEffect(() => {\r\n  showCart()\r\n},[showCart])\r\nconst [hidden,sethidden]=useState(true)\r\n\r\n/******************************/ \r\nreturn (\r\n    <Fragment>\r\n        <Row className='pt-5 pb-5 '>\r\n            <Col sm={2} ></Col>\r\n            <Col sm={9} className='card__shop'>\r\n                <Card style={{backgroundColor:'#f7f8fa',border:'0px'}} >\r\n                    <Row className='pt-3'> \r\n                        \r\n                        <Col xs={10}>\r\n                            <h2 className='title'><b>Your Shop Cart</b></h2>\r\n                        </Col>  \r\n                    </Row>\r\n                    <Row className='pt-5'>\r\n                        \r\n                    </Row>\r\n                    <hr /> \r\n                    <Row>\r\n                       {cart.carts ? <Col xs={12}>\r\n                            {cart && cart.carts.map((cart) =>\r\n                                (\r\n                                <CartProduct key={cart.cart_id} cart={cart} />)\r\n                                )}\r\n                        </Col>:<Col className='pt-3 pb-3'><h4>No Product in Your Cart</h4></Col>} \r\n                    </Row>\r\n                    <Row className='py-2 border Total__section'>\r\n                        <Col xs={10} className='px-5'><h3><b>Total</b></h3> </Col>\r\n                        <Col xs={2} className='px-5'>\r\n                             {cart && cart.total_amount} £\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='pt-2'>\r\n                        <Col xs={5}></Col>\r\n                    </Row>\r\n                </Card>             \r\n            </Col>\r\n            <Col sm={2}></Col>\r\n       </Row>\r\n       <Row>\r\n           <Col sm={10} md={10}></Col>\r\n          \r\n           <Col sm={1} md={1}><Button onClick={e=>sethidden(false)}><PaymentIcon/> Checkout</Button></Col>\r\n       </Row>\r\n       <Row hidden={hidden}><Col sm={1} md={1}></Col> <Col sm={5} md={5}><h3>Checkout</h3></Col>\r\n       <Row>\r\n       <Col sm={1} md={1}></Col><Col sm={11} md={11}><Stepper/></Col>\r\n       </Row>\r\n       </Row>\r\n    </Fragment>\r\n)\r\n}\r\nCart.prototype={\r\n    showCart: PropTypes.func.isRequired,\r\n    deleteProd: PropTypes.func.isRequired,\r\n    cart: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    cart : state.cart,\r\n})\r\nexport default connect(mapStateToProps, { showCart,deleteProd }) (Cart);","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Eventitem.js",["354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"import Single from './single'\r\nimport React, {useEffect, useState, useCallback} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n    getevent,\r\n    deleteEvent,\r\n    subscribEevent,\r\n    invite,\r\n    getfriends,\r\n    update,\r\n    getevents\r\n} from '../../../Actions/events'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport './Events.css'\r\nimport {IoShareSocialOutline} from \"react-icons/io5\";\r\nimport {\r\n    Avatar,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    MenuItem,\r\n    Slide\r\n} from '@material-ui/core'\r\nimport {FormControl} from 'react-bootstrap'\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport {ReactTinyLink} from 'react-tiny-link';\r\nimport UpdateRoundedIcon from '@material-ui/icons/UpdateRounded';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport {NavLink} from 'react-bootstrap';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport {Card, Col, Row} from 'react-bootstrap';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport FeaturedDialog from './FeaturedDialog'\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\"\r\n        ref={ref}\r\n        {...props}/>;\r\n});\r\n\r\nconst Eventitem = ({\r\n    match,\r\n    getevent,\r\n    events: {\r\n        event,\r\n        friends,\r\n        events,\r\n        categories,\r\n        loading\r\n    },\r\n    deleteEvent,\r\n    auth: {\r\n        user\r\n    },\r\n    getfriends,\r\n    invite,\r\n    update,\r\n    getevents\r\n}) => {\r\n    useEffect(() => {\r\n        getevent(match.params.id);\r\n    }, [getevent, match.params.id])\r\n    useEffect(() => {\r\n        getfriends()\r\n    }, [getfriends])\r\n    useEffect(() => {\r\n        getevents()\r\n    }, [getevents])\r\n    const [state, setState] = React.useState({checkedA: true});\r\n\r\n\r\n    const increment = useCallback(() => {\r\n        getevent(event.next_event)   \r\n\r\n    }, [event && event.next_event])\r\n\r\n    const decrement = useCallback(() => {\r\n        getevent(event.previous_event)\r\n\r\n    }, [event && event.previous_event])\r\n\r\n\r\n    const [open1, setOpen1] = React.useState(false);\r\n\r\n\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const handleClose2 = () => {\r\n        setOpen2(false);\r\n    };\r\n\r\n    const handleOpen2 = () => {\r\n        setOpen2(true);\r\n    };\r\n    const handleClickOpen2 = () => {\r\n        setOpen2(true);\r\n    };\r\n    const [open3, setOpen3] = React.useState(false);\r\n    const handleClose3 = () => {\r\n        setOpen3(false);\r\n    };\r\n\r\n    const handleOpen3 = () => {\r\n        setOpen3(true);\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [user_id, setUser] = useState('');\r\n\r\n    const onsubmit = e => {\r\n        e.preventDefault();\r\n        invite(user_id, event.id)\r\n    }\r\n\r\n    const [uid, setText] = useState('');\r\n    const [disable, setdisable] = useState(false);\r\n    const [name, setname] = useState('')\r\n    const [description, setdescription] = useState('')\r\n\r\n    const [location, setlocation1] = useState('')\r\n    const [date, setdate] = useState('')\r\n    const [video_link, setvideolink] = useState('')\r\n    const [cover, setcover] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [category_id, setCategory_id] = useState('')\r\n    const onnamechange = e => {\r\n        setname(e.target.value)\r\n    }\r\n\r\n    const ondescchange = e => {\r\n        setdescription(e.target.value)\r\n    }\r\n\r\n\r\n    const onlocationchange = e => {\r\n        setlocation1(e.target.value)\r\n    }\r\n\r\n    const ondatechange = e => {\r\n        setdate(e.target.value)\r\n    }\r\n    const oncoverchange = e => {\r\n        setcover(e.target.files[0])\r\n    }\r\n    const onlinkchange = e => {\r\n        setvideolink(e.target.value)\r\n    }\r\n\r\n    const onstatuschange = e => {\r\n        setStatus(e.target.value)\r\n    }\r\n    useEffect(() => {\r\n        setlocation1(loading || !!event && !event.location ? '' : event.location)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setname(loading || !!event && !event.name ? '' : event.name)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setdescription(loading || !!event && !event.description ? '' : event.description)\r\n    }, [loading])\r\n    useEffect(() => {}, [loading])\r\n    useEffect(() => {\r\n        setvideolink(loading || !!event && !event.video_link ? '' : event.video_link)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setStatus(loading || !!event && !event.status ? 1 : event.status)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setdate(loading || !!event && !event.date ? '' : event.date)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setcover(loading || !!event && !event.cover ? '' : event.cover)\r\n\r\n    }, [loading])\r\n\r\n    const handleswitch = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.checked\r\n        });\r\n        if (event.target.checked === true) {\r\n            setStatus(1)\r\n        } else {\r\n            setStatus(0)\r\n        }\r\n        console.log(status)\r\n    };\r\n    const getlink = () => {\r\n        console.log(window.location.href);\r\n    }\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        console.log(description)\r\n        const file = new FormData();\r\n        file.append('name', name);\r\n        file.append('description', description);\r\n        file.append('category_id', category_id);\r\n        file.append('location', location);\r\n        file.append('date', date);\r\n        file.append('cover', cover);\r\n        file.append('video_link', video_link);\r\n        file.append('status', status);\r\n        update(file, event.id)\r\n        e.target.reset();\r\n    }\r\n    return (\r\n        <div> {/*****************************Update Dialog*********************************** */}\r\n            <Dialog open={open2}\r\n                onClose={handleClose2}\r\n                aria-labelledby=\"form-dialog-title1\" className='dialogForm'>\r\n                <form onSubmit={\r\n                    e => submit(e) } className='add__event'>\r\n                    <DialogTitle id=\"form-dialog-title1\">update event</DialogTitle>\r\n                    <DialogContent>\r\n                        <div className=\"row pt-1\">\r\n                            <div className=' col-sm-12'>\r\n                                <FormControl className='input_event'\r\n                                    placeholder={\r\n                                        event && event.name\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    id=\"Title\"\r\n                                    label=\"Title\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onChange={onnamechange}/></div>\r\n                        </div>\r\n                        <div className=\"row pt-3\">\r\n                            <div className='col-6'>\r\n                                <FormControl className='input_event' margin=\"dense\" id=\"Date\" type=\"Date\" name=\"date\"\r\n                                    value={date}\r\n                                    onChange={ondatechange}/>\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <select \r\n                                    value={category_id}\r\n                                    onChange={\r\n                                        e => setCategory_id(e.target.value)\r\n                                }>\r\n\r\n                                    {\r\n                                    categories && categories.map(c => (\r\n                                        <option key={\r\n                                                c.id\r\n                                            }\r\n                                            value={\r\n                                                c.id\r\n                                        }>\r\n                                            {\r\n                                            c.name\r\n                                        } </option>\r\n                                    ))\r\n                                } </select>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row pt-3\">\r\n                            <div className='col-sm-12'>\r\n                                <FormControl placeholder={\r\n                                        event && event.location\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    id=\"Location\"\r\n                                    className='input_event'\r\n                                    type=\"text\"\r\n                                    fullWidth\r\n                                    name=\"location\"\r\n                                    value={location}\r\n                                    onChange={onlocationchange}/></div>\r\n                        </div>\r\n                        <div className=\"row pt-3\">\r\n                            <div className='col-sm-12'>\r\n                                <FormControl placeholder={\r\n                                        event && event.description\r\n                                    }\r\n                                    className='input_event'\r\n                                    margin=\"dense\"\r\n                                    id=\"Description\"\r\n                                    as=\"textarea\"\r\n                                    aria-label=\"With textarea\"\r\n                                    type=\"textarea\"\r\n\r\n                                    name=\"description\"\r\n                                    value={description}\r\n                                    onChange={ondescchange}/></div>\r\n                        </div>\r\n                        <div className='row pt-3'>\r\n                        </div>\r\n                        <Col sm={12}\r\n                            md={12}\r\n                            xl={12}\r\n                            className=\"btn-group btn-group-toggle \">\r\n                            <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\"\r\n                                onChange={oncoverchange}\r\n                                name=\"cover\"/>\r\n                        </Col>\r\n                        <div className=\"row pt-3\">\r\n                            <div className='col-sm-12'>\r\n                                <FormControl placeholder={\r\n                                        event && event.video_link\r\n                                    }\r\n                                    className='input_event'\r\n                                    margin=\"dense\"\r\n                                    id=\"video\"\r\n                                    type=\"textarea\"\r\n                                    fullWidth\r\n                                    name=\"video_link\"\r\n                                    value={video_link}\r\n                                    onChange={onlinkchange}/>\r\n                                <FormControl // placeholder={event && event.status}\r\n                                    className='input_event'\r\n                                    hidden='true'\r\n                                    id=\"status\"\r\n                                    name=\"status\"\r\n                                    value={\r\n                                        status.toString()\r\n                                    }\r\n                                    type=\"textarea\"\r\n                                    fullWidth\r\n                                    onChange={onstatuschange}/>\r\n                                disable event\r\n                                <Switch checked={\r\n                                        state.checkedA\r\n                                    }\r\n                                    onChange={handleswitch}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={\r\n                                        {'aria-label': 'secondary checkbox'}\r\n                                    }/>\r\n                                enable event\r\n                            </div>\r\n                        </div>\r\n                        <div className='row pt-3'>\r\n                            <div className='col-sm-8'></div>\r\n                            <div className='col-sm-4'>\r\n                                <Button type='submit'\r\n                                    style={\r\n                                        {\r\n                                            backgroundColor: \"#f2f3f3\",\r\n                                            color: 'black',\r\n                                            borderRadius: '0'\r\n                                        }\r\n                                    }\r\n                                    onClick={handleClose}>\r\n                                    update Event\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n\r\n\r\n                </form>\r\n            </Dialog>\r\n\r\n\r\n            {/*****************Navlink***************** */}\r\n            <Row className='pt-5 pb-5'>\r\n                <Col md={3}\r\n                    className='px-0'></Col>\r\n                <Col md={4}\r\n                    className=\"pb-4 pt-5 px-0 mr-5\">\r\n                    <ul className=\"nav nav-pills nav-justified\" id='navprofil'>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={`/dashboard/events`}\r\n                                className=\"link_cart\">\r\n                                <span className=\"n\">General event</span>\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to={`/dashboard/Gallery`}\r\n                                className=\"link_cart\">\r\n                                <span className=\"n\">Gallery</span>\r\n                            </Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </Col>\r\n            </Row>\r\n            <Row className='pt-5'>\r\n                <Col md={1}\r\n                    sm={1}></Col>\r\n                <Col md={9}\r\n                    sm={9}>\r\n                    <Row>\r\n                        <Card className='pt-2 pb-2'\r\n                            style={\r\n                                {\r\n                                    backgroundColor: '#f7f8fa',\r\n                                    border: '0px'\r\n                                }\r\n                        }>\r\n                            {/*********************NEXT PREVIEW EVENT************************* */}\r\n                            <Row className='pb-3'>\r\n                                <Col md={9}\r\n                                    sm={9}></Col>\r\n                                <Col md={3}\r\n                                    sm={3}\r\n                                    className=' Top__section'>\r\n                                    {\r\n                                    event && event.previous_event !== null ? <button onClick={decrement}\r\n                                        style={\r\n                                            {backgroundColor: '#f7f8fa'}\r\n                                    }>\r\n                                        <NavigateBeforeIcon/>Previous</button> : <button onClick={decrement} disabled='true'\r\n                                        style={\r\n                                            {backgroundColor: '#f7f8fa'}\r\n                                    }>\r\n                                        <NavigateBeforeIcon/>Previous</button>\r\n                                }...{event && event.next_event!== null? <button \r\n                                        onClick={increment}\r\n                                        style={\r\n                                            {backgroundColor: '#f7f8fa'}\r\n                                    }>Next\r\n                                        <NavigateNextIcon/></button>: <button \r\n                                        onClick={increment}\r\n                                        disabled='true'\r\n                                        style={\r\n                                            {backgroundColor: '#f7f8fa'}\r\n                                    }>Next\r\n                                        <NavigateNextIcon/></button>}\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={3}>\r\n                                    {\r\n                                    event && !event.video_link === null ? <ReactTinyLink cardSize=\"large\"\r\n                                        showGraphic={true}\r\n                                        maxLine={2}\r\n                                        minLine={1}\r\n                                        url={\r\n                                            event.video_link\r\n                                        }/> : <div>\r\n                                        <img src={\r\n                                                event && event.cover\r\n                                            }\r\n                                            width=\"380\"\r\n                                            height=\"300\"\r\n                                            alt='event'\r\n                                            style={\r\n                                                {borderRadius: '4px'}\r\n                                            }/>\r\n                                    </div>\r\n                                }</Col>\r\n                                <Col md={2}\r\n                                    sm={2}></Col>\r\n                                <Col md={7}\r\n                                    sm={7}>\r\n                                    <div className='row'>\r\n                                        <div className='col-sm-8'>\r\n                                            <h4>\r\n                                                <b>{\r\n                                                    event && event.name.charAt(0).toUpperCase() + event.name.slice(1)\r\n                                                }</b>\r\n                                            </h4>\r\n                                            <div className='row'>\r\n                                                <div className='col-sm-4 '>\r\n                                                    {\r\n                                                    event && event.location.charAt(0).toUpperCase() + event.location.slice(1)\r\n                                                } </div>\r\n                                                <div className='col-sm-3 '>\r\n                                                    {\r\n                                                    event && event.date\r\n                                                } </div>\r\n                                            </div>\r\n\r\n                                            <div className='row'>\r\n                                                <div className='col-sm-6 pb-3 pt-2'>\r\n                                                    <span>{\r\n                                                        event && event.description\r\n                                                    }</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='row pb-5'>\r\n                                                <div className='col-sm-5 pb-4'>participants {\r\n                                                    event && event.participants.length\r\n                                                } </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className='col-sm-4'>\r\n                                            <Button className='Invite__btn mt-2 pr-3'\r\n                                                onClick={getlink}><IoShareSocialOutline/>Share</Button>\r\n                                            <div>\r\n                                                <Button className='Invite__btn  mt-2'\r\n                                                    onClick={handleClickOpen}>\r\n                                                    <AddBoxIcon/>\r\n                                                    Invite Friends</Button>\r\n                                            </div>\r\n                                            <div> {\r\n                                                event && user && user.user_id === event.user.data.user_id ? <Button className='Invite__btn  mt-2' onClick={handleClickOpen2}>\r\n                                                    <UpdateRoundedIcon />\r\n                                                    Update</Button> : <div></div>\r\n                                            } </div>\r\n                                            <div>{\r\n                                                event && user && user.user_id === event.user.data.user_id ? <Link to='/dashboard/events' className='Invite__btn'>\r\n                                                    <Button className='Invite__btn  mt-2'\r\n                                                        onClick={\r\n                                                            e => deleteEvent(match.params.id)\r\n                                                    }>\r\n                                                        <DeleteOutlineRoundedIcon style={\r\n                                                            {color: '#212529'}\r\n                                                        }/>\r\n                                                        Delete</Button>\r\n                                                </Link> : <div></div>\r\n                                            }</div>\r\n                                            <div>{\r\n                                                event && user && user.user_id === event.user.data.user_id ? <FeaturedDialog/>:<div></div>}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"bot__section\">\r\n                                        <div className='row '>\r\n                                            {\r\n                                            event && event.is_subscribed === false ? <div className='col-sm-4 pt-5' id='attend'>\r\n                                                <button onClick={\r\n                                                        subscribEevent(event.id, 1)\r\n                                                    }\r\n                                                    className='btn btn-outline-dark'\r\n                                                    disabled={disable}>Attend</button>\r\n                                            </div> : <div className='col-sm-4 pt-5' id='attend'>\r\n                                                <button disabled={true}\r\n                                                    className='btn btn-outline-dark'>Already subscribed</button>\r\n                                            </div>\r\n                                        }\r\n                                            <Dialog className='invite_form'\r\n                                                open={open}\r\n                                                TransitionComponent={Transition}\r\n                                                keepMounted\r\n                                                onClose={handleClose}\r\n                                                aria-labelledby=\"alert-dialog-slide-title\"\r\n                                                aria-describedby=\"alert-dialog-slide-description\">\r\n\r\n                                                <form onSubmit={\r\n                                                    e => onsubmit(e)\r\n                                                }>\r\n                                                    <DialogTitle id=\"alert-dialog-slide-title\">\r\n                                                        {\"invite\"}</DialogTitle>\r\n\r\n                                                    <DialogContent>\r\n                                                        <div className='row'>\r\n\r\n                                                            <FormControl className='input_name' placeholder='Name' margin='dense' type='text'\r\n                                                                value={uid}/></div>\r\n                                                        <div className='row pt-2'>\r\n\r\n                                                            <div className='col-md-7 ' id='user_data'>\r\n\r\n                                                                {\r\n                                                                friends && friends.map((c, index) => (\r\n                                                                    <div className='col-md-6'>\r\n                                                                        <form onSubmit={\r\n                                                                            e => onsubmit(e)\r\n                                                                        }>\r\n                                                                            <div className='col-md-12 pb-2 mt-1 friends border'>\r\n                                                                                <div><Avatar className='mt-1'\r\n                                                                                        src={\r\n                                                                                            c.data.attributes.profile_image\r\n                                                                                        }/></div>\r\n                                                                                <div className='col-md-1'></div>\r\n                                                                                <div className='col-md-6 pt-2'>\r\n                                                                                    {\r\n                                                                                    c.data.attributes.name\r\n                                                                                }</div>\r\n                                                                                <div className='col-md-2'>\r\n                                                                                    <AddBoxIcon onClick={\r\n                                                                                        e => invite(c.data.user_id, event.id)\r\n                                                                                    }/></div>\r\n\r\n                                                                            </div>\r\n                                                                        </form>\r\n                                                                        <div className='col-md-1'></div>\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            } </div>\r\n\r\n                                                        </div>\r\n\r\n\r\n                                                        <div></div>\r\n\r\n\r\n                                                    </DialogContent>\r\n                                                    <DialogActions></DialogActions>\r\n                                                </form>\r\n                                            </Dialog>\r\n\r\n\r\n                                            <div className='col-sm-4  pt-5'>\r\n                                                <button className='btn btn-outline-dark' id='cancel'>Cancel</button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </Card>\r\n                        <div className='mt-4 mb-2'></div>\r\n                        <hr/>\r\n                        <div className='pt-3 '>\r\n                            <h6>\r\n                                <b>Similar Events</b>\r\n                            </h6>\r\n                            <Row> {/*events && events.map((event) =>\r\n                                (\r\n                                    <Single key={event.id} event={event} />)\r\n                                )*/}\r\n\r\n                                {/*<Carousel activeIndex={index} onSelect={handleSelect} >\r\n                                    {events && events.slice(0, 3).map((event) =>\r\n                                    (\r\n                                        <Carousel.Item key={event.id} interval={4000}>\r\n                                            <img\r\n                                                className=\"d-block w-100\"\r\n                                                src={event.cover}\r\n                                                alt=\"First slide\"\r\n                                                width=\"500\" height=\"500\"\r\n                                                style={{ borderRadius: '10px' }}\r\n                                            />\r\n                                            <Carousel.Caption>\r\n                                                <h3>{event.name}</h3>\r\n                                                <p>{event.description}</p>\r\n                                                <p>{event.date}</p>\r\n                                            </Carousel.Caption>\r\n                                        </Carousel.Item>\r\n                                    ))}\r\n\r\n\r\n                                </Carousel>*/}\r\n\r\n                                <div>\r\n\r\n                                    <OwlCarousel className=\"slider-items owl-carousel pt-4\" autoplay='true' autoplaySpeed='2000'>\r\n                                        {\r\n                                        events && events.map((event) => (\r\n                                            <div class=\"item\"\r\n                                                key={\r\n                                                    event.id\r\n                                            }>\r\n                                                <Col>\r\n                                                    <img src={\r\n                                                            event.cover\r\n                                                        }\r\n                                                        width='180px'\r\n                                                        height='250'\r\n                                                        style={\r\n                                                            {borderRadius: '5px'}\r\n                                                        }/></Col>\r\n                                            </div>\r\n\r\n                                        ))\r\n                                    } </OwlCarousel>\r\n                                </div>\r\n\r\n                            </Row>\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </div>\r\n    )\r\n}; Eventitem.propTypes = {\r\n    events: PropTypes.object.isRequired,\r\n    getevent: PropTypes.func.isRequired,\r\n    deleteEvent: PropTypes.func.isRequired,\r\n    subscribEevent: PropTypes.func.isRequired,\r\n    getfriends: PropTypes.func.isRequired,\r\n    invite: PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    update: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    getevents: PropTypes.func.isRequired\r\n\r\n}\r\nconst mapStateToProps = state => ({events: state.events, auth: state.auth, categories: state.categories})\r\nexport default connect(mapStateToProps, {\r\n    update,\r\n    getevent,\r\n    deleteEvent,\r\n    subscribEevent,\r\n    getfriends,\r\n    invite,\r\n    getevents\r\n})(Eventitem)\r\n","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\Board.js",["394","395","396","397","398","399","400","401","402","403","404","405"],"import React, { useState, useEffect } from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Table } from 'reactstrap';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PropTypes from 'prop-types';\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport { Link } from 'react-router-dom';\r\nimport { getThread, addThread, searchThread } from '../../../Actions/Board';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './Board.css';\r\nimport { Button } from '@material-ui/core';\r\nimport SingleThread from './SingleThread';\r\n\r\n\r\n\r\n\r\nconst Board =( { categories, getThread, addThread , Thread: {thread}, searchThread }) => {\r\n    useEffect(() => {\r\n        getThread()\r\n    }, [getThread])\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const oncategorychange = e => {\r\n        setcategoryid(e.target.value)\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n    const handleOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const [category_id, setcategoryid] = useState('')\r\n\r\n\r\n/***************************************/\r\nconst [title, settitle] = useState('')\r\nconst [body, setbody] = useState('')\r\nconst [status, setstatus] = useState('')\r\nconst [image, setimage] = useState('')\r\nconst ontitlechange = e => {\r\n    settitle(e.target.value)\r\n}\r\n\r\nconst onbodychange = e => {\r\n    setbody(e.target.value)\r\n}\r\n\r\nconst onstatuschange = e => {\r\n    setstatus(e.target.value)\r\n}\r\nconst onimagechange = e => {\r\n    setimage(e.target.files[0])\r\n}\r\nconst submit = e => {\r\n    e.preventDefault();\r\n    const file = new FormData();\r\n    file.append('title', title);\r\n    file.append('body', body);\r\n    file.append('image', image);\r\n    file.append('status', 1);\r\n    addThread(file)\r\n    e.target.reset();\r\n}\r\n/***************************************/\r\nconst [filter, setFilter] = React.useState('title');\r\nconst [value, setValue] = React.useState('');\r\nconst handleChange = (product) => {\r\n    setFilter(product.target.value);\r\n};\r\nconst handleChange1 = e => {\r\n    setValue(e.target.value)\r\n}\r\nconst onsubmit1 = e => {\r\n    e.preventDefault();\r\n    console.log(filter)\r\n   // console.log(value)\r\n    searchThread(filter, value)\r\n}\r\n/***************************************/\r\n    return (\r\n        <div>\r\n            <Row className='pt-5 mb-4'>\r\n                <Col md={3}></Col>\r\n                <Col md={4} style={{display:'contents'}}>\r\n                    <Row>\r\n                        <ul className=\"nav\">\r\n                            <Col xs={4}>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className='nav-link' className=\"link_cart\" to='#' ><span className=\"n\">Latest</span></Link>\r\n                                </li>\r\n                            </Col>\r\n                            <Col xs={1}></Col>\r\n                            <Col xs={6}>\r\n                                 <li className=\"nav-item\">\r\n                                    <Link className='nav-link' className=\"link_cart\" to='#' ><span className=\"n\" >My Posts</span></Link>\r\n                                </li>\r\n                           </Col>\r\n                        </ul>\r\n                    </Row>\r\n                </Col>\r\n                    <Col md={5}></Col>\r\n                    <Col>\r\n                        <button className='btn btn-outline-dark' id='Button_board' onClick={handleClickOpen} >New Post</button>\r\n                    </Col>         \r\n                </Row>\r\n                <Row className='Side_Bar'>\r\n                    <Col md={3} sm={3} xl={3} className='side_min_bar'>\r\n                        <form onSubmit={e => onsubmit1(e)} >\r\n                            <Col md={12} sm={12} xl={12} className=\"header__input px-0\" >\r\n                                <input type=\"text\" placeholder='Search Fishcomb' aria-label=\"Search\" height='25px' value={value} onChange={handleChange1}  />\r\n                                <button className=\"col  header__button\" >\r\n                                    <svg width=\"19px\" height=\"19px\" version=\"1.1\" xmlns=\"http://www.w3.org/1999/xlink\">\r\n                                        <g id=\"fishcomb-product-icons-14\">\r\n                                            <path d=\"M12.2518 1.61932e-15C12.3328 0.0283492 12.4155 0.051191 12.4995 0.0683699C15.6293 0.480702 18.1632 2.82089 18.8306 5.91537C19.498 9.00985 18.1549 12.1912 15.4749 13.8641C12.7948 15.5369 9.35588 15.3404 6.88257 13.3732C6.81668 13.3207 6.74396 13.2752 6.63263 13.1977L0.840723 19L0 18.1978L5.82371 12.3658C5.74646 12.2656 5.68965 12.1858 5.6283 12.106C4.09022 10.1285 3.64051 7.51038 4.43017 5.13067C5.21984 2.75096 7.14415 0.925279 9.55698 0.266643C9.95007 0.157251 10.3545 0.0866019 10.7522 0L12.2518 1.61932e-15ZM11.4884 13.7948C14.0295 13.8077 16.3277 12.2829 17.3102 9.93242C18.2926 7.58189 17.7654 4.86919 15.9748 3.06078C14.1841 1.25238 11.4832 0.704965 9.13291 1.67411C6.78265 2.64325 5.24665 4.93781 5.24202 7.48651C5.24318 10.9531 8.03216 13.7697 11.4884 13.7948L11.4884 13.7948Z\" id=\"Shape\" fill=\"#CDCDCD\" stroke=\"none\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </button>\r\n                            </Col>\r\n                        </form>\r\n                        <Row className='pt-2'>\r\n                            <Col xs={4}>\r\n                                <Button className='BoradBotton'><h6>My Account</h6> </Button>\r\n                            </Col> \r\n                        </Row>\r\n                            </Col>\r\n                            <Col className='border-left'>\r\n                                {thread && thread.map((threads) =>\r\n                                    (\r\n                                    <SingleThread key={threads.id} threads={threads}  />)\r\n                                )}\r\n                            </Col>\r\n                        <Row>   \r\n                    </Row>\r\n                </Row>\r\n                <Dialog  open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                    <form className='addQuestion' onSubmit={e => submit(e)}>\r\n                        <DialogTitle id=\"form-dialog-title\">New Post</DialogTitle>\r\n                            <DialogContent>\r\n                                <Row className=\" pt-2\">\r\n                                    <Col sm={12} md={12} xl={12}>\r\n                                        <Row>\r\n                                            <Col xs={2}>\r\n                                                <Form.Label>Title</Form.Label>\r\n                                            </Col>\r\n                                            <Col xs={10}>\r\n                                                <FormControl\r\n                                                className='input_event'\r\n                                                placeholder='Title'\r\n                                                margin=\"dense\"\r\n                                                id=\"Title\"\r\n                                                label=\"Title\"\r\n                                                type=\"text\"\r\n                                                name=\"title\" value={title} onChange={ontitlechange} />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='pt-1 pb-1'>\r\n                                </Row>\r\n                                <Row className='pt-3'>\r\n                                    <Col xs={12}>\r\n                                    <Row>\r\n                                        <Col xs={2}>\r\n                                            <Form.Label>Body</Form.Label>\r\n                                        </Col>\r\n                                        <Col xs={10}>\r\n                                            <Form.Control as=\"textarea\"\r\n                                            rows={3}\r\n                                            className='input_event'\r\n                                            placeholder='Body'\r\n                                            name=\"body\" value={body} onChange={onbodychange} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=' pt-3'>\r\n                                        <Col  sm={12} md={12} xl={12} className=\"btn-group btn-group-toggle \">\r\n                                        <div className='col-md-3 px-0'>Upload Image</div><input accept=\"image/*\" id=\"icon-button-file\" className='px-0' type=\"file\" onChange={onimagechange} placeholder='file Image' />\r\n                                            { /*<Button variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                                <span  >Upload Video </span>\r\n\r\n                                                </Button>*/}\r\n                                        </Col>\r\n                                    </Row>\r\n                                <Row className='pt-3'>\r\n                                    <Col md={8} className='mt-3'></Col>\r\n                                    <Col xs={4} className='pb-4' >\r\n                                        <Button className='pt-2 pb-2 ' variant=\"contained\" color=\"primary\"  onClick={handleClose} type='submit'>Ask Question</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </DialogContent>\r\n                        </form>\r\n                    </Dialog>\r\n                </div>\r\n    )\r\n}\r\nBoard.prototype={\r\n    categories: PropTypes.object.isRequired,\r\n    getThread: PropTypes.func.isRequired,\r\n    Thread: PropTypes.object.isRequired,\r\n    addThread: PropTypes.func.isRequired,\r\n    searchThread: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    categories: state.categories,\r\n    Thread : state.Thread,\r\n})\r\nexport default connect (mapStateToProps, { getThread, addThread, searchThread }) (Board);","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\watch\\Watch.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Newfeed.js",["406"],"import React, { useEffect } from 'react';\r\nimport Post from '../newsfeed/Post/Post';\r\nimport Publication from './publications/Publication';\r\nimport { getPosts } from '../../../Actions/Post';\r\nimport {getevents} from'../../../Actions/events';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport {Col} from 'react-bootstrap'\r\nimport Moment from 'react-moment';\r\nconst NewFeed = ({ Post: { posts }, getPosts,getevents,events:{events} }) => {\r\n  useEffect(() => {\r\n    getPosts()\r\n  }, [getPosts])\r\n  useEffect(() => {\r\n    getevents()\r\n  }, [getevents])\r\n  return (\r\n    <div className='row pt-5 no-gutters'>\r\n      <div className='col-sm-1'></div>\r\n      <div className='col-sm-6 '>\r\n        <div className='card col-sm-12'>\r\n          <Post />\r\n        </div>\r\n      </div><div  className='col-sm-1'>\r\n        </div>\r\n      <div className='col-sm-3'>\r\n        \r\n      <OwlCarousel className=\"slider-items owl-carousel\">\r\n        {events && events.map((event) =>\r\n                                    (\r\n                                        <div class=\"item\" key={event.id}>\r\n                                            <Col>\r\n                                            <img src={event.cover} width='200px' height='100px'  className='pb-2'/></Col>\r\n                                           <Col> <p style={{color:'grey'}}>{event.name.charAt(0).toUpperCase() + event.name.slice(1) }</p>\r\n                                            <p  style={{color:'grey'}}><Moment format='MMM Do YY'>{event.date}</Moment></p></Col>\r\n                                            </div>\r\n                                       \r\n                                    ))}\r\n                        </OwlCarousel>\r\n      </div>\r\n      <div className='row pt-3'>\r\n        <div className='col-sm-1'></div>\r\n        {posts.length > 0 ? (\r\n          <div className='col-sm-6'>\r\n            <div className='row no-gutters'>\r\n\r\n              {posts && posts.map(posts =>\r\n                <Publication key={posts.data.id} posts={posts} />\r\n              )}\r\n\r\n            </div>\r\n          </div>\r\n        ) :\r\n\r\n          <div className='col-sm-6'>\r\n            <div className='row'>\r\n              <div className='col-sm-6'>\r\n                No recent Feed\r\n          </div>\r\n            </div>\r\n              </div>} \r\n\r\n\r\n\r\n\r\n        <div className='col-sm-1'></div>\r\n        <div className='col-sm-3'>\r\n          <div className='row'>\r\n\r\n\r\n          </div>\r\n          <div className='row '>\r\n\r\n          </div>\r\n        </div>\r\n        <div className='col-sm-1'></div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nNewFeed.propTypes = {\r\n\r\n  Post: PropTypes.object.isRequired,\r\n  getPosts: PropTypes.func.isRequired,\r\n  getevents: PropTypes.func.isRequired,\r\n  events:PropTypes.object.isRequired\r\n\r\n};\r\nconst mapStateToProps = state => ({\r\n  Post: state.Post,\r\n  events:state.events\r\n\r\n})\r\nexport default connect(mapStateToProps, { getPosts,getevents })(NewFeed);","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\Events.js",["407","408","409","410"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './Events.css';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { addEvent, getevents, sortEvents, myevents, search } from '../../../Actions/events';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Single from './single'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col,Image } from 'react-bootstrap';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\n\r\nconst Events = ({ addEvent, getevents, events: { events, categories }, sortEvents, myevents, search }) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n    useEffect(() => {\r\n        getevents()\r\n    }, [getevents])\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n\r\n    const handleOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const [name, setname] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [category_id, setcategoryid] = useState('')\r\n    const [location, setlocation1] = useState('')\r\n    const [date, setdate] = useState('')\r\n    const [video_link, setvideolink] = useState('')\r\n    const [cover, setcover] = useState('')\r\n    const [status,setStatus]=useState(1)\r\n    const onnamechange = e => {\r\n        setname(e.target.value)\r\n    }\r\n    const ondescchange = e => {\r\n        setdescription(e.target.value)\r\n    }\r\n    const oncategorychange = e => {\r\n        setcategoryid(e.target.value)\r\n    }\r\n    const onlocationchange = e => {\r\n        setlocation1(e.target.value)\r\n    }\r\n\r\n    const ondatechange = e => {\r\n        setdate(e.target.value)\r\n    }\r\n    const oncoverchange = e => {\r\n        setcover(e.target.files[0])\r\n    }\r\n    const onlinkchange = e => {\r\n        setvideolink(e.target.value)\r\n    }\r\n    const onstatuschange =e=>{\r\n        setStatus(e.target.value)\r\n    }\r\n    const [state, setState] = React.useState({\r\n        checkedA: true\r\n\r\n    });   \r\n    const submit = e => {\r\n        e.preventDefault();\r\n        console.log(description)\r\n        const file = new FormData();\r\n        file.append('name', name);\r\n        file.append('description', description);\r\n        file.append('category_id', category_id);\r\n        file.append('location', location);\r\n        file.append('date', date);\r\n        file.append('cover', cover);\r\n        file.append('video_link', video_link);\r\n        file.append('status', status);\r\n        addEvent(file)\r\n        e.target.reset();\r\n    }\r\n    /****************************************** */\r\n    const [loc, setlocation] = useState({\r\n        location1: 'location',\r\n        asc: 'asc'\r\n    })\r\n    const { location1, asc } = loc;\r\n    const onchange1 = e => setlocation({ ...loc, [e.target.name]: e.target.value });\r\n    const submit1 = e => {\r\n        e.preventDefault();\r\n        console.log(location1 + '*****' + asc)\r\n        sortEvents(loc);\r\n    }\r\n    const [filter, setFilter] = React.useState('name');\r\n    const [value, setValue] = React.useState('');\r\n    const handleChange = (event) => {\r\n        setFilter(event.target.value);\r\n\r\n    };\r\n    const handleChange1 = e => {\r\n        setValue(e.target.value)\r\n    }\r\n    const handleswitch = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        if (event.target.checked === true) {\r\n           setStatus(1)\r\n        }\r\n        else {   setStatus(0) }\r\n        console.log(status)\r\n    };\r\n    const onsubmit1 = e => {\r\n        e.preventDefault();\r\n        console.log(filter)\r\n        // console.log(value)\r\n        search(filter, value)\r\n    }\r\n    return (\r\n        <div>\r\n              <Row className=' pb-3 '>\r\n                    <Col md={3} className='px-0' ></Col>\r\n                    <Col md={4} className=\"pb-4 pt-5 px-0 \">\r\n                        <ul className=\"nav nav-pills nav-justified \" id='navprofil'>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={`/dashboard/events`} className=\"link_cart\"><span className='n' >All Events</span></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={`/dashboard/invited`} className=\"link_cart\"><span  className='n'>Invited Events</span></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={`/dashboard/attendedevent`} className=\"link_cart\"><span  className='n'>Attending</span></Link>\r\n                            </li>\r\n                        </ul>\r\n                    </Col>\r\n                    <Col md={5}></Col>\r\n                </Row>\r\n            <Row >\r\n                <Row >\r\n                    <Col md={5} sm={5} xl={5} className=\"pb-4\">\r\n                        <ul className=\"nav nav-pills nav-justified \" id='navprofil'>\r\n                            <li className=\"nav-item\">\r\n                                <form onSubmit={e => submit1(e)}>\r\n                                    <Row >\r\n                                        <Col sm={1} md={1} xl={1}>\r\n                                            <Col sm={1} md={1} xl={1} className='filtre'>\r\n                                                <div className='col-xs-2 mr-2'>\r\n                                                    <select value={location1}\r\n                                                        name=\"location1\"\r\n                                                        onChange={e => onchange1(e)} >\r\n                                                        <option value='location'>\r\n                                                            Location\r\n                                                         </option>\r\n                                                        <option value='category'>\r\n                                                            Categories\r\n                                                       </option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className='col-xs-2 mr-2'> <select value={asc}\r\n                                                    name=\"asc\"\r\n                                                    onChange={e => onchange1(e)} >\r\n                                                    <option value='asc'>&#8593;</option>\r\n                                                    <option value='desc'>&#8595;</option>\r\n                                                </select></div>\r\n                                                <div className='col-xs-3'><button type='submit' id='button_sort'> <SortIcon /> Sort Event</button></div>\r\n                                            </Col>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </li>\r\n                        </ul>\r\n                    </Col> \r\n                </Row>\r\n                <Row >\r\n                    <Col md={3} sm={3} xl={3} className='side_min_bar '>\r\n                        <form onSubmit={e => onsubmit1(e)} >\r\n                            <Col md={11} sm={11} xl={11} className=\"header__input px-0\" >\r\n                                <input type=\"text\" placeholder='Search Event' aria-label=\"Search\"  value={value} onChange={handleChange1} />\r\n                                <button className=\"col-2 px-0  header__button\" >\r\n                                    <svg width=\"19px\" height=\"19px\" version=\"1.1\" xmlns=\"http://www.w3.org/1999/xlink\">\r\n                                        <g id=\"fishcomb-product-icons-14\">\r\n                                            <path d=\"M12.2518 1.61932e-15C12.3328 0.0283492 12.4155 0.051191 12.4995 0.0683699C15.6293 0.480702 18.1632 2.82089 18.8306 5.91537C19.498 9.00985 18.1549 12.1912 15.4749 13.8641C12.7948 15.5369 9.35588 15.3404 6.88257 13.3732C6.81668 13.3207 6.74396 13.2752 6.63263 13.1977L0.840723 19L0 18.1978L5.82371 12.3658C5.74646 12.2656 5.68965 12.1858 5.6283 12.106C4.09022 10.1285 3.64051 7.51038 4.43017 5.13067C5.21984 2.75096 7.14415 0.925279 9.55698 0.266643C9.95007 0.157251 10.3545 0.0866019 10.7522 0L12.2518 1.61932e-15ZM11.4884 13.7948C14.0295 13.8077 16.3277 12.2829 17.3102 9.93242C18.2926 7.58189 17.7654 4.86919 15.9748 3.06078C14.1841 1.25238 11.4832 0.704965 9.13291 1.67411C6.78265 2.64325 5.24665 4.93781 5.24202 7.48651C5.24318 10.9531 8.03216 13.7697 11.4884 13.7948L11.4884 13.7948Z\" id=\"Shape\" fill=\"#CDCDCD\" stroke=\"none\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </button>\r\n                                {/* <input type=\"checkbox\" value=\"username\" onChange={handleChange} /> by user*/}\r\n                                <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n                                    <DropdownToggle caret style={{ color: 'black' }}>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu onChange={handleChange}>\r\n                                        <DropdownItem onClick={e => setFilter('username')}>By user</DropdownItem>\r\n                                        <DropdownItem onClick={e => setFilter('name')}>By event title</DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                                {/*<RadioGroup  className=\"radio_input col-md-5\" aria-label=\"gender\" name=\"gender1\" value={filter} onChange={handleChange}>\r\n                                               <FormControlLabel value=\"username\" control={<Radio />} label=\"By user\" />\r\n                                             </RadioGroup>*/}\r\n                            </Col>\r\n                        </form>\r\n                        <div className='row pt-2'>\r\n                            <div className='col-sm-4'>\r\n                            <Button className=\"event\" onClick={myevents}><h6>My Events</h6></Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row pt-2'>\r\n                            <div className='col-sm-4'>\r\n                                <Button className=\"event\" onClick={handleClickOpen}><h6>Add Events</h6></Button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" className='dialogForm'   >\r\n                            <form className='add__event' onSubmit={e => submit(e)}>\r\n                                <DialogTitle id=\"form-dialog-title\">Add Event</DialogTitle>\r\n                                <DialogContent>\r\n                                    <Row className=\" pt-1\">\r\n                                        <Col  sm={12} md={12} xl={12} className=' col-md-12'>\r\n                                            <FormControl\r\n                                                className='input_event'\r\n                                                placeholder=\"Title\"\r\n                                                margin=\"dense\"\r\n                                                id=\"Title\"\r\n                                                label=\"Title\"\r\n                                                type=\"text\"\r\n                                                name=\"name\" value={name} onChange={onnamechange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <div className=\"row pt-3\">\r\n                                        <div className='col-5'>\r\n                                            <FormControl\r\n                                                className='input_event'\r\n                                                margin=\"dense\"\r\n                                                id=\"Date\"\r\n                                                type=\"Date\"\r\n                                                name=\"date\" value={date} onChange={ondatechange}/>\r\n                                        </div>\r\n                                        <div className='col-7 '>\r\n                                            <select\r\n                                            className='col-md-12'\r\n                                               // placeholder='Category Event'\r\n                                                value={category_id}\r\n                                                name=\"category_id\"\r\n                                                onChange={oncategorychange}>\r\n                                                {categories && categories.map(c =>\r\n                                                    (<option key={c.id} value={c.id}>{c.name} </option>)\r\n                                                )}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Row className=\" pt-3\">\r\n                                        <Col sm={12} md={12} xl={12} >\r\n                                            <Select\r\n                                                className=\"form-control reg__input\" name=\"location\" value={location} onChange={onlocationchange}>\r\n                                                <option value=\"default\">Location</option>\r\n                                                <option value=\"Afganistan\" className='reg__input'>Afghanistan</option>\r\n                                                <option value=\"Albania\">Albania</option>\r\n                                                <option value=\"Algeria\">Algeria</option>\r\n                                                <option value=\"American Samoa\">American Samoa</option>\r\n                                                <option value=\"Andorra\">Andorra</option>\r\n                                                <option value=\"Angola\">Angola</option>\r\n                                                <option value=\"Anguilla\">Anguilla</option>\r\n                                                <option value=\"Antigua & Barbuda\">Antigua & Barbuda</option>\r\n                                                <option value=\"Argentina\">Argentina</option>\r\n                                                <option value=\"Armenia\">Armenia</option>\r\n                                                <option value=\"Aruba\">Aruba</option>\r\n                                                <option value=\"Australia\">Australia</option>\r\n                                                <option value=\"Austria\">Austria</option>\r\n                                                <option value=\"Azerbaijan\">Azerbaijan</option>\r\n                                                <option value=\"Bahamas\">Bahamas</option>\r\n                                                <option value=\"Bahrain\">Bahrain</option>\r\n                                                <option value=\"Bangladesh\">Bangladesh</option>\r\n                                                <option value=\"Barbados\">Barbados</option>\r\n                                                <option value=\"Belarus\">Belarus</option>\r\n                                                <option value=\"Belgium\">Belgium</option>\r\n                                                <option value=\"Belize\">Belize</option>\r\n                                                <option value=\"Benin\">Benin</option>\r\n                                                <option value=\"Bermuda\">Bermuda</option>\r\n                                                <option value=\"Bhutan\">Bhutan</option>\r\n                                                <option value=\"Bolivia\">Bolivia</option>\r\n                                                <option value=\"Bonaire\">Bonaire</option>\r\n                                                <option value=\"Bosnia & Herzegovina\">Bosnia & Herzegovina</option>\r\n                                                <option value=\"Botswana\">Botswana</option>\r\n                                                <option value=\"Brazil\">Brazil</option>\r\n                                                <option value=\"British Indian Ocean Ter\">British Indian Ocean Ter</option>\r\n                                                <option value=\"Brunei\">Brunei</option>\r\n                                                <option value=\"Bulgaria\">Bulgaria</option>\r\n                                                <option value=\"Burkina Faso\">Burkina Faso</option>\r\n                                                <option value=\"Burundi\">Burundi</option>\r\n                                                <option value=\"Cambodia\">Cambodia</option>\r\n                                                <option value=\"Cameroon\">Cameroon</option>\r\n                                                <option value=\"Canada\">Canada</option>\r\n                                                <option value=\"Canary Islands\">Canary Islands</option>\r\n                                                <option value=\"Cape Verde\">Cape Verde</option>\r\n                                                <option value=\"Cayman Islands\">Cayman Islands</option>\r\n                                                <option value=\"Central African Republic\">Central African Republic</option>\r\n                                                <option value=\"Chad\">Chad</option>\r\n                                                <option value=\"Channel Islands\">Channel Islands</option>\r\n                                                <option value=\"Chile\">Chile</option>\r\n                                                <option value=\"China\">China</option>\r\n                                                <option value=\"Christmas Island\">Christmas Island</option>\r\n                                                <option value=\"Cocos Island\">Cocos Island</option>\r\n                                                <option value=\"Colombia\">Colombia</option>\r\n                                                <option value=\"Comoros\">Comoros</option>\r\n                                                <option value=\"Congo\">Congo</option>\r\n                                                <option value=\"Cook Islands\">Cook Islands</option>\r\n                                                <option value=\"Costa Rica\">Costa Rica</option>\r\n                                                <option value=\"Cote DIvoire\">Cote DIvoire</option>\r\n                                                <option value=\"Croatia\">Croatia</option>\r\n                                                <option value=\"Cuba\">Cuba</option>\r\n                                                <option value=\"Curaco\">Curacao</option>\r\n                                                <option value=\"Cyprus\">Cyprus</option>\r\n                                                <option value=\"Czech Republic\">Czech Republic</option>\r\n                                                <option value=\"Denmark\">Denmark</option>\r\n                                                <option value=\"Djibouti\">Djibouti</option>\r\n                                                <option value=\"Dominica\">Dominica</option>\r\n                                                <option value=\"Dominican Republic\">Dominican Republic</option>\r\n                                                <option value=\"East Timor\">East Timor</option>\r\n                                                <option value=\"Ecuador\">Ecuador</option>\r\n                                                <option value=\"Egypt\">Egypt</option>\r\n                                                <option value=\"El Salvador\">El Salvador</option>\r\n                                                <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\r\n                                                <option value=\"Eritrea\">Eritrea</option>\r\n                                                <option value=\"Estonia\">Estonia</option>\r\n                                                <option value=\"Ethiopia\">Ethiopia</option>\r\n                                                <option value=\"Falkland Islands\">Falkland Islands</option>\r\n                                                <option value=\"Faroe Islands\">Faroe Islands</option>\r\n                                                <option value=\"Fiji\">Fiji</option>\r\n                                                <option value=\"Finland\">Finland</option>\r\n                                                <option value=\"France\">France</option>\r\n                                                <option value=\"French Guiana\">French Guiana</option>\r\n                                                <option value=\"French Polynesia\">French Polynesia</option>\r\n                                                <option value=\"French Southern Ter\">French Southern Ter</option>\r\n                                                <option value=\"Gabon\">Gabon</option>\r\n                                                <option value=\"Gambia\">Gambia</option>\r\n                                                <option value=\"Georgia\">Georgia</option>\r\n                                                <option value=\"Germany\">Germany</option>\r\n                                                <option value=\"Ghana\">Ghana</option>\r\n                                                <option value=\"Gibraltar\">Gibraltar</option>\r\n                                                <option value=\"Great Britain\">Great Britain</option>\r\n                                                <option value=\"Greece\">Greece</option>\r\n                                                <option value=\"Greenland\">Greenland</option>\r\n                                                <option value=\"Grenada\">Grenada</option>\r\n                                                <option value=\"Guadeloupe\">Guadeloupe</option>\r\n                                                <option value=\"Guam\">Guam</option>\r\n                                                <option value=\"Guatemala\">Guatemala</option>\r\n                                                <option value=\"Guinea\">Guinea</option>\r\n                                                <option value=\"Guyana\">Guyana</option>\r\n                                                <option value=\"Haiti\">Haiti</option>\r\n                                                <option value=\"Hawaii\">Hawaii</option>\r\n                                                <option value=\"Honduras\">Honduras</option>\r\n                                                <option value=\"Hong Kong\">Hong Kong</option>\r\n                                                <option value=\"Hungary\">Hungary</option>\r\n                                                <option value=\"Iceland\">Iceland</option>\r\n                                                <option value=\"Indonesia\">Indonesia</option>\r\n                                                <option value=\"India\">India</option>\r\n                                                <option value=\"Iran\">Iran</option>\r\n                                                <option value=\"Iraq\">Iraq</option>\r\n                                                <option value=\"Ireland\">Ireland</option>\r\n                                                <option value=\"Isle of Man\">Isle of Man</option>\r\n                                                <option value=\"Israel\">Israel</option>\r\n                                                <option value=\"Italy\">Italy</option>\r\n                                                <option value=\"Jamaica\">Jamaica</option>\r\n                                                <option value=\"Japan\">Japan</option>\r\n                                                <option value=\"Jordan\">Jordan</option>\r\n                                                <option value=\"Kazakhstan\">Kazakhstan</option>\r\n                                                <option value=\"Kenya\">Kenya</option>\r\n                                                <option value=\"Kiribati\">Kiribati</option>\r\n                                                <option value=\"Korea North\">Korea North</option>\r\n                                                <option value=\"Korea Sout\">Korea South</option>\r\n                                                <option value=\"Kuwait\">Kuwait</option>\r\n                                                <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\r\n                                                <option value=\"Laos\">Laos</option>\r\n                                                <option value=\"Latvia\">Latvia</option>\r\n                                                <option value=\"Lebanon\">Lebanon</option>\r\n                                                <option value=\"Lesotho\">Lesotho</option>\r\n                                                <option value=\"Liberia\">Liberia</option>\r\n                                                <option value=\"Libya\">Libya</option>\r\n                                                <option value=\"Liechtenstein\">Liechtenstein</option>\r\n                                                <option value=\"Lithuania\">Lithuania</option>\r\n                                                <option value=\"Luxembourg\">Luxembourg</option>\r\n                                                <option value=\"Macau\">Macau</option>\r\n                                                <option value=\"Macedonia\">Macedonia</option>\r\n                                                <option value=\"Madagascar\">Madagascar</option>\r\n                                                <option value=\"Malaysia\">Malaysia</option>\r\n                                                <option value=\"Malawi\">Malawi</option>\r\n                                                <option value=\"Maldives\">Maldives</option>\r\n                                                <option value=\"Mali\">Mali</option>\r\n                                                <option value=\"Malta\">Malta</option>\r\n                                                <option value=\"Marshall Islands\">Marshall Islands</option>\r\n                                                <option value=\"Martinique\">Martinique</option>\r\n                                                <option value=\"Mauritania\">Mauritania</option>\r\n                                                <option value=\"Mauritius\">Mauritius</option>\r\n                                                <option value=\"Mayotte\">Mayotte</option>\r\n                                                <option value=\"Mexico\">Mexico</option>\r\n                                                <option value=\"Midway Islands\">Midway Islands</option>\r\n                                                <option value=\"Moldova\">Moldova</option>\r\n                                                <option value=\"Monaco\">Monaco</option>\r\n                                                <option value=\"Mongolia\">Mongolia</option>\r\n                                                <option value=\"Montserrat\">Montserrat</option>\r\n                                                <option value=\"Morocco\">Morocco</option>\r\n                                                <option value=\"Mozambique\">Mozambique</option>\r\n                                                <option value=\"Myanmar\">Myanmar</option>\r\n                                                <option value=\"Nambia\">Nambia</option>\r\n                                                <option value=\"Nauru\">Nauru</option>\r\n                                                <option value=\"Nepal\">Nepal</option>\r\n                                                <option value=\"Netherland Antilles\">Netherland Antilles</option>\r\n                                                <option value=\"Netherlands\">Netherlands (Holland, Europe)</option>\r\n                                                <option value=\"Nevis\">Nevis</option>\r\n                                                <option value=\"New Caledonia\">New Caledonia</option>\r\n                                                <option value=\"New Zealand\">New Zealand</option>\r\n                                                <option value=\"Nicaragua\">Nicaragua</option>\r\n                                                <option value=\"Niger\">Niger</option>\r\n                                                <option value=\"Nigeria\">Nigeria</option>\r\n                                                <option value=\"Niue\">Niue</option>\r\n                                                <option value=\"Norfolk Island\">Norfolk Island</option>\r\n                                                <option value=\"Norway\">Norway</option>\r\n                                                <option value=\"Oman\">Oman</option>\r\n                                                <option value=\"Pakistan\">Pakistan</option>\r\n                                                <option value=\"Palau Island\">Palau Island</option>\r\n                                                <option value=\"Palestine\">Palestine</option>\r\n                                                <option value=\"Panama\">Panama</option>\r\n                                                <option value=\"Papua New Guinea\">Papua New Guinea</option>\r\n                                                <option value=\"Paraguay\">Paraguay</option>\r\n                                                <option value=\"Peru\">Peru</option>\r\n                                                <option value=\"Phillipines\">Philippines</option>\r\n                                                <option value=\"Pitcairn Island\">Pitcairn Island</option>\r\n                                                <option value=\"Poland\">Poland</option>\r\n                                                <option value=\"Portugal\">Portugal</option>\r\n                                                <option value=\"Puerto Rico\">Puerto Rico</option>\r\n                                                <option value=\"Qatar\">Qatar</option>\r\n                                                <option value=\"Republic of Montenegro\">Republic of Montenegro</option>\r\n                                                <option value=\"Republic of Serbia\">Republic of Serbia</option>\r\n                                                <option value=\"Reunion\">Reunion</option>\r\n                                                <option value=\"Romania\">Romania</option>\r\n                                                <option value=\"Russia\">Russia</option>\r\n                                                <option value=\"Rwanda\">Rwanda</option>\r\n                                                <option value=\"St Barthelemy\">St Barthelemy</option>\r\n                                                <option value=\"St Eustatius\">St Eustatius</option>\r\n                                                <option value=\"St Helena\">St Helena</option>\r\n                                                <option value=\"St Kitts-Nevis\">St Kitts-Nevis</option>\r\n                                                <option value=\"St Lucia\">St Lucia</option>\r\n                                                <option value=\"St Maarten\">St Maarten</option>\r\n                                                <option value=\"St Pierre & Miquelon\">St Pierre & Miquelon</option>\r\n                                                <option value=\"St Vincent & Grenadines\">St Vincent & Grenadines</option>\r\n                                                <option value=\"Saipan\">Saipan</option>\r\n                                                <option value=\"Samoa\">Samoa</option>\r\n                                                <option value=\"Samoa American\">Samoa American</option>\r\n                                                <option value=\"San Marino\">San Marino</option>\r\n                                                <option value=\"Sao Tome & Principe\">Sao Tome & Principe</option>\r\n                                                <option value=\"Saudi Arabia\">Saudi Arabia</option>\r\n                                                <option value=\"Senegal\">Senegal</option>\r\n                                                <option value=\"Seychelles\">Seychelles</option>\r\n                                                <option value=\"Sierra Leone\">Sierra Leone</option>\r\n                                                <option value=\"Singapore\">Singapore</option>\r\n                                                <option value=\"Slovakia\">Slovakia</option>\r\n                                                <option value=\"Slovenia\">Slovenia</option>\r\n                                                <option value=\"Solomon Islands\">Solomon Islands</option>\r\n                                                <option value=\"Somalia\">Somalia</option>\r\n                                                <option value=\"South Africa\">South Africa</option>\r\n                                                <option value=\"Spain\">Spain</option>\r\n                                                <option value=\"Sri Lanka\">Sri Lanka</option>\r\n                                                <option value=\"Sudan\">Sudan</option>\r\n                                                <option value=\"Suriname\">Suriname</option>\r\n                                                <option value=\"Swaziland\">Swaziland</option>\r\n                                                <option value=\"Sweden\">Sweden</option>\r\n                                                <option value=\"Switzerland\">Switzerland</option>\r\n                                                <option value=\"Syria\">Syria</option>\r\n                                                <option value=\"Tahiti\">Tahiti</option>\r\n                                                <option value=\"Taiwan\">Taiwan</option>\r\n                                                <option value=\"Tajikistan\">Tajikistan</option>\r\n                                                <option value=\"Tanzania\">Tanzania</option>\r\n                                                <option value=\"Thailand\">Thailand</option>\r\n                                                <option value=\"Togo\">Togo</option>\r\n                                                <option value=\"Tokelau\">Tokelau</option>\r\n                                                <option value=\"Tonga\">Tonga</option>\r\n                                                <option value=\"Trinidad & Tobago\">Trinidad & Tobago</option>\r\n                                                <option value=\"Tunisia\">Tunisia</option>\r\n                                                <option value=\"Turkey\">Turkey</option>\r\n                                                <option value=\"Turkmenistan\">Turkmenistan</option>\r\n                                                <option value=\"Turks & Caicos Is\">Turks & Caicos Is</option>\r\n                                                <option value=\"Tuvalu\">Tuvalu</option>\r\n                                                <option value=\"Uganda\">Uganda</option>\r\n                                                <option value=\"United Kingdom\">United Kingdom</option>\r\n                                                <option value=\"Ukraine\">Ukraine</option>\r\n                                                <option value=\"United Arab Erimates\">United Arab Emirates</option>\r\n                                                <option value=\"United States of America\">United States of America</option>\r\n                                                <option value=\"Uraguay\">Uruguay</option>\r\n                                                <option value=\"Uzbekistan\">Uzbekistan</option>\r\n                                                <option value=\"Vanuatu\">Vanuatu</option>\r\n                                                <option value=\"Vatican City State\">Vatican City State</option>\r\n                                                <option value=\"Venezuela\">Venezuela</option>\r\n                                                <option value=\"Vietnam\">Vietnam</option>\r\n                                                <option value=\"Virgin Islands (Brit)\">Virgin Islands (Brit)</option>\r\n                                                <option value=\"Virgin Islands (USA)\">Virgin Islands (USA)</option>\r\n                                                <option value=\"Wake Island\">Wake Island</option>\r\n                                                <option value=\"Wallis & Futana Is\">Wallis & Futana Is</option>\r\n                                                <option value=\"Yemen\">Yemen</option>\r\n                                                <option value=\"Zaire\">Zaire</option>\r\n                                                <option value=\"Zambia\">Zambia</option>\r\n                                                <option value=\"Zimbabwe\">Zimbabwe</option>\r\n                                            </Select>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"pt-3\">\r\n                                        <Col  sm={12} md={12} xl={12} >\r\n                                            <FormControl\r\n                                                placeholder=\"Description\"\r\n                                                className='input_event'\r\n                                                margin=\"dense\"\r\n                                                id=\"Description\"\r\n                                                as=\"textarea\" aria-label=\"With textarea\"\r\n                                                type=\"textarea\"\r\n                                                name=\"description\" value={description} onChange={ondescchange}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=' pt-3'>\r\n                                        <Col  sm={12} md={12} xl={12} className=\"btn-group btn-group-toggle \">\r\n                                            <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={oncoverchange} />\r\n                                            { /*<Button variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                                <span  >Upload Video </span>\r\n\r\n                                                </Button>*/}\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <div className=\"row pt-3\">\r\n                                        <div className='col-sm-12'>\r\n                                            <FormControl\r\n                                                placeholder=\"Video Link\"\r\n                                                className='input_event'\r\n                                                margin=\"dense\"\r\n                                                id=\"video\"\r\n\r\n                                                type=\"textarea\"\r\n                                                fullWidth\r\n                                                name=\"video_link\" value={video_link} onChange={onlinkchange}            \r\n                                            />\r\n                                            <FormControl\r\n                                        // placeholder={event && event.status}\r\n                                        className='input_event'\r\n                                        hidden='true'\r\n                                        id=\"status\"\r\n                                        name=\"status\" value={status.toString()}\r\n                                        type=\"textarea\"\r\n                                        fullWidth\r\n                                        onChange={onstatuschange}\r\n                                    />\r\n                                    disable event\r\n                                    <Switch\r\n                                        checked={state.checkedA}\r\n\r\n                                        onChange={handleswitch}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    /> enable event</div></div>\r\n                                    <div className='row pt-2 px-0'>\r\n                                        <div className='col-md-9'></div>\r\n                                        <div className='col-md-3'>\r\n                                            <Button type='submit'\r\n                                                style={{ backgroundColor: \"#f2f3f3\", color: 'black', borderRadius: '0' }}\r\n                                                onClick={handleClose}>\r\n                                                Add Event\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </DialogContent>\r\n\r\n\r\n\r\n                            </form>\r\n                        </Dialog>\r\n                    </Col>\r\n                    <Row  className='col-md-9 ' id='body'>\r\n                        <Row>\r\n                            <Col md={12} className=' pb-4'><h6 className=\"h66\"><b>Featured</b></h6></Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col md={2} sm={2} xl={2}> \r\n                                <Image src='https://picsum.photos/id/99/200/300'  width=\"200\" height=\"180\" alt='event' rounded className='product'/>\r\n                                <div className='description'>\r\n                                    <span>lorem ipsuem</span> <br />\r\n                                    <span>lorem ipsuem</span> <br />\r\n                            </div>\r\n                            </Col> <Col sm={1} md={1}></Col>\r\n                            <Col md={2} sm={2} xl={2} >\r\n                            <Image src='https://picsum.photos/id/100/200/300' width=\"200\" height=\"180\" alt='event' rounded className='product'/>\r\n                                <div className='description'>\r\n\r\n                                    <span>lorem ipsuem</span> <br />\r\n                                    <span>lorem ipsuem</span> <br />\r\n                              \r\n                            </div></Col> <Col sm={1} md={1}></Col>\r\n                            <Col md={2} sm={2} xl={2} >\r\n                            <Image src='https://picsum.photos/id/77/200/300'  width=\"200\" height=\"180\" alt='event' rounded className='product'/>\r\n                                    <div className='description'>\r\n                                        <span>lorem ipsuem</span> <br />\r\n                                        <span>lorem ipsuem</span> <br />\r\n                                    </div>\r\n                             \r\n                            </Col>\r\n                            <Col sm={1} md={1}></Col>\r\n                            <Col md={2} sm={2} xl={2} >\r\n                            <Image src='https://picsum.photos/id/98/200/300' width=\"200\" height=\"180\"alt='event' rounded className='product'/>\r\n                                    <div className='description'>\r\n                                        <span>lorem ipsuem</span> <br />\r\n                                        <span>lorem ipsuem</span> <br />\r\n                                    </div>\r\n                               \r\n                            </Col>\r\n\r\n                        </Row>\r\n                              <div className='row'>\r\n                            <div className='col-md-12 mt-5 mb-3'> <h6 className=\"h66\"><b>All Events</b></h6></div>\r\n                            <div className='row'>\r\n                                {events && events.map((event) =>\r\n                                (\r\n                                    <Single key={event.id} event={event} />)\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Row>\r\n            </Row>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nEvents.prototype = {\r\n    addEvent: PropTypes.func.isRequired,\r\n    getevents: PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    sortEvents: PropTypes.func.isRequired,\r\n    myevents: PropTypes.func.isRequired,\r\n    search: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    addEvent: state.addEvent,\r\n    events: state.events,\r\n    categories: state.categories,\r\n})\r\nexport default connect(mapStateToProps, { addEvent, getevents, sortEvents, myevents, search })(Events);\r\n","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Search\\Searchitem.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\messages\\Messages.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\ProductItem.js",["411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428"],"import React from 'react' ;\r\nimport { Fragment ,useState, useEffect} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { IoBasketSharp } from 'react-icons/io5';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { updateProduct } from '../../../../Actions/Market';\r\nimport { addCart } from '../../../../Actions/cart';\r\nimport {  deleteProduct, getProduct,getMarket } from '../../../../Actions/Market';\r\nimport { showCart } from '../../../../Actions/cart';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { MdAddShoppingCart } from 'react-icons/md';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport '../Market.css';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport SingleProduct from './SingleProduct';\r\nimport UpdateProduct from './UpdateProduct';\r\nimport { Col } from 'reactstrap';\r\nimport { Row } from 'react-bootstrap';\r\nconst ProductItem = ( { auth: { user },getMarket, match, getProduct, deleteProduct,  market:{ product,categories} ,addCart ,updateProduct , loading , markets:{ markets},cart:{cart}, showCart }) => {\r\n     \r\n/****************************/\r\nuseEffect(() => {\r\n    getMarket()\r\n}, [getMarket])\r\nuseEffect(() => {\r\n    showCart()\r\n  },[showCart])\r\nuseEffect(() => {\r\n    getProduct(match.params.id);\r\n},  [getProduct, match.params.id]\r\n)\r\n/****************************/\r\n/****************************/\r\n/*****************************/    \r\nconst [open1, setOpen1] = React.useState(false);\r\nconst handleClickOpen1 = () => {\r\n    setOpen1(true);\r\n};\r\nconst handleClose1 = () => {\r\n    setOpen1(false);\r\n};\r\nconst [open2, setOpen2] = React.useState(false);\r\nconst handleClose2 = () => {\r\n    setOpen1(false);\r\n};\r\nconst handleOpen2 = () => {\r\n    setOpen1(true);\r\n};\r\n/*********************************/ \r\nconst [open, setOpen] = React.useState(false);\r\nconst handleClickOpen = () => {\r\n    setOpen(true);\r\n};\r\nconst handleClose = () => {\r\n    setOpen(false);\r\n};\r\n/****************************/    \r\n    return(\r\n        <Fragment>\r\n            <div className='pt-5'>\r\n                <Row >\r\n                    <Col sm={1}></Col>\r\n                    <Col sm={10}>\r\n                        <Row>\r\n                            <Col sm={10}></Col>\r\n                            <Col sm={2}>\r\n                                <button className='btn btn-outline-dark button__cart'>\r\n                                    <NavLink to={'/dashboard/cart'} className=\"link__cart\">\r\n                                        <span className='cart__span'>Basket <IoBasketSharp/>{cart && cart.carts ? <div>{cart.carts.length}</div>:<div></div>}\r\n                                        </span>\r\n                                    </NavLink>\r\n                                </button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <div className='row pt-3'>\r\n                <div className='col-sm-10 pl-5 ml-5'>\r\n                    <div className='card'> \r\n                        <div className='card-body'>\r\n                            <div className='row'>\r\n                            <div className='col-sm-4 ' >\r\n                                <img src={product && product.image} width=\"290\" height=\"300\" alt='market' />\r\n                            </div>           \r\n                <div className='col-sm-8 border py-3 pl-3'>\r\n                    <div className='row float-right'> <div className='col-md-12'><Button className='cart__btn' onClick={e=>addCart(product.id)}> <MdAddShoppingCart  style={{fontSize:'19px'}} /> Add to Cart</Button>                      \r\n                    </div> </div>\r\n                   <div className='row '>\r\n                       <div className='row '>\r\n                        <div className='col-sm-10 pl-2'>\r\n                            <div className='row'>\r\n                            <div className='col-sm-4'>\r\n                            <label className='prod_details'>Product Name:</label> \r\n                            </div>\r\n                            <div className='col-sm-5'>\r\n                            <label className='prod_details'> {product && product.name.charAt(0).toUpperCase() + product.name.slice(1) }</label>\r\n                            </div>\r\n                            </div>\r\n                 </div>\r\n                 <div className='row'>\r\n                        <div className='col-sm-10 pl-2'>\r\n                        <div className='row'>\r\n                        <div className='col-sm-4' >\r\n                         <label className='prod_details'>Price :</label>\r\n                         </div>\r\n                         <div className='col-sm-5' >\r\n                          <label className='prod_details'>{ product && product.price } $</label>\r\n                         </div>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-sm-8 pl-2'>\r\n                        <div className='row'>\r\n                        <div className='col-sm-4' >\r\n                            <label className='prod_details'>Quantity :</label>\r\n                            </div>\r\n                            <div className='col-sm-5'>\r\n                            <label className='prod_details'> { product && product.stock }</label>\r\n                            </div>   \r\n                           </div>\r\n                        </div>  \r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className='col-md-9 pl-2'>\r\n                            <div className='row'>\r\n                                <div className='col-sm-4'>\r\n                                    <label className='prod_details'>\r\n                                    Description:\r\n                                    </label> \r\n                                </div>\r\n                         <div className='col-sm-8'>\r\n                         <label className='prod_details'>\r\n                         { product && product.description } \r\n                         </label> \r\n                         </div>\r\n                            </div>      \r\n                                   </div>\r\n                                     </div>    \r\n                                   </div> \r\n                                                 \r\n                                     </div>\r\n                                     <div className='row mt-5'></div>\r\n                                     <div className='row'>\r\n                            <div className='col-md-10 '>{user  && product && user.user_id ===   product.user.id?\r\n                 <div className='col-sm-12 pt-5'>\r\n                       <Button onClick={handleClickOpen} ><FaEdit style={{fontSize:'19px'}} /> Edit Product  </Button> \r\n                        <Dialog open={open} onClose={handleClose}\r\n                          className='updateProd'>\r\n                                <UpdateProduct />\r\n             \r\n                        </Dialog> \r\n                        \r\n                        </div> \r\n                        : (<div></div>)}\r\n                        </div>\r\n                            <div className='col-md-2 pt-5 '>  {user &&  product && user.user_id===   product.user.id ?\r\n                        <Link className='delete_prod' to='/dashboard/marketplace' >\r\n                           <Button className='' onClick={e=>deleteProduct(match.params.id)}> <DeleteOutlineRoundedIcon  style={{fontSize:'19px'}} /> Delete </Button>                      \r\n                        </Link>\r\n                        : (<div></div>)}</div>\r\n                           \r\n                        </div>\r\n                                </div>\r\n                                       \r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n                    \r\n                             <hr/>\r\n                <div className='bot_section ' className='pt-3 '>\r\n                    <div className='row'>\r\n                        <div className='col-1'></div>\r\n                        <div className='col-11'><h5>Similar Products</h5></div> \r\n                        <div className='row'>\r\n                        <OwlCarousel className=\"slider-items owl-carousel pt-4\"  autoplay='true' autoplaySpeed='2000'>\r\n                        {markets && markets.map((markets) =>\r\n                                (\r\n                                    <div>\r\n                                    <Col key={markets.id} markets={markets}  className='products'>\r\n                                    <Col><img src={markets.image} width='180px' height='250' style={{borderRadius:'5px'}}  className='pb-2'/></Col>\r\n                                    </Col>\r\n                                    </div>\r\n                                    )\r\n                                )}\r\n                        </OwlCarousel>\r\n                        </div>     \r\n                          </div>\r\n                    </div>            \r\n              </div>\r\n        </div> \r\n  </div>\r\n\r\n        </Fragment>\r\n    )\r\n\r\n}\r\nProductItem.propTypes = {\r\n    market: PropTypes.object.isRequired,\r\n    auth :PropTypes.object.isRequired,\r\n    getProduct: PropTypes.func.isRequired,\r\n    deleteProduct: PropTypes.func.isRequired,\r\n    addCart:PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    updateProduct : PropTypes.func.isRequired,\r\n    getMarket: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    market: state.market,\r\n    updateProduct: state.market,\r\n    categories: state.market,\r\n    product : state.product,\r\n    updateProduct: state.market,\r\n    markets: state.market,\r\n    cart: state.cart,\r\n    carts: state.cart\r\n})\r\nexport default connect(mapStateToProps ,{ getProduct , deleteProduct, addCart, updateProduct, getMarket, showCart })(ProductItem);","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\Profile.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Reducers\\cart.js",["429","430","431","432","433","434"],"import {\r\n    DECREASE,\r\n    INCREASE,\r\n    CLEAR_CART,\r\n    REMOVE,\r\n    GET_TOTALS,\r\n    TOGGLE_AMOUNT,\r\n    GET_CART,\r\n    ADD_CART,\r\n    DELETE_PROD_CART,\r\n    UPDATE_QUANTITY,\r\n    CHECKOUT,\r\n    MY_ORDERS,\r\n    ORDER_FAILS,\r\n    PAYMENT_ERROR,\r\n    PAYMENT_SUCCESS\r\n  } from '../Actions/types';\r\n  \r\n  const initialStore = {\r\n    cart: [],\r\n    carts:[],\r\n    total: 0,\r\n    amount: 0,\r\n    order:null,\r\n    orders:[]\r\n  };\r\n  function reducer(state = initialStore, action) {\r\n     if (action.type === GET_CART){\r\n         return {\r\n             ...state,\r\n             cart: action.payload\r\n         }\r\n     }\r\n     if (action.type === ADD_CART){\r\n      return {\r\n          ...state,\r\n       // cart:[...state.cart,action.payload]\r\n      }\r\n  }\r\n     if (action.type === DELETE_PROD_CART) {\r\n         return {\r\n             ...state,\r\n             cart:state.cart.carts.filter(cart => cart.cart_id !== action.payload)\r\n         }\r\n     }\r\n     if (action.type === UPDATE_QUANTITY){\r\n       return {\r\n         ...state,\r\n         cart: action.payload\r\n       }\r\n     }\r\n     if (action.type === CHECKOUT){\r\n      return {\r\n        ...state,\r\n        order: action.payload\r\n      }\r\n    }\r\n    if (action.type === MY_ORDERS){\r\n      return {\r\n        ...state,\r\n        orders: action.payload\r\n      }\r\n    }\r\n    if (action.type === ORDER_FAILS){\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n    if (action.type === PAYMENT_SUCCESS){\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n    if (action.type === PAYMENT_ERROR){\r\n      return {\r\n        ...state\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n  \r\n  export default reducer;","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\auth.red.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Reducers\\Board.js",["435"],"import { DELETE_THREAD, GET_THREAD, ADD_THREAD, UPDATE_THREAD, GET_ONETHREAD, SEARCH_THREAD  } from '../Actions/types';\r\nconst initialState = {\r\n    thread: [],\r\n    threads: null,\r\n    loading:true,\r\n    isAuthenticated: false,\r\n    error :{}\r\n};\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case GET_THREAD:\r\n            return {\r\n                ...state,\r\n                thread:payload,\r\n                loading:false\r\n            }\r\n        case ADD_THREAD:\r\n            return {\r\n                ...state,\r\n                thread:[payload,...state.thread],\r\n                loading:false\r\n            }\r\n        case DELETE_THREAD:\r\n            return {\r\n                ...state,\r\n                thread:state.thread.filter(thread => thread.data.id !==payload)\r\n            }\r\n        case UPDATE_THREAD: {\r\n            return{\r\n                ...state,\r\n                thread:payload,\r\n                loading:false,\r\n            }\r\n        }\r\n        case GET_ONETHREAD: {\r\n            return{\r\n                ...state,\r\n                threads:payload\r\n            }\r\n        }\r\n        case SEARCH_THREAD: {\r\n            return{\r\n                ...state,\r\n                thread: payload,\r\n                loading:false\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\Post.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Reducers\\Replies.js",["436"],"import { ADD_REPLY, DELETE_REPLY, GET_REPLIES, UPDATE_REPLY } from '../Actions/types';\r\nconst initialState = {\r\n    replies: [],\r\n    loading:true,\r\n    isAuthenticated: false,\r\n    error :{}\r\n};\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case GET_REPLIES:\r\n            return {\r\n                ...state,\r\n                replies:payload,\r\n                loading:false\r\n            }\r\n        case ADD_REPLY: \r\n        return{\r\n            ...state,\r\n            replies:payload,\r\n            loading:false\r\n        }\r\n        case DELETE_REPLY:\r\n            return{\r\n                ...state,\r\n                replies:state.replies.filter(replies => replies.id !==payload)\r\n            }\r\n        case UPDATE_REPLY :\r\n            return{\r\n            ...state,\r\n            replies:payload,\r\n            loading:false,\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","D:\\work\\Project\\fishComb_Front\\src\\Reducers\\events.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Reducers\\friends.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Reducers\\market.js",["437","438","439"],"import { Pause } from '@material-ui/icons';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\nimport { GET_MARKETS, GET_MY_PRODUCTS, GET_PRODUCT, ADD_PRODUCT, DELETE_PRODUCT, UPDATE_PRODUCT, GATEGORIES_MARKET, SEARCH_PRODUCT} from '../Actions/types';\r\nconst initialState = {\r\n   markets:null,\r\n   myproducts:null,\r\n   categories:null,\r\n   product: null,\r\n   cart: null,\r\n   loading: true\r\n}\r\nexport default function (state = initialState, action){\r\n    const { type, payload } = action;\r\n    switch (type){\r\n        case GET_MARKETS:\r\n            return{\r\n                ...state,\r\n                markets:payload,\r\n            }\r\n        case GET_MY_PRODUCTS:\r\n            return{\r\n                ...state,\r\n                markets :payload,\r\n                loading:false\r\n            }\r\n        case ADD_PRODUCT:\r\n            return{\r\n                ...state,\r\n                markets :[payload,...state.markets],\r\n                loading:false\r\n            }\r\n        case SEARCH_PRODUCT:\r\n            return{\r\n                ...state,\r\n                markets: payload,\r\n                loading:false\r\n            }\r\n        case GET_PRODUCT:\r\n            return{\r\n                ...state,\r\n                product:payload,\r\n                loading:false\r\n            }\r\n        case DELETE_PRODUCT:\r\n            return{\r\n                ...state,\r\n                markest: state.markets.filter(product => product.id !== payload),\r\n            }\r\n        case UPDATE_PRODUCT:\r\n            return{\r\n                ...state,\r\n                product: payload,\r\n                loading:false\r\n            }\r\n        case GATEGORIES_MARKET:\r\n            return {\r\n                ...state,\r\n                categories:payload\r\n            }\r\n            default:\r\n                return state;\r\n        }\r\n}\r\n    \r\n","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\Replies.js",["440","441","442","443","444"],"import React from 'react';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getoneThread } from '../../../Actions/Board';\r\nimport { getReplies, addReplies } from '../../../Actions/Replies';\r\nimport PropTypes from 'prop-types';\r\nimport { Col, Row, Card, Image } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Button } from '@material-ui/core';\r\nimport SingleReply from './SingleReply';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport './Board.css';\r\n\r\nconst Replies = ( {auth:{user}, thread: {threads} , match , getoneThread, getReplies , Replies: {replies} ,addReplies} ) => {\r\n/**************************************/\r\nconst [open, setOpen] = React.useState(false);\r\nconst handleClickOpen = () => {\r\n    setOpen(true);\r\n};\r\n  const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n/**************************************/\r\n    useEffect(() => {\r\n        getoneThread(match.params.id);\r\n    },  [getoneThread, match.params.id])\r\n    useEffect(() => {\r\n        getReplies(match.params.id);\r\n    }, [getReplies, match.params.id])\r\n/**************************************/\r\nconst [formData, setformData] = useState({\r\n    body: '',\r\n})\r\nconst { body } = formData;\r\n    const onchange = e => setformData({ ...formData, [e.target.name]: e.target.value });\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        addReplies(formData, threads.data.id);\r\n        setformData({\r\n            body: ''  \r\n        })\r\n    }\r\n/**************************************/\r\n    return (\r\n       <Fragment>\r\n           <Row className='pt-5 pb-5'>\r\n               <Col xs={2}></Col>\r\n               <Col xs={8} className='pt-4'>\r\n                    <Card className='pt-3'> \r\n                        <Row className='pt-3 pb-3'>\r\n                            <Col xs={1}></Col>\r\n                            <Col xs={4}>\r\n                                <h4><b>{threads && threads.data.title.charAt(0).toUpperCase() + threads.data.title.slice(1)}</b></h4>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className='pt-3 pb-5'>\r\n                            <Col xs={1}></Col>\r\n                            <Col xs={11}>\r\n                                <Row className='pt-2 pb-2'>\r\n                                    <Col xs={9}>\r\n                                        <span>{threads && threads.data.body.charAt(0).toUpperCase() + threads.data.body.slice(1)}</span>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='pt-3 pb-5'>\r\n                                    <Col XS={1}></Col>\r\n                                    <Col xs={11}>\r\n                                        <Image src={threads && threads.data.image}  width=\"250\" height=\"200\" alt='event' rounded className='product'/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n               </Col>\r\n           </Row>\r\n           <Row className='pt-5 pb-5'>\r\n                <Col xs={2}></Col>\r\n                <Col xs={8}>\r\n                    {replies && replies.map((replies) =>\r\n                        (\r\n                        <SingleReply key={replies.id} reply={replies}  />)\r\n                    )}\r\n                </Col>\r\n           </Row>\r\n           <form onSubmit={e => submit(e)}>\r\n           <Row className='pt-3 '>\r\n                <Col xs={2}></Col>\r\n                <Col xs={8} >\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Control as=\"textarea\"\r\n                            rows={3}\r\n                            className='input_event'\r\n                            name=\"body\" value={body} onChange={e => onchange(e)} />\r\n                    </Form.Group>\r\n               </Col>\r\n           </Row>\r\n           <Row className='pt-1 pb-5 '>\r\n               <Col xs={10}></Col>\r\n                <Col xs={1}>\r\n                    <Button className='' type='submit'>Replies</Button>\r\n                </Col>\r\n           </Row>\r\n           </form>\r\n           <Row>\r\n               <Col xs={8}></Col>\r\n           </Row>\r\n       </Fragment>\r\n    )\r\n}\r\nReplies.prototype={\r\n    addReplies: PropTypes.func.isRequired,\r\n    threads: PropTypes.object.isRequired,\r\n    Replies: PropTypes.object.isRequired,\r\n    getoneThread: PropTypes.func.isRequired,\r\n    getReplies: PropTypes.func.isRequired,\r\n    addReplies: PropTypes.func.isRequired,\r\n    reply: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    thread: state.Thread,\r\n    threads: state.threads,\r\n    Replies: state.Replies,\r\n    replies : state.Replies,\r\n    reply: state.Replies,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { getoneThread , getReplies, addReplies  }) (Replies)\r\n\r\n","D:\\work\\Project\\fishComb_Front\\src\\Actions\\profile.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\SingleProduct.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\products\\UpdateProduct.js",["445","446","447","448","449","450","451","452","453","454","455","456","457","458","459"],"import React from 'react';\r\nimport { Fragment, useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { updateProduct } from '../../../../Actions/Market';\r\nimport { Col, Row, Card, Image } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Switch from '@material-ui/core/Switch';\r\nconst UpdateProduct = ({ auth: { user }, updateProduct, market: { product, categories }, loading }) => {\r\n    /**********************************/\r\n    /*************************/\r\n    const [name, setname] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const [category_id, setcategoryid] = useState('')\r\n    const [price, setprice] = useState('')\r\n    const [stock, setstock] = useState('')\r\n    const [image, setimage] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    useEffect(() => {\r\n        setname(loading || !product.name ? '' : product.name)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setcategoryid(loading || !product.category_id ? '' : product.category_id)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setdescription(loading || !product.description ? '' : product.description)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setStatus(loading || !product.status ? 1 : product.status)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setimage(loading || !product.image ? '' : product.image)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setstock(loading || !product.stock ? '' : product.stock)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setprice(loading || !product.price ? '' : product.price)\r\n    }, [loading])\r\n\r\n    const onnamechange = e => {\r\n        setname(e.target.value)\r\n    }\r\n    const ondescchange = e => {\r\n        setdescription(e.target.value)\r\n    }\r\n    const oncategorychange = e => {\r\n        setcategoryid(e.target.value)\r\n    }\r\n    const onpricechange = e => {\r\n        setprice(e.target.value)\r\n    }\r\n    const onstockchange = e => {\r\n        setstock(e.target.value)\r\n    }\r\n    const onimagechange = e => {\r\n        setimage(e.target.files[0])\r\n    }\r\n    const onstatuschange = e => {\r\n        setStatus(e.target.value)\r\n    }\r\n    /**********************/\r\n    const [state, setState] = React.useState({ checkedA: true });\r\n    const handleswitch = (product) => {\r\n        setState({\r\n            ...state,\r\n            [product.target.name]: product.target.checked\r\n        });\r\n        if (product.target.checked === true) {\r\n            setStatus(1)\r\n        } else {\r\n            setStatus(0)\r\n        }\r\n        console.log(status)\r\n    };\r\n    /**************************/\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        const file = new FormData();\r\n        file.append('name', name);\r\n        file.append('description', description);\r\n        file.append('category_id', category_id);\r\n        file.append('price', price);\r\n        file.append('stock', stock);\r\n        file.append('image', image);\r\n        file.append('status', status);\r\n        updateProduct(file, product.id)\r\n        setOpen2(false);\r\n        e.target.reset();\r\n    }\r\n    /*****************************/\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n    const [open2, setOpen2] = React.useState(false);\r\n    const handleClose2 = () => {\r\n        setOpen2(false);\r\n    };\r\n    const handleOpen2 = () => {\r\n        setOpen1(true);\r\n    };\r\n    /*********************************/\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    /**********************************/\r\n    return (\r\n        <Fragment>\r\n\r\n            <div>\r\n                <form className='addProduct' onSubmit={e => submit(e)}>\r\n                    <DialogContent>\r\n                        <div className='row'>\r\n                            <div className='col-sm-1 mr-2'>\r\n                                <Avatar src={user && user.attributes.profile_image} />\r\n                            </div>\r\n                            <div className='col-sm-10 pt-3 '>\r\n                                <div className='row'>\r\n                                    <div className='row'>\r\n                                        <div className='col-sm-12 pb-3'>\r\n                                            <h6><b>{user && user.attributes.first_name.charAt(0).toUpperCase() + user.attributes.first_name.slice(1)}  {user && user.attributes.last_name.charAt(0).toUpperCase() + user.attributes.last_name.slice(1)}</b> </h6>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='row'>\r\n                                        <div className='row pt-3'>\r\n                                            <div className='col-sm-12'>\r\n                                                <Row>\r\n                                                    <Col xs={4}>\r\n                                                        <Form.Label>Name Product</Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={8}>\r\n                                                        <FormControl\r\n                                                            className='input_event'\r\n                                                            placeholder={product && product.name}\r\n                                                            label=\"Product_name\"\r\n                                                            name=\"name\" value={name}\r\n                                                            onChange={onnamechange}\r\n                                                            type=\"text\" />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row pt-3'>\r\n                                            <div className='col-sm-12'>\r\n                                                <Row>\r\n                                                    <Col xs={4}>\r\n                                                        <Form.Label>Price </Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={8}>\r\n                                                        <FormControl\r\n                                                            className='input_event'\r\n                                                            placeholder={product && product.price}\r\n                                                            margin=\"dense\"\r\n                                                            name=\"price\" value={price} onChange={onpricechange}\r\n                                                            type=\"text\" />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row pt-3 pb-3'>\r\n                                            <div className='row pt-3 '>\r\n                                                <div className='col-sm-12'>\r\n                                                    <Row>\r\n                                                        <Col xs={12}>\r\n                                                            <Select\r\n                                                                className='col-md-12'\r\n                                                                labelId=\"demo-controlled-open-select-label\"\r\n                                                                id=\"demo-controlled-open-select\"\r\n                                                                open={open1}\r\n                                                                onClose={handleClose1}\r\n                                                                onOpen={handleClickOpen1}\r\n                                                                value={category_id}\r\n                                                                name=\"category_id\"\r\n                                                                onChange={oncategorychange}>\r\n                                                                {categories && categories.map(c =>\r\n                                                                    (<MenuItem key={c.id} value={c.id} >{c.name}</MenuItem>)\r\n                                                                )}\r\n                                                            </Select>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row pt-2'>\r\n                                            <div className='col-12 pb-3'>\r\n                                                <Row>\r\n                                                    <Col xs={4}>\r\n                                                        <Form.Label>Quantity</Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={8}>\r\n                                                        <FormControl\r\n                                                            placeholder={product && product.stock}\r\n                                                            className='input_event'\r\n                                                            margin=\"dense\"\r\n                                                            name=\"stock\" value={stock} onChange={onstockchange}\r\n                                                            type=\"text\" />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row pt-3 pb-2'>\r\n                                            <div className='col-12'>\r\n                                                <Row>\r\n                                                    <Col xs={4}>\r\n                                                        <Form.Label>Description</Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={8}>\r\n                                                        <FormControl\r\n                                                            placeholder={product && product.description}\r\n                                                            className='input_event'\r\n                                                            margin=\"dense\"\r\n                                                            id=\"Description\"\r\n                                                            as=\"textarea\" aria-label=\"With textarea\"\r\n                                                            name=\"description\" value={description} onChange={ondescchange}\r\n                                                            type=\"textarea\" />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Row className='pt-2 pb-2'>\r\n                                            <Col xs={12}>\r\n                                                <FormControl // placeholder={event && event.status}\r\n                                                    className='input_event'\r\n                                                    hidden='true'\r\n                                                    id=\"status\"\r\n                                                    name=\"status\"\r\n                                                    value={\r\n                                                        status.toString()\r\n                                                    }\r\n                                                    type=\"textarea\"\r\n                                                    fullWidth\r\n                                                    onChange={onstatuschange} />\r\n                                                        Disable Product\r\n                                                    <Switch checked={\r\n                                                    state.checkedA\r\n                                                    }\r\n                                                    onChange={handleswitch}\r\n                                                    name=\"checkedA\"\r\n                                                    inputProps={\r\n                                                        { 'aria-label': 'secondary checkbox' }} />\r\n                                                    Enable Product\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <div className='row pt-3 pb-3'>\r\n                                            <div className='col-md-5'>\r\n                                                <div className='row '>\r\n                                                    <div className=\"btn-group btn-group-toggle col-md-12  \">\r\n                                                        <input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={onimagechange} name='image' />\r\n                                                        { /*<Button variant=\"outlined\" style={{ backgroundColor: '#202c43', color: 'white', borderRadius: '0' }}  >\r\n                                                        <span  >Upload Video </span>\r\n                                                        </Button>*/}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                       \r\n                                    </div>\r\n                                    <Row className='pt-3 pb-3'>\r\n                                        <Col xs={7}></Col>\r\n                                        <Col xs={5}>\r\n                                            <Button type='submit'\r\n                                                variant=\"contained\" color=\"primary\"\r\n                                                onClick={handleClose2}>\r\n                                                Update Product\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                </form>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\nUpdateProduct.prototype = {\r\n    auth: PropTypes.object.isRequired,\r\n    updateProduct: PropTypes.func.isRequired,\r\n    categories: PropTypes.object.isRequired,\r\n    market: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    market: state.market,\r\n    updateProduct: state.market,\r\n    categories: state.market,\r\n    auth: state.auth\r\n})\r\nexport default connect(mapStateToProps, { updateProduct })(UpdateProduct);","D:\\work\\Project\\fishComb_Front\\src\\Actions\\cart.js",["460","461","462","463","464","465"],"import axios from 'axios';\r\nimport { GET_CART, ADD_CART, DELETE_PROD_CART, UPDATE_QUANTITY, ERROR_UPDATE_QUANTITY, CART_ERROR, MY_ORDERS, ORDER_FAILS, PAYMENT_SUCCESS, PAYMENT_ERROR} from './types';\r\nimport {  CHECKOUT,CHECKOUT_FAILED} from './types';\r\nimport Cookies from 'js-cookie';\r\nimport { toast } from 'react-toastify';\r\ntoast.configure();\r\n\r\n//Show your cart \r\nexport const showCart = () => async dispatch =>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res =await axios.get('/api/cart',config)\r\n        dispatch ({\r\n            type: GET_CART,\r\n            payload: res.data\r\n        })\r\n       \r\n    }catch {\r\n        dispatch({\r\n            type: CART_ERROR,\r\n        })\r\n        toast.error('cart error')\r\n    }\r\n}\r\n//Add Cart\r\nexport const addCart = (product_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post('/api/cart',{product_id}, config)\r\n        dispatch ({\r\n            type: ADD_CART,\r\n            payload: res.data.data\r\n        })\r\n        toast.info('Product Add to you Basket')\r\n    }catch{\r\n\r\n    }\r\n}\r\n// Delete Product in cart \r\nexport const deleteProd = (cart_id) =>  async dispatch =>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {   \r\n        await axios.delete(`/api/cart/${cart_id}`,config)\r\n        const res =await axios.get('/api/cart',config)\r\n        dispatch ({\r\n            type: GET_CART,\r\n            payload: res.data\r\n        })\r\n        toast.success('Product Deleted')\r\n    }catch{\r\n\r\n    }\r\n}\r\n// Update Cart \r\nexport const updateQuantity  = (formData , cart_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.patch(`/api/cart/${cart_id}`,formData,config)\r\n        dispatch ({\r\n            type : UPDATE_QUANTITY,\r\n            payload: res.data\r\n        })\r\n    \r\n    }catch {\r\n        dispatch({\r\n            type: ERROR_UPDATE_QUANTITY,\r\n        })\r\n        toast.error('Update error')\r\n    }\r\n}\r\n//checkout\r\n//api/order\r\nexport const checkout = (formdata) =>  async dispatch =>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {   \r\n        const res = await axios.post(`/api/order`,formdata,config)\r\n        console.log(res.data.data)\r\n        dispatch ({\r\n            type: CHECKOUT,\r\n            payload: res.data.data\r\n        })\r\n        toast.info('Checkout success')\r\n    }catch{\r\n        toast.error('Checkout error')\r\n        dispatch({\r\n            type: CHECKOUT_FAILED,\r\n        });\r\n    }\r\n}\r\nexport const stripelog =(token,address)=>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {   \r\n        const res = await axios.post(`/api/getStripeResponse`,{token,address},config)\r\n      /*  dispatch ({\r\n            type: CHECKOUT,\r\n            payload: res.data\r\n        })*/\r\n       // toast.info('Checkout success')\r\n    }catch{\r\n       // toast.error('Checkout error')\r\n        dispatch({\r\n            type: CHECKOUT_FAILED,\r\n        });\r\n    } \r\n}\r\n//myOrders\r\nexport const myOrders =()=>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.get(`/api/order/my_orders`,config)\r\n        dispatch({\r\n            type:MY_ORDERS,\r\n            payload:res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_FAILS\r\n        })\r\n    }\r\n}\r\n//Order_Payment\r\nexport const Order_Payment =(order_id)=>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/order/payment`,{order_id},config)\r\n       /* dispatch({\r\n            type:PAYMENT_SUCCESS,\r\n           // payload:res.data\r\n        })*/\r\n        toast.success('payment success')\r\n    } catch (error) {\r\n        /*dispatch({\r\n            type:PAYMENT_ERROR\r\n        })*/\r\n        toast.error('Error')\r\n    } \r\n}\r\n///api/order/cancel_payment\r\nexport const CancelPayment =(order_id)=>async dispatch=>{\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/order/cancel_payment`,{order_id},config)\r\n       /* dispatch({\r\n            type:PAYMENT_SUCCESS,\r\n           // payload:res.data\r\n        })*/\r\n        toast.info('payment canceled')\r\n    } catch (error) {\r\n        /*dispatch({\r\n            type:PAYMENT_ERROR\r\n        })*/\r\n        toast.error('Error')\r\n    }\r\n}","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\Search\\Search.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\navbar\\nav.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\content\\Content.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\content\\ContentUser.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\single.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Actions\\Post.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\publications\\Publication.js",["466","467","468"],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\Post\\Post.js",[],"D:\\work\\Project\\fishComb_Front\\src\\Actions\\Replies.js",["469"],"import { GET_REPLIES, GET_REPLIES_ERROR, ADD_REPLY, ADD_REPLY_ERROR, UPDATE_REPLY, UPDATE_REPLY_ERROR, DELETE_REPLY, DELETE_REPLY_ERROR } from './types';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\ntoast.configure();\r\n\r\n\r\n//Get Replies \r\nexport const getReplies = (thread_id) => async dispatch => {\r\n    const config ={\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.get(`/api/thread/${thread_id}/replies`,config)\r\n        dispatch ({\r\n            type: GET_REPLIES,\r\n            payload : res.data\r\n        })\r\n    }catch (error){\r\n        dispatch({\r\n            type: GET_REPLIES_ERROR\r\n        })\r\n    }\r\n}\r\n//Post Replies \r\nexport const addReplies = (formData, thread_id) => async dispatch => {\r\n    const  config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.post(`/api/thread/${thread_id}/reply`,formData,config)\r\n        dispatch({\r\n            type: ADD_REPLY,\r\n            payload: res.data.data.replies\r\n        })\r\n        console.log('----------',res.data.data)\r\n        toast.info('Add Succes')\r\n    }catch (error){\r\n        dispatch({\r\n            type: ADD_REPLY_ERROR,\r\n        })\r\n    }\r\n}\r\n//Update Reply \r\nexport const updateReply = (formData, reply_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{\r\n        const res = await axios.patch(`/api/thread/${reply_id}/reply`, formData , config)\r\n        dispatch({\r\n            type: UPDATE_REPLY,\r\n            payload: res.data.data.replies\r\n        })\r\n        toast.info('Update Succes')\r\n    }catch (error) {\r\n        dispatch({\r\n            type: UPDATE_REPLY_ERROR\r\n        })\r\n    }\r\n}\r\n//Delete Reply \r\nexport const deleteReply = (reply_id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: 'Bearer ' + Cookies.get('user'),\r\n            'content-Type': 'application/json'\r\n        }\r\n    }\r\n    try{  \r\n        const res = await axios.delete (`/api/thread/replies/${reply_id}`, config )\r\n        dispatch({\r\n            type : DELETE_REPLY,\r\n            payload : reply_id\r\n        })\r\n        toast.info('Delete Succes');\r\n    }catch (error) {\r\n        dispatch({\r\n            type:DELETE_REPLY_ERROR,\r\n        })\r\n    }\r\n}","D:\\work\\Project\\fishComb_Front\\src\\Actions\\Board.js",["470","471","472"],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\SingleReply.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\SingleThread.js",["473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488"],"import React from 'react';\r\nimport { Fragment, useState, useEffect } from 'react';\r\nimport { Col, Row, Card, Image } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './Board.css';\r\nimport { Button } from '@material-ui/core';\r\nimport { deleteTreadh, upadateThread } from '../../../Actions/Board';\r\nimport { addReplies ,getReplies } from '../../../Actions/Replies';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Switch from '@material-ui/core/Switch';\r\nconst SingleThread = ({ auth: {user}, threads, deleteTreadh, upadateThread, addReplies, match ,getReplies , loading}) => {\r\n    /***********************************/\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const handleClickOpen1 = () => {\r\n        setOpen1(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n    /***********************************/\r\n    const [title, settitle] = useState('')\r\n    const [body, setbody] = useState('')\r\n    const [image, setimage] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const ontitlechange = e => {\r\n        settitle(e.target.value)\r\n    }\r\n    const onbodychange = e => {\r\n        setbody(e.target.value)\r\n    }\r\n    const onstatuschange = e => {\r\n        setStatus(e.target.value)\r\n    }\r\n    const onimagechange = e => {\r\n        setimage(e.target.value)\r\n    }\r\n    /***************************************/\r\n    const [state, setState] = React.useState({checkedA: true});\r\n    const handleswitch = (threads) => {\r\n        setState({\r\n            ...state,\r\n            [threads.target.name]: threads.target.checked\r\n        });\r\n        if (threads.target.checked === true) {\r\n            setStatus(1)\r\n        } else {\r\n            setStatus(0)\r\n        }\r\n        console.log(status)\r\n    };\r\n    /*********************************/\r\n    useEffect(() => {\r\n        settitle(loading || !!threads && !threads.data.title ? '' :  threads.data.title)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setbody(loading || !!threads && !threads.data.body ? '' : threads.data.body)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setStatus(loading || !!threads && !threads.data.status ? 1 : threads.data.status)\r\n    }, [loading])\r\n    useEffect(() => {\r\n        setimage(loading || !!threads && !threads.data.image ? '' : threads.data.image )\r\n    }, [loading])\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        const file = new FormData();\r\n        file.append('title', title);\r\n        file.append('body', body);\r\n        file.append('image', image);\r\n        file.append('status', status);\r\n        upadateThread(file,threads.data.id)\r\n        e.target.reset();\r\n    }\r\n    /************************************/\r\n    /***********************************/\r\n    return (\r\n        <Fragment>\r\n            <Row className='pb-2'>\r\n                <Col xs={12}>\r\n                    <Row>\r\n                        <Col xs={8}>\r\n                            <Card style={{ width: '55rem', marginBottom: '4px',borderRadius:'2px' }}>\r\n                                <Card.Title className='title_thread mt-2 ml-2'>\r\n                                    <NavLink to={`/dashboard/thread/${threads.data.id}`} className='threadLink'>\r\n                                        <b>{threads && threads.data.title.charAt(0).toUpperCase() + threads.data.title.slice(1)} </b>\r\n                                    </NavLink>\r\n                                </Card.Title>\r\n                                <Card.Text className='text_thread ml-3'>\r\n                                    <Col xs={9}>\r\n                                        <Row className='pt-2 pb-2'>\r\n                                            <Col xs={11}>\r\n                                                <span>{threads && threads.data.body.charAt(0).toUpperCase() + threads.data.body.slice(1)}</span>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>                       \r\n                                </Card.Text>\r\n                                <Row>\r\n                                    <Col xs={8}></Col>\r\n                                    <Col xs={4}>\r\n                                            {user && threads && user.user_id ===   threads.data.user.data.user_id ?\r\n                                                        <Button className=\"float-right thread__btn\" onClick={handleClickOpen} ><UpdateIcon/>Edit</Button> : (<div></div>)}\r\n                                            \r\n                                            {user && threads && user.user_id ===   threads.data.user.data.user_id ?\r\n                                                <Button className=\"float-right thread__btn\" onClick={e => deleteTreadh(threads && threads.data.id)}><DeleteIcon />Delete</Button> : (<div></div>)}\r\n                                            <NavLink to={`/dashboard/thread/${threads.data.id}`}>\r\n                                                <Button className='float-right thread__btn' onClick={e => getReplies(threads && threads.data.id)}>Replies</Button>\r\n                                            </NavLink>\r\n                                    </Col>\r\n                                    </Row> \r\n                            </Card>\r\n                        </Col>\r\n                        <Dialog open={open} onClose={handleClose} >\r\n                            <form className='addQuestion' onSubmit={e => submit(e)}>\r\n                                <DialogTitle id=\"form-dialog-title\">Update Question</DialogTitle>\r\n                                <DialogContent>\r\n                                    <Row className=\" pt-2\">\r\n                                        <Col sm={12} md={12} xl={12}>\r\n                                            <Row>\r\n                                                <Col xs={2}>\r\n                                                    <Form.Label>Title</Form.Label>\r\n                                                </Col>\r\n                                                <Col xs={10}>\r\n                                                    <FormControl\r\n                                                    className='input_event'\r\n                                                    placeholder={threads && threads.data.title}\r\n                                                    margin=\"dense\"\r\n                                                    id=\"Title\"\r\n                                                    label=\"Title\"\r\n                                                    type=\"text\"\r\n                                                    name=\"title\" value={title} onChange={ontitlechange} />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className='pt-3'>\r\n                                        <Col xs={12}>\r\n                                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                <Row>\r\n                                                    <Col xs={2}>\r\n                                                        <Form.Label>Body</Form.Label>\r\n                                                    </Col>\r\n                                                    <Col xs={10}>\r\n                                                        <Form.Control as=\"textarea\"\r\n                                                            rows={3}\r\n                                                            className='input_event'\r\n                                                            placeholder={threads && threads.data.body}\r\n                                                            name=\"body\" value={body} onChange={onbodychange} />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className='pt-1 pb-1'>\r\n                                        <Col xs={12}>\r\n                                        <FormControl // placeholder={event && event.status}\r\n                                        className='input_event'\r\n                                        hidden='true'\r\n                                        id=\"status\"\r\n                                        name=\"status\"\r\n                                        value={\r\n                                            status.toString()\r\n                                        }\r\n                                        type=\"textarea\"\r\n                                        fullWidth\r\n                                        onChange={onstatuschange}/>\r\n                                        Disable Post\r\n                                    <Switch checked={\r\n                                        state.checkedA\r\n                                    }\r\n                                    onChange={handleswitch}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={\r\n                                        {'aria-label': 'secondary checkbox'}}/>\r\n                                        Enable Post\r\n                                    </Col>\r\n                                    </Row>\r\n                                    <Row className=' pt-3'>\r\n                                        <Col  sm={12} md={12} xl={12} className=\"btn-group btn-group-toggle \">\r\n                                        <div className='col-md-3 px-0'>Upload Image</div><input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={onimagechange} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className='pt-3'>\r\n                                        <Col md={10} className='mt-3'></Col>\r\n                                        <Col className='pb-4' >\r\n                                            <Button className='btn btn-light pt-2 pb-2 ' onClick={handleClose} type='submit'>Update</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </DialogContent>\r\n                            </form>\r\n                        </Dialog>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\nSingleThread.prototype = {\r\n    Thread: PropTypes.object.isRequired,\r\n    thread: PropTypes.object.isRequired,\r\n    deleteTreadh: PropTypes.func.isRequired,\r\n    upadateThread: PropTypes.func.isRequired,\r\n    addReplies: PropTypes.func.isRequired,\r\n    getReplies: PropTypes.func.isRequired,\r\n    auth :PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    thread: state.Thread,\r\n    Threads: state.Thread\r\n})\r\nexport default connect(mapStateToProps, { deleteTreadh, upadateThread, addReplies ,getReplies })(SingleThread);","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Edit.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Webinars.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Order.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Network.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\profile\\edit-profile\\Aboute\\Aboute.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\newsfeed\\publications\\SingleComm.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\FeaturedDialog.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\Steppers.js",["489"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkout from './Checkout'\r\nimport StripePay from './StripePay'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Checkout', 'Payment', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <Checkout/>;\r\n    case 1:\r\n      return <StripePay/>;\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\n const Steppers =()=>{\r\n\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const steps = getSteps();\r\n  \r\n    const isStepOptional = (step) => {\r\n      return step === 2;\r\n    };\r\n  \r\n    const isStepSkipped = (step) => {\r\n      return skipped.has(step);\r\n    };\r\n  \r\n    const handleNext = () => {\r\n      let newSkipped = skipped;\r\n      if (isStepSkipped(activeStep)) {\r\n        newSkipped = new Set(newSkipped.values());\r\n        newSkipped.delete(activeStep);\r\n      }\r\n  \r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      setSkipped(newSkipped);\r\n    };\r\n  \r\n    const handleBack = () => {\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n  \r\n    const handleSkip = () => {\r\n      if (!isStepOptional(activeStep)) {\r\n        // You probably want to guard against something like this,\r\n        // it should never occur unless someone's actively trying to break something.\r\n        throw new Error(\"You can't skip a step that isn't optional.\");\r\n      }\r\n  \r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      setSkipped((prevSkipped) => {\r\n        const newSkipped = new Set(prevSkipped.values());\r\n        newSkipped.add(activeStep);\r\n        return newSkipped;\r\n      });\r\n    };\r\n  \r\n    const handleReset = () => {\r\n      setActiveStep(0);\r\n    };\r\n  \r\n     return (\r\n       \r\n        <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div >\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div className='pb-5'>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n              className='pb-5'\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n               >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n     )\r\n }\r\n export default Steppers;","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\CartProduct.js",["490","491","492","493","494","495"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteProd, updateQuantity } from '../../../../Actions/cart';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\nimport DeleteOutlineRoundedIcon from '@material-ui/icons/DeleteOutlineRounded';\r\nimport { connect } from 'react-redux';\r\nimport { Fragment } from 'react';\r\nimport { GrAddCircle } from 'react-icons/gr';\r\nimport { Button } from '@material-ui/core';\r\nconst CartProduct = (  {cart  , deleteProd, loading,updateQuantity} ) => {\r\n/**********************************/\r\nconst [formdata, setFormData] = useState({\r\n    quantity: cart.quantity,\r\n});\r\nconst {\r\n    quantity,\r\n  } = formdata;\r\n  useEffect(() => {\r\n    setFormData({\r\n    })\r\n  }, [loading])\r\nconst onchange = e => setFormData({ ...formdata, [e.target.name]: e.target.value })\r\n\r\nconst onSubmit = e => {\r\n    e.preventDefault();\r\n    updateQuantity(formdata,cart.cart_id);\r\n}\r\nconst [total,setTotal]=useState(cart.amount)\r\nconst [total1,setTotal1]=useState(cart.product.price)\r\nconst handlechange=()=>{   \r\n    updateQuantity(formdata,cart.cart_id);\r\n}\r\nconst sum=()=> {\r\n    // setTotal1(cart.reduce((totalamount,cart)=>totalamount+cart.price,0))\r\n     console.log(total1)\r\n}\r\n/**********************************/\r\nreturn (\r\n    <Fragment>\r\n        <Form onSubmit={e => onSubmit(e)} >\r\n            <Row className='pt-3 pb-3'>\r\n                <Col xs={12}>\r\n                    <Row className=''>\r\n                        <Col xs={1} className='border-right'>\r\n                            <img src={cart && \"http://77.68.24.35/storage/\"+cart.product.image.slice(6)} width='70px' height='55px' style={{borderRadius:'4px'}}/>\r\n                        </Col>\r\n                        <Col xs={3}className='border-right'>\r\n                            <Row>\r\n                                <Col >\r\n                                 <h5> { cart && cart.product.name.charAt(0).toUpperCase() + cart.product.name.slice(1) }</h5>\r\n                                </Col>\r\n                            </Row>\r\n                           <Row>\r\n                               <Col>\r\n                                <h6>{cart && cart.product.description}</h6>\r\n                               </Col>\r\n                           </Row>\r\n                        </Col> \r\n                        <Col xs={1} className='border-right'>{cart && cart.product.price} £</Col> \r\n                        <Col xs={2}className='border-right ml-2'>\r\n                                <input className='col-6' value={quantity} type='number'    \r\n                         min=\"1\" max=\"100\"  name=\"quantity\"  onChange={e => onchange(e)} onClick={handlechange} defaultValue={quantity} />\r\n                            </Col>\r\n                        <Col xs={2}className='border-right'>{cart.amount} £</Col>\r\n                        <Col xs={1} >\r\n                            <Button onClick={e=>deleteProd(cart && cart.cart_id)}>\r\n                                <DeleteOutlineRoundedIcon   />\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </Col>    \r\n            </Row>\r\n            <hr/>\r\n        </Form>\r\n    </Fragment>\r\n)\r\n}\r\nCartProduct.propTypes = {\r\n    cart:PropTypes.object.isRequired,\r\n    deleteProd:PropTypes.func.isRequired,\r\n    updateQuantity:PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    carts: state.cart\r\n})\r\nexport default connect(mapStateToProps,{deleteProd, updateQuantity})(CartProduct)","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\YourAccount.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\events\\tileData.js",[],"D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\Checkout.js",["496"],"import React from 'react'\r\nimport {Fragment} from 'react'\r\nimport {checkout} from '../../../../Actions/cart'\r\nimport PropTypes from 'prop-types';\r\nimport {useState} from 'react';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport {Button, Col, Row,Card} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst Checkout = ({checkout}) => {\r\n    const [formData, setFormData] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        shipping_address: \"\",\r\n        phone: \"\",\r\n        post_code: \"\",\r\n        email: \"\",\r\n        description: \"\"\r\n    })\r\n    const {\r\n        first_name,\r\n        last_name,\r\n        shipping_address,\r\n        phone,\r\n        post_code,\r\n        email,\r\n        description\r\n    } = formData;\r\n    const onchange = e => setFormData({  \r\n        ...formData,\r\n        [e.target.name]: e.target.value\r\n    });\r\n    const [disable,setdisable]=useState(false)\r\n    const submit =e=>{\r\n        e.preventDefault()\r\n    \r\n      console.log(formData)\r\n      checkout(formData)\r\n      setdisable(true)\r\n    }\r\n   \r\n    return (\r\n        <Fragment>\r\n           \r\n            <Row className='pb-5'>\r\n            \r\n                <form onSubmit={e=>submit(e)} >\r\n                    <Row>\r\n                    <Col xs={2}></Col>\r\n                    <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"first_name\" margin=\"dense\" label=\"first_name\" name=\"first_name\"\r\n                            value={first_name}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            type=\"text\"\r\n                            disabled={disable}\r\n                            /></Col>\r\n                           <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"last_name\" margin=\"dense\" label=\"last_name\" name=\"last_name\"\r\n                            value={last_name}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col xs={2}></Col>\r\n                    <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"shipping_address\" margin=\"dense\" label=\"shipping_address\" name=\"shipping_address\"\r\n                            value={shipping_address}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                               <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"phone\" margin=\"dense\" label=\"phone\" name=\"phone\"\r\n                            value={phone}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                    </Row>\r\n                         <Row>\r\n                         <Col xs={2}></Col>\r\n                         <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"post_code\" margin=\"dense\" label=\"post_code\" name=\"post_code\"\r\n                            value={post_code}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                               <Col sm={4}\r\n                        md={4}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"email\" margin=\"dense\" label=\"email\" name=\"email\"\r\n                            value={email}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                         </Row>\r\n                          <Row>\r\n                          <Col xs={2}></Col>\r\n                          <Col sm={8}\r\n                        md={8}\r\n                        className='pt-3 pb-3'>\r\n                        <FormControl className='input_event' placeholder=\"description\" margin=\"dense\" label=\"description\" name=\"description\"\r\n                            value={description}\r\n                            onChange={\r\n                                e => onchange(e)\r\n                            }\r\n                            disabled={disable}\r\n                            type=\"text\"/></Col>\r\n                          </Row>\r\n                         <Row>\r\n                         <Col xs={2}></Col>\r\n                         <Col sm={3} md={3}><Button type='submit'  variant=\"outline-secondary\" disabled={disable}>Confirm</Button></Col>\r\n                         </Row>  \r\n                </form>\r\n            \r\n                </Row>   \r\n        </Fragment>\r\n    )\r\n\r\n};\r\nCheckout.prototype = {\r\n    checkout: PropTypes.func.isRequired\r\n}\r\nexport default connect(null,{checkout}) (Checkout);\r\n","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\market\\Cart\\StripePay.js",["497"],"import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport {stripelog,Order_Payment} from '../../../../Actions/cart'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nconst StripePay =({stripelog,cart :{order}})=>{\r\n\r\n\r\n    const handleToken =(token,address)=>{\r\n        console.log(order.id)\r\n        Order_Payment(order.id)\r\n        stripelog(token,address)\r\n       \r\n    }\r\n    return (\r\n        <Row>  <Col sm={3} md={3}></Col> <Col sm={3} md={3}><StripeCheckout\r\n       token={Order_Payment(order.id)}\r\n        stripeKey={\"pk_test_51IEjdFKKRkm2jfjKQ46eifger6zWp30iM4SzIGNVKSxaHUOKrfVOytseDJpKHIz43fTtvUwcq98BD7XoyPpG6ss400dIHQtQX9\"}\r\n        description={order && order.description}\r\n        name={\"Total amount: \"+order.sub_total}\r\n        email={order && order.email}\r\n       amount={order && order.sub_total}\r\n       billingAddress\r\n       shippingAddress\r\n       currency=\"USD\"\r\n      /></Col></Row>\r\n         \r\n    )\r\n}\r\nStripePay.propTypes={\r\n stripelog:PropTypes.func.isRequired,\r\n cart:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps =state =>({\r\n    cart:state.cart\r\n})\r\nexport default connect(mapStateToProps,{stripelog}) (StripePay);","D:\\work\\Project\\fishComb_Front\\src\\components\\pages\\board\\UpdateThread.js",["498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513"],{"ruleId":"514","replacedBy":"515"},{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","severity":1,"message":"519","line":15,"column":10,"nodeType":"520","messageId":"521","endLine":15,"endColumn":26},{"ruleId":"518","severity":1,"message":"522","line":16,"column":10,"nodeType":"520","messageId":"521","endLine":16,"endColumn":23},{"ruleId":"518","severity":1,"message":"523","line":16,"column":24,"nodeType":"520","messageId":"521","endLine":16,"endColumn":37},{"ruleId":"518","severity":1,"message":"524","line":20,"column":10,"nodeType":"520","messageId":"521","endLine":20,"endColumn":23},{"ruleId":"518","severity":1,"message":"525","line":1,"column":187,"nodeType":"520","messageId":"521","endLine":1,"endColumn":196},{"ruleId":"518","severity":1,"message":"526","line":2,"column":36,"nodeType":"520","messageId":"521","endLine":2,"endColumn":51},{"ruleId":"527","severity":1,"message":"528","line":59,"column":23,"nodeType":"529","endLine":59,"endColumn":38},{"ruleId":"518","severity":1,"message":"530","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":26},{"ruleId":"518","severity":1,"message":"531","line":53,"column":12,"nodeType":"520","messageId":"521","endLine":53,"endColumn":20},{"ruleId":"518","severity":1,"message":"532","line":54,"column":11,"nodeType":"520","messageId":"521","endLine":54,"endColumn":22},{"ruleId":"518","severity":1,"message":"533","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":21},{"ruleId":"518","severity":1,"message":"534","line":4,"column":10,"nodeType":"520","messageId":"521","endLine":4,"endColumn":18},{"ruleId":"518","severity":1,"message":"524","line":8,"column":32,"nodeType":"520","messageId":"521","endLine":8,"endColumn":45},{"ruleId":"518","severity":1,"message":"535","line":14,"column":8,"nodeType":"520","messageId":"521","endLine":14,"endColumn":14},{"ruleId":"518","severity":1,"message":"536","line":15,"column":8,"nodeType":"520","messageId":"521","endLine":15,"endColumn":16},{"ruleId":"518","severity":1,"message":"537","line":33,"column":11,"nodeType":"520","messageId":"521","endLine":33,"endColumn":23},{"ruleId":"518","severity":1,"message":"538","line":88,"column":12,"nodeType":"520","messageId":"521","endLine":88,"endColumn":17},{"ruleId":"518","severity":1,"message":"539","line":92,"column":11,"nodeType":"520","messageId":"521","endLine":92,"endColumn":23},{"ruleId":"518","severity":1,"message":"540","line":95,"column":12,"nodeType":"520","messageId":"521","endLine":95,"endColumn":17},{"ruleId":"518","severity":1,"message":"541","line":95,"column":19,"nodeType":"520","messageId":"521","endLine":95,"endColumn":27},{"ruleId":"518","severity":1,"message":"542","line":96,"column":11,"nodeType":"520","messageId":"521","endLine":96,"endColumn":23},{"ruleId":"518","severity":1,"message":"543","line":99,"column":11,"nodeType":"520","messageId":"521","endLine":99,"endColumn":22},{"ruleId":"527","severity":1,"message":"528","line":330,"column":183,"nodeType":"529","endLine":330,"endColumn":202},{"ruleId":"518","severity":1,"message":"544","line":3,"column":20,"nodeType":"520","messageId":"521","endLine":3,"endColumn":29},{"ruleId":"518","severity":1,"message":"545","line":10,"column":10,"nodeType":"520","messageId":"521","endLine":10,"endColumn":27},{"ruleId":"518","severity":1,"message":"546","line":1,"column":8,"nodeType":"520","messageId":"521","endLine":1,"endColumn":14},{"ruleId":"518","severity":1,"message":"536","line":23,"column":5,"nodeType":"520","messageId":"521","endLine":23,"endColumn":13},{"ruleId":"518","severity":1,"message":"535","line":28,"column":8,"nodeType":"520","messageId":"521","endLine":28,"endColumn":14},{"ruleId":"518","severity":1,"message":"547","line":33,"column":9,"nodeType":"520","messageId":"521","endLine":33,"endColumn":16},{"ruleId":"518","severity":1,"message":"548","line":36,"column":8,"nodeType":"520","messageId":"521","endLine":36,"endColumn":16},{"ruleId":"549","severity":1,"message":"550","line":85,"column":8,"nodeType":"551","endLine":85,"endColumn":35,"suggestions":"552"},{"ruleId":"549","severity":1,"message":"553","line":85,"column":9,"nodeType":"554","endLine":85,"endColumn":34},{"ruleId":"549","severity":1,"message":"555","line":90,"column":8,"nodeType":"551","endLine":90,"endColumn":39,"suggestions":"556"},{"ruleId":"549","severity":1,"message":"553","line":90,"column":9,"nodeType":"554","endLine":90,"endColumn":38},{"ruleId":"518","severity":1,"message":"538","line":93,"column":12,"nodeType":"520","messageId":"521","endLine":93,"endColumn":17},{"ruleId":"518","severity":1,"message":"557","line":93,"column":19,"nodeType":"520","messageId":"521","endLine":93,"endColumn":27},{"ruleId":"518","severity":1,"message":"543","line":101,"column":11,"nodeType":"520","messageId":"521","endLine":101,"endColumn":22},{"ruleId":"518","severity":1,"message":"558","line":107,"column":12,"nodeType":"520","messageId":"521","endLine":107,"endColumn":17},{"ruleId":"518","severity":1,"message":"559","line":108,"column":11,"nodeType":"520","messageId":"521","endLine":108,"endColumn":23},{"ruleId":"518","severity":1,"message":"560","line":112,"column":11,"nodeType":"520","messageId":"521","endLine":112,"endColumn":22},{"ruleId":"518","severity":1,"message":"561","line":126,"column":21,"nodeType":"520","messageId":"521","endLine":126,"endColumn":28},{"ruleId":"518","severity":1,"message":"562","line":133,"column":17,"nodeType":"520","messageId":"521","endLine":133,"endColumn":24},{"ruleId":"518","severity":1,"message":"563","line":134,"column":21,"nodeType":"520","messageId":"521","endLine":134,"endColumn":31},{"ruleId":"564","severity":1,"message":"565","line":171,"column":30,"nodeType":"554","messageId":"566","endLine":171,"endColumn":32},{"ruleId":"564","severity":1,"message":"565","line":171,"column":41,"nodeType":"554","messageId":"566","endLine":171,"endColumn":43},{"ruleId":"549","severity":1,"message":"567","line":172,"column":8,"nodeType":"551","endLine":172,"endColumn":17,"suggestions":"568"},{"ruleId":"564","severity":1,"message":"565","line":174,"column":25,"nodeType":"554","messageId":"566","endLine":174,"endColumn":27},{"ruleId":"564","severity":1,"message":"565","line":174,"column":36,"nodeType":"554","messageId":"566","endLine":174,"endColumn":38},{"ruleId":"549","severity":1,"message":"569","line":175,"column":8,"nodeType":"551","endLine":175,"endColumn":17,"suggestions":"570"},{"ruleId":"564","severity":1,"message":"565","line":177,"column":32,"nodeType":"554","messageId":"566","endLine":177,"endColumn":34},{"ruleId":"564","severity":1,"message":"565","line":177,"column":43,"nodeType":"554","messageId":"566","endLine":177,"endColumn":45},{"ruleId":"549","severity":1,"message":"571","line":178,"column":8,"nodeType":"551","endLine":178,"endColumn":17,"suggestions":"572"},{"ruleId":"564","severity":1,"message":"565","line":181,"column":30,"nodeType":"554","messageId":"566","endLine":181,"endColumn":32},{"ruleId":"564","severity":1,"message":"565","line":181,"column":41,"nodeType":"554","messageId":"566","endLine":181,"endColumn":43},{"ruleId":"549","severity":1,"message":"573","line":182,"column":8,"nodeType":"551","endLine":182,"endColumn":17,"suggestions":"574"},{"ruleId":"564","severity":1,"message":"565","line":184,"column":27,"nodeType":"554","messageId":"566","endLine":184,"endColumn":29},{"ruleId":"564","severity":1,"message":"565","line":184,"column":38,"nodeType":"554","messageId":"566","endLine":184,"endColumn":40},{"ruleId":"549","severity":1,"message":"575","line":185,"column":8,"nodeType":"551","endLine":185,"endColumn":17,"suggestions":"576"},{"ruleId":"564","severity":1,"message":"565","line":187,"column":25,"nodeType":"554","messageId":"566","endLine":187,"endColumn":27},{"ruleId":"564","severity":1,"message":"565","line":187,"column":36,"nodeType":"554","messageId":"566","endLine":187,"endColumn":38},{"ruleId":"549","severity":1,"message":"577","line":188,"column":8,"nodeType":"551","endLine":188,"endColumn":17,"suggestions":"578"},{"ruleId":"564","severity":1,"message":"565","line":190,"column":26,"nodeType":"554","messageId":"566","endLine":190,"endColumn":28},{"ruleId":"564","severity":1,"message":"565","line":190,"column":37,"nodeType":"554","messageId":"566","endLine":190,"endColumn":39},{"ruleId":"549","severity":1,"message":"579","line":192,"column":8,"nodeType":"551","endLine":192,"endColumn":17,"suggestions":"580"},{"ruleId":"581","severity":1,"message":"582","line":664,"column":53,"nodeType":"583","endLine":671,"endColumn":60},{"ruleId":"518","severity":1,"message":"535","line":2,"column":8,"nodeType":"520","messageId":"521","endLine":2,"endColumn":14},{"ruleId":"518","severity":1,"message":"584","line":5,"column":10,"nodeType":"520","messageId":"521","endLine":5,"endColumn":15},{"ruleId":"518","severity":1,"message":"585","line":29,"column":11,"nodeType":"520","messageId":"521","endLine":29,"endColumn":27},{"ruleId":"518","severity":1,"message":"538","line":35,"column":12,"nodeType":"520","messageId":"521","endLine":35,"endColumn":17},{"ruleId":"518","severity":1,"message":"539","line":36,"column":11,"nodeType":"520","messageId":"521","endLine":36,"endColumn":23},{"ruleId":"518","severity":1,"message":"586","line":39,"column":11,"nodeType":"520","messageId":"521","endLine":39,"endColumn":22},{"ruleId":"518","severity":1,"message":"587","line":42,"column":12,"nodeType":"520","messageId":"521","endLine":42,"endColumn":23},{"ruleId":"518","severity":1,"message":"588","line":48,"column":8,"nodeType":"520","messageId":"521","endLine":48,"endColumn":14},{"ruleId":"518","severity":1,"message":"589","line":58,"column":7,"nodeType":"520","messageId":"521","endLine":58,"endColumn":21},{"ruleId":"518","severity":1,"message":"537","line":77,"column":7,"nodeType":"520","messageId":"521","endLine":77,"endColumn":19},{"ruleId":"527","severity":1,"message":"528","line":99,"column":64,"nodeType":"529","endLine":99,"endColumn":85},{"ruleId":"527","severity":1,"message":"528","line":105,"column":64,"nodeType":"529","endLine":105,"endColumn":85},{"ruleId":"581","severity":1,"message":"582","line":36,"column":45,"nodeType":"583","endLine":36,"endColumn":116},{"ruleId":"518","severity":1,"message":"536","line":12,"column":8,"nodeType":"520","messageId":"521","endLine":12,"endColumn":16},{"ruleId":"518","severity":1,"message":"538","line":37,"column":12,"nodeType":"520","messageId":"521","endLine":37,"endColumn":17},{"ruleId":"518","severity":1,"message":"539","line":38,"column":11,"nodeType":"520","messageId":"521","endLine":38,"endColumn":23},{"ruleId":"518","severity":1,"message":"586","line":42,"column":11,"nodeType":"520","messageId":"521","endLine":42,"endColumn":22},{"ruleId":"518","severity":1,"message":"590","line":2,"column":20,"nodeType":"520","messageId":"521","endLine":2,"endColumn":28},{"ruleId":"518","severity":1,"message":"591","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":21},{"ruleId":"518","severity":1,"message":"592","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":19},{"ruleId":"518","severity":1,"message":"535","line":7,"column":8,"nodeType":"520","messageId":"521","endLine":7,"endColumn":14},{"ruleId":"518","severity":1,"message":"536","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":16},{"ruleId":"518","severity":1,"message":"593","line":11,"column":10,"nodeType":"520","messageId":"521","endLine":11,"endColumn":16},{"ruleId":"518","severity":1,"message":"594","line":26,"column":8,"nodeType":"520","messageId":"521","endLine":26,"endColumn":21},{"ruleId":"518","severity":1,"message":"538","line":46,"column":8,"nodeType":"520","messageId":"521","endLine":46,"endColumn":13},{"ruleId":"518","severity":1,"message":"595","line":47,"column":7,"nodeType":"520","messageId":"521","endLine":47,"endColumn":23},{"ruleId":"518","severity":1,"message":"539","line":50,"column":7,"nodeType":"520","messageId":"521","endLine":50,"endColumn":19},{"ruleId":"518","severity":1,"message":"540","line":53,"column":8,"nodeType":"520","messageId":"521","endLine":53,"endColumn":13},{"ruleId":"518","severity":1,"message":"541","line":53,"column":15,"nodeType":"520","messageId":"521","endLine":53,"endColumn":23},{"ruleId":"518","severity":1,"message":"542","line":54,"column":7,"nodeType":"520","messageId":"521","endLine":54,"endColumn":19},{"ruleId":"518","severity":1,"message":"543","line":57,"column":7,"nodeType":"520","messageId":"521","endLine":57,"endColumn":18},{"ruleId":"527","severity":1,"message":"528","line":182,"column":47,"nodeType":"529","endLine":182,"endColumn":64},{"ruleId":"581","severity":1,"message":"582","line":192,"column":42,"nodeType":"583","endLine":192,"endColumn":142},{"ruleId":"596","severity":1,"message":"597","line":216,"column":5,"nodeType":"598","messageId":"599","endLine":216,"endColumn":9},{"ruleId":"596","severity":1,"message":"600","line":226,"column":5,"nodeType":"598","messageId":"599","endLine":226,"endColumn":18},{"ruleId":"518","severity":1,"message":"601","line":2,"column":5,"nodeType":"520","messageId":"521","endLine":2,"endColumn":13},{"ruleId":"518","severity":1,"message":"602","line":3,"column":5,"nodeType":"520","messageId":"521","endLine":3,"endColumn":13},{"ruleId":"518","severity":1,"message":"603","line":4,"column":5,"nodeType":"520","messageId":"521","endLine":4,"endColumn":15},{"ruleId":"518","severity":1,"message":"604","line":5,"column":5,"nodeType":"520","messageId":"521","endLine":5,"endColumn":11},{"ruleId":"518","severity":1,"message":"605","line":6,"column":5,"nodeType":"520","messageId":"521","endLine":6,"endColumn":15},{"ruleId":"518","severity":1,"message":"606","line":7,"column":5,"nodeType":"520","messageId":"521","endLine":7,"endColumn":18},{"ruleId":"607","severity":1,"message":"608","line":9,"column":1,"nodeType":"609","endLine":52,"endColumn":2},{"ruleId":"607","severity":1,"message":"608","line":8,"column":1,"nodeType":"609","endLine":37,"endColumn":2},{"ruleId":"518","severity":1,"message":"610","line":1,"column":10,"nodeType":"520","messageId":"521","endLine":1,"endColumn":15},{"ruleId":"518","severity":1,"message":"611","line":2,"column":10,"nodeType":"520","messageId":"521","endLine":2,"endColumn":19},{"ruleId":"607","severity":1,"message":"608","line":12,"column":1,"nodeType":"609","endLine":63,"endColumn":2},{"ruleId":"518","severity":1,"message":"612","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":18},{"ruleId":"518","severity":1,"message":"613","line":16,"column":8,"nodeType":"520","messageId":"521","endLine":16,"endColumn":12},{"ruleId":"518","severity":1,"message":"614","line":17,"column":7,"nodeType":"520","messageId":"521","endLine":17,"endColumn":22},{"ruleId":"518","severity":1,"message":"615","line":20,"column":9,"nodeType":"520","messageId":"521","endLine":20,"endColumn":20},{"ruleId":"596","severity":1,"message":"616","line":115,"column":5,"nodeType":"598","messageId":"599","endLine":115,"endColumn":15},{"ruleId":"518","severity":1,"message":"617","line":12,"column":20,"nodeType":"520","messageId":"521","endLine":12,"endColumn":24},{"ruleId":"518","severity":1,"message":"618","line":12,"column":26,"nodeType":"520","messageId":"521","endLine":12,"endColumn":31},{"ruleId":"549","severity":1,"message":"619","line":27,"column":8,"nodeType":"551","endLine":27,"endColumn":17,"suggestions":"620"},{"ruleId":"549","severity":1,"message":"621","line":30,"column":8,"nodeType":"551","endLine":30,"endColumn":17,"suggestions":"622"},{"ruleId":"549","severity":1,"message":"623","line":33,"column":8,"nodeType":"551","endLine":33,"endColumn":17,"suggestions":"624"},{"ruleId":"549","severity":1,"message":"625","line":36,"column":8,"nodeType":"551","endLine":36,"endColumn":17,"suggestions":"626"},{"ruleId":"549","severity":1,"message":"627","line":39,"column":8,"nodeType":"551","endLine":39,"endColumn":17,"suggestions":"628"},{"ruleId":"549","severity":1,"message":"629","line":42,"column":8,"nodeType":"551","endLine":42,"endColumn":17,"suggestions":"630"},{"ruleId":"549","severity":1,"message":"631","line":45,"column":8,"nodeType":"551","endLine":45,"endColumn":17,"suggestions":"632"},{"ruleId":"518","severity":1,"message":"540","line":105,"column":12,"nodeType":"520","messageId":"521","endLine":105,"endColumn":17},{"ruleId":"518","severity":1,"message":"543","line":109,"column":11,"nodeType":"520","messageId":"521","endLine":109,"endColumn":22},{"ruleId":"518","severity":1,"message":"613","line":113,"column":12,"nodeType":"520","messageId":"521","endLine":113,"endColumn":16},{"ruleId":"518","severity":1,"message":"614","line":114,"column":11,"nodeType":"520","messageId":"521","endLine":114,"endColumn":26},{"ruleId":"518","severity":1,"message":"615","line":117,"column":11,"nodeType":"520","messageId":"521","endLine":117,"endColumn":22},{"ruleId":"596","severity":1,"message":"597","line":303,"column":5,"nodeType":"598","messageId":"599","endLine":303,"endColumn":9},{"ruleId":"518","severity":1,"message":"633","line":2,"column":30,"nodeType":"520","messageId":"521","endLine":2,"endColumn":46},{"ruleId":"518","severity":1,"message":"634","line":2,"column":124,"nodeType":"520","messageId":"521","endLine":2,"endColumn":139},{"ruleId":"518","severity":1,"message":"635","line":2,"column":141,"nodeType":"520","messageId":"521","endLine":2,"endColumn":154},{"ruleId":"518","severity":1,"message":"636","line":123,"column":15,"nodeType":"520","messageId":"521","endLine":123,"endColumn":18},{"ruleId":"518","severity":1,"message":"636","line":165,"column":15,"nodeType":"520","messageId":"521","endLine":165,"endColumn":18},{"ruleId":"518","severity":1,"message":"636","line":187,"column":15,"nodeType":"520","messageId":"521","endLine":187,"endColumn":18},{"ruleId":"549","severity":1,"message":"637","line":84,"column":7,"nodeType":"551","endLine":84,"endColumn":16,"suggestions":"638"},{"ruleId":"596","severity":1,"message":"639","line":336,"column":3,"nodeType":"598","messageId":"599","endLine":336,"endColumn":7},{"ruleId":"596","severity":1,"message":"640","line":337,"column":3,"nodeType":"598","messageId":"599","endLine":337,"endColumn":11},{"ruleId":"518","severity":1,"message":"636","line":81,"column":15,"nodeType":"520","messageId":"521","endLine":81,"endColumn":18},{"ruleId":"518","severity":1,"message":"641","line":1,"column":88,"nodeType":"520","messageId":"521","endLine":1,"endColumn":101},{"ruleId":"518","severity":1,"message":"636","line":55,"column":15,"nodeType":"520","messageId":"521","endLine":55,"endColumn":18},{"ruleId":"642","severity":1,"message":"643","line":131,"column":1,"nodeType":"644","messageId":"645","endLine":137,"endColumn":5},{"ruleId":"518","severity":1,"message":"618","line":3,"column":26,"nodeType":"520","messageId":"521","endLine":3,"endColumn":31},{"ruleId":"518","severity":1,"message":"538","line":25,"column":12,"nodeType":"520","messageId":"521","endLine":25,"endColumn":17},{"ruleId":"518","severity":1,"message":"595","line":26,"column":11,"nodeType":"520","messageId":"521","endLine":26,"endColumn":27},{"ruleId":"518","severity":1,"message":"539","line":32,"column":11,"nodeType":"520","messageId":"521","endLine":32,"endColumn":23},{"ruleId":"564","severity":1,"message":"565","line":68,"column":26,"nodeType":"554","messageId":"566","endLine":68,"endColumn":28},{"ruleId":"564","severity":1,"message":"565","line":68,"column":39,"nodeType":"554","messageId":"566","endLine":68,"endColumn":41},{"ruleId":"549","severity":1,"message":"646","line":69,"column":8,"nodeType":"551","endLine":69,"endColumn":17,"suggestions":"647"},{"ruleId":"564","severity":1,"message":"565","line":71,"column":25,"nodeType":"554","messageId":"566","endLine":71,"endColumn":27},{"ruleId":"564","severity":1,"message":"565","line":71,"column":38,"nodeType":"554","messageId":"566","endLine":71,"endColumn":40},{"ruleId":"549","severity":1,"message":"648","line":72,"column":8,"nodeType":"551","endLine":72,"endColumn":17,"suggestions":"649"},{"ruleId":"564","severity":1,"message":"565","line":74,"column":27,"nodeType":"554","messageId":"566","endLine":74,"endColumn":29},{"ruleId":"564","severity":1,"message":"565","line":74,"column":40,"nodeType":"554","messageId":"566","endLine":74,"endColumn":42},{"ruleId":"549","severity":1,"message":"650","line":75,"column":8,"nodeType":"551","endLine":75,"endColumn":17,"suggestions":"651"},{"ruleId":"564","severity":1,"message":"565","line":77,"column":26,"nodeType":"554","messageId":"566","endLine":77,"endColumn":28},{"ruleId":"564","severity":1,"message":"565","line":77,"column":39,"nodeType":"554","messageId":"566","endLine":77,"endColumn":41},{"ruleId":"549","severity":1,"message":"652","line":78,"column":8,"nodeType":"551","endLine":78,"endColumn":17,"suggestions":"653"},{"ruleId":"527","severity":1,"message":"528","line":143,"column":17,"nodeType":"529","endLine":143,"endColumn":43},{"ruleId":"518","severity":1,"message":"654","line":8,"column":10,"nodeType":"520","messageId":"521","endLine":8,"endColumn":21},{"ruleId":"518","severity":1,"message":"655","line":28,"column":8,"nodeType":"520","messageId":"521","endLine":28,"endColumn":13},{"ruleId":"518","severity":1,"message":"656","line":28,"column":14,"nodeType":"520","messageId":"521","endLine":28,"endColumn":22},{"ruleId":"518","severity":1,"message":"657","line":29,"column":15,"nodeType":"520","messageId":"521","endLine":29,"endColumn":24},{"ruleId":"518","severity":1,"message":"658","line":33,"column":7,"nodeType":"520","messageId":"521","endLine":33,"endColumn":10},{"ruleId":"581","severity":1,"message":"582","line":45,"column":29,"nodeType":"583","endLine":45,"endColumn":163},{"ruleId":"518","severity":1,"message":"617","line":7,"column":26,"nodeType":"520","messageId":"521","endLine":7,"endColumn":30},{"ruleId":"518","severity":1,"message":"659","line":10,"column":11,"nodeType":"520","messageId":"521","endLine":10,"endColumn":22},{"ruleId":"518","severity":1,"message":"538","line":22,"column":12,"nodeType":"520","messageId":"521","endLine":22,"endColumn":17},{"ruleId":"518","severity":1,"message":"595","line":23,"column":11,"nodeType":"520","messageId":"521","endLine":23,"endColumn":27},{"ruleId":"518","severity":1,"message":"539","line":29,"column":11,"nodeType":"520","messageId":"521","endLine":29,"endColumn":23},{"ruleId":"564","severity":1,"message":"565","line":50,"column":26,"nodeType":"554","messageId":"566","endLine":50,"endColumn":28},{"ruleId":"564","severity":1,"message":"565","line":50,"column":39,"nodeType":"554","messageId":"566","endLine":50,"endColumn":41},{"ruleId":"549","severity":1,"message":"646","line":51,"column":8,"nodeType":"551","endLine":51,"endColumn":17,"suggestions":"660"},{"ruleId":"564","severity":1,"message":"565","line":53,"column":25,"nodeType":"554","messageId":"566","endLine":53,"endColumn":27},{"ruleId":"564","severity":1,"message":"565","line":53,"column":38,"nodeType":"554","messageId":"566","endLine":53,"endColumn":40},{"ruleId":"549","severity":1,"message":"648","line":54,"column":8,"nodeType":"551","endLine":54,"endColumn":17,"suggestions":"661"},{"ruleId":"564","severity":1,"message":"565","line":56,"column":27,"nodeType":"554","messageId":"566","endLine":56,"endColumn":29},{"ruleId":"564","severity":1,"message":"565","line":56,"column":40,"nodeType":"554","messageId":"566","endLine":56,"endColumn":42},{"ruleId":"549","severity":1,"message":"650","line":57,"column":8,"nodeType":"551","endLine":57,"endColumn":17,"suggestions":"662"},{"ruleId":"564","severity":1,"message":"565","line":59,"column":26,"nodeType":"554","messageId":"566","endLine":59,"endColumn":28},{"ruleId":"564","severity":1,"message":"565","line":59,"column":39,"nodeType":"554","messageId":"566","endLine":59,"endColumn":41},{"ruleId":"549","severity":1,"message":"652","line":60,"column":8,"nodeType":"551","endLine":60,"endColumn":17,"suggestions":"663"},{"ruleId":"596","severity":1,"message":"616","line":168,"column":5,"nodeType":"598","messageId":"599","endLine":168,"endColumn":15},"no-native-reassign",["664"],"no-negated-in-lhs",["665"],"no-unused-vars","'getMyinvitations' is defined but never used.","Identifier","unusedVar","'getcategories' is defined but never used.","'Myinvitations' is defined but never used.","'getCategories' is defined but never used.","'SUBSCRIBE' is defined but never used.","'GET_MY_PRODUCTS' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'PersonAddIcon' is defined but never used.","'MdCancel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'handleChange' is assigned a value but never used.","'open1' is assigned a value but never used.","'handleClose1' is assigned a value but never used.","'open2' is assigned a value but never used.","'setOpen2' is assigned a value but never used.","'handleClose2' is assigned a value but never used.","'handleOpen2' is assigned a value but never used.","'Container' is defined but never used.","'IoBagCheckOutline' is defined but never used.","'Single' is defined but never used.","'NavLink' is defined but never used.","'Carousel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'event.next_event' and 'getevent'. Either include them or remove the dependency array. If 'getevent' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["666"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useCallback has missing dependencies: 'event.previous_event' and 'getevent'. Either include them or remove the dependency array. If 'getevent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["667"],"'setOpen1' is assigned a value but never used.","'open3' is assigned a value but never used.","'handleClose3' is assigned a value but never used.","'handleOpen3' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setText' is assigned a value but never used.","'setdisable' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","unexpectedMixedOperator","React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array. If 'setlocation1' needs the current value of 'event', you can also switch to useReducer instead of useState and read 'event' in the reducer.",["668"],"React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array. If 'setname' needs the current value of 'event', you can also switch to useReducer instead of useState and read 'event' in the reducer.",["669"],"React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array. If 'setdescription' needs the current value of 'event', you can also switch to useReducer instead of useState and read 'event' in the reducer.",["670"],"React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array. If 'setvideolink' needs the current value of 'event', you can also switch to useReducer instead of useState and read 'event' in the reducer.",["671"],"React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array. If 'setStatus' needs the current value of 'event', you can also switch to useReducer instead of useState and read 'event' in the reducer.",["672"],"React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array. If 'setdate' needs the current value of 'event', you can also switch to useReducer instead of useState and read 'event' in the reducer.",["673"],"React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array. If 'setcover' needs the current value of 'event', you can also switch to useReducer instead of useState and read 'event' in the reducer.",["674"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Table' is defined but never used.","'oncategorychange' is assigned a value but never used.","'handleOpen1' is assigned a value but never used.","'category_id' is assigned a value but never used.","'status' is assigned a value but never used.","'onstatuschange' is assigned a value but never used.","'useState' is defined but never used.","'DialogContent' is defined but never used.","'FormControl' is defined but never used.","'Avatar' is defined but never used.","'SingleProduct' is defined but never used.","'handleClickOpen1' is assigned a value but never used.","no-dupe-keys","Duplicate key 'auth'.","ObjectExpression","unexpected","Duplicate key 'updateProduct'.","'DECREASE' is defined but never used.","'INCREASE' is defined but never used.","'CLEAR_CART' is defined but never used.","'REMOVE' is defined but never used.","'GET_TOTALS' is defined but never used.","'TOGGLE_AMOUNT' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Pause' is defined but never used.","'propTypes' is defined but never used.","'UpdateIcon' is defined but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","Duplicate key 'addReplies'.","'Card' is defined but never used.","'Image' is defined but never used.","React Hook useEffect has a missing dependency: 'product.name'. Either include it or remove the dependency array. If 'setname' needs the current value of 'product.name', you can also switch to useReducer instead of useState and read 'product.name' in the reducer.",["675"],"React Hook useEffect has a missing dependency: 'product.category_id'. Either include it or remove the dependency array. If 'setcategoryid' needs the current value of 'product.category_id', you can also switch to useReducer instead of useState and read 'product.category_id' in the reducer.",["676"],"React Hook useEffect has a missing dependency: 'product.description'. Either include it or remove the dependency array. If 'setdescription' needs the current value of 'product.description', you can also switch to useReducer instead of useState and read 'product.description' in the reducer.",["677"],"React Hook useEffect has a missing dependency: 'product.status'. Either include it or remove the dependency array. If 'setStatus' needs the current value of 'product.status', you can also switch to useReducer instead of useState and read 'product.status' in the reducer.",["678"],"React Hook useEffect has a missing dependency: 'product.image'. Either include it or remove the dependency array. If 'setimage' needs the current value of 'product.image', you can also switch to useReducer instead of useState and read 'product.image' in the reducer.",["679"],"React Hook useEffect has a missing dependency: 'product.stock'. Either include it or remove the dependency array. If 'setstock' needs the current value of 'product.stock', you can also switch to useReducer instead of useState and read 'product.stock' in the reducer.",["680"],"React Hook useEffect has a missing dependency: 'product.price'. Either include it or remove the dependency array. If 'setprice' needs the current value of 'product.price', you can also switch to useReducer instead of useState and read 'product.price' in the reducer.",["681"],"'DELETE_PROD_CART' is defined but never used.","'PAYMENT_SUCCESS' is defined but never used.","'PAYMENT_ERROR' is defined but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'post.description'. Either include it or remove the dependency array. If 'setFormData' needs the current value of 'post.description', you can also switch to useReducer instead of useState and read 'post.description' in the reducer.",["682"],"Duplicate key 'Post'.","Duplicate key 'getPosts'.","'UPDATE_THREAD' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'threads'. Either include it or remove the dependency array. If 'settitle' needs the current value of 'threads', you can also switch to useReducer instead of useState and read 'threads' in the reducer.",["683"],"React Hook useEffect has a missing dependency: 'threads'. Either include it or remove the dependency array. If 'setbody' needs the current value of 'threads', you can also switch to useReducer instead of useState and read 'threads' in the reducer.",["684"],"React Hook useEffect has a missing dependency: 'threads'. Either include it or remove the dependency array. If 'setStatus' needs the current value of 'threads', you can also switch to useReducer instead of useState and read 'threads' in the reducer.",["685"],"React Hook useEffect has a missing dependency: 'threads'. Either include it or remove the dependency array. If 'setimage' needs the current value of 'threads', you can also switch to useReducer instead of useState and read 'threads' in the reducer.",["686"],"'GrAddCircle' is defined but never used.","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'setTotal1' is assigned a value but never used.","'sum' is assigned a value but never used.","'handleToken' is assigned a value but never used.",["687"],["688"],["689"],["690"],"no-global-assign","no-unsafe-negation",{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},{"desc":"695","fix":"697"},{"desc":"695","fix":"698"},{"desc":"695","fix":"699"},{"desc":"695","fix":"700"},{"desc":"695","fix":"701"},{"desc":"695","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"719","fix":"721"},{"desc":"719","fix":"722"},{"desc":"719","fix":"723"},{"desc":"719","fix":"724"},{"desc":"719","fix":"725"},{"desc":"719","fix":"726"},{"desc":"719","fix":"727"},"Update the dependencies array to be: [event.next_event, getevent]",{"range":"728","text":"729"},"Update the dependencies array to be: [event.previous_event, getevent]",{"range":"730","text":"731"},"Update the dependencies array to be: [event, loading]",{"range":"732","text":"733"},{"range":"734","text":"733"},{"range":"735","text":"733"},{"range":"736","text":"733"},{"range":"737","text":"733"},{"range":"738","text":"733"},{"range":"739","text":"733"},"Update the dependencies array to be: [loading, product.name]",{"range":"740","text":"741"},"Update the dependencies array to be: [loading, product.category_id]",{"range":"742","text":"743"},"Update the dependencies array to be: [loading, product.description]",{"range":"744","text":"745"},"Update the dependencies array to be: [loading, product.status]",{"range":"746","text":"747"},"Update the dependencies array to be: [loading, product.image]",{"range":"748","text":"749"},"Update the dependencies array to be: [loading, product.stock]",{"range":"750","text":"751"},"Update the dependencies array to be: [loading, product.price]",{"range":"752","text":"753"},"Update the dependencies array to be: [loading, post.description]",{"range":"754","text":"755"},"Update the dependencies array to be: [loading, threads]",{"range":"756","text":"757"},{"range":"758","text":"757"},{"range":"759","text":"757"},{"range":"760","text":"757"},{"range":"761","text":"757"},{"range":"762","text":"757"},{"range":"763","text":"757"},{"range":"764","text":"757"},[2332,2359],"[event.next_event, getevent]",[2456,2487],"[event.previous_event, getevent]",[4498,4507],"[event, loading]",[4610,4619],[4743,4752],[4908,4917],[5025,5034],[5137,5146],[5254,5263],[1286,1295],"[loading, product.name]",[1411,1420],"[loading, product.category_id]",[1537,1546],"[loading, product.description]",[1647,1656],"[loading, product.status]",[1755,1764],"[loading, product.image]",[1863,1872],"[loading, product.stock]",[1971,1980],"[loading, product.price]",[2550,2559],"[loading, post.description]",[2552,2561],"[loading, threads]",[2680,2689],[2813,2822],[2945,2954],[1883,1892],[2011,2020],[2144,2153],[2276,2285]]